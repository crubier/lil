/*
* generated by Xtext
*/
grammar InternalLil;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.crubier.lil.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.crubier.lil.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.crubier.lil.services.LilGrammarAccess;

}

@parser::members {

 	private LilGrammarAccess grammarAccess;
 	
    public InternalLilParser(TokenStream input, LilGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "LilModel";	
   	}
   	
   	@Override
   	protected LilGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleLilModel
entryRuleLilModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLilModelRule()); }
	 iv_ruleLilModel=ruleLilModel 
	 { $current=$iv_ruleLilModel.current; } 
	 EOF 
;

// Rule LilModel
ruleLilModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLilModelAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLilModelAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLilModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLilModelAccess().getImportsImportStatementParserRuleCall_2_0()); 
	    }
		lv_imports_2_0=ruleImportStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLilModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_2_0, 
        		"ImportStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getLilModelAccess().getActorTypeActorTypeDefinitionParserRuleCall_3_0_0()); 
	    }
		lv_actorType_3_0=ruleActorTypeDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLilModelRule());
	        }
       		add(
       			$current, 
       			"actorType",
        		lv_actorType_3_0, 
        		"ActorTypeDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLilModelAccess().getDataTypeDataTypeDefinitionParserRuleCall_3_1_0()); 
	    }
		lv_dataType_4_0=ruleDataTypeDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLilModelRule());
	        }
       		add(
       			$current, 
       			"dataType",
        		lv_dataType_4_0, 
        		"DataTypeDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLilModelAccess().getInteractorTypeInteractorTypeDefinitionParserRuleCall_3_2_0()); 
	    }
		lv_interactorType_5_0=ruleInteractorTypeDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLilModelRule());
	        }
       		add(
       			$current, 
       			"interactorType",
        		lv_interactorType_5_0, 
        		"InteractorTypeDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleImportStatement
entryRuleImportStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportStatementRule()); }
	 iv_ruleImportStatement=ruleImportStatement 
	 { $current=$iv_ruleImportStatement.current; } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportStatementAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportStatementAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportStatementRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleActorTypeDefinition
entryRuleActorTypeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorTypeDefinitionRule()); }
	 iv_ruleActorTypeDefinition=ruleActorTypeDefinition 
	 { $current=$iv_ruleActorTypeDefinition.current; } 
	 EOF 
;

// Rule ActorTypeDefinition
ruleActorTypeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getActorTypeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorTypeDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='actor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActorTypeDefinitionAccess().getActorKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActorTypeDefinitionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorTypeDefinitionAccess().getComponentActorComponentDeclarationParserRuleCall_3_0()); 
	    }
		lv_component_3_0=ruleActorComponentDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorTypeDefinitionRule());
	        }
       		add(
       			$current, 
       			"component",
        		lv_component_3_0, 
        		"ActorComponentDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleActorType
entryRuleActorType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorTypeRule()); }
	 iv_ruleActorType=ruleActorType 
	 { $current=$iv_ruleActorType.current; } 
	 EOF 
;

// Rule ActorType
ruleActorType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getActorTypeAccess().getActorTypeInputAction_0_0(),
            $current);
    }
)	otherlv_1='input' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActorTypeAccess().getInputKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getActorTypeAccess().getActorTypeOutputAction_1_0(),
            $current);
    }
)	otherlv_3='output' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getActorTypeAccess().getOutputKeyword_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getActorTypeAccess().getActorTypeCustomAction_2_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorTypeRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getActorTypeAccess().getDefinitionActorTypeDefinitionCrossReference_2_1_0()); 
	}

)
)))
;





// Entry rule entryRuleActorComponentDeclaration
entryRuleActorComponentDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorComponentDeclarationRule()); }
	 iv_ruleActorComponentDeclaration=ruleActorComponentDeclaration 
	 { $current=$iv_ruleActorComponentDeclaration.current; } 
	 EOF 
;

// Rule ActorComponentDeclaration
ruleActorComponentDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getActorComponentDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorComponentDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActorComponentDeclarationAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorComponentDeclarationAccess().getTypeActorTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleActorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorComponentDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"ActorType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDataTypeDefinition
entryRuleDataTypeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeDefinitionRule()); }
	 iv_ruleDataTypeDefinition=ruleDataTypeDefinition 
	 { $current=$iv_ruleDataTypeDefinition.current; } 
	 EOF 
;

// Rule DataTypeDefinition
ruleDataTypeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeDefinitionAccess().getDataTypeDefinitionCompoundAction_0_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDataTypeDefinitionAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='data' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataTypeDefinitionAccess().getDataKeyword_0_2());
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataTypeDefinitionAccess().getColonKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getComponentDataComponentDeclarationParserRuleCall_0_4_0()); 
	    }
		lv_component_4_0=ruleDataComponentDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeDefinitionRule());
	        }
       		add(
       			$current, 
       			"component",
        		lv_component_4_0, 
        		"DataComponentDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeDefinitionAccess().getDataTypeDefinitionAliasAction_1_0(),
            $current);
    }
)(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getDataTypeDefinitionAccess().getNameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"ID");
	    }

)
)	otherlv_7='data' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDataTypeDefinitionAccess().getDataKeyword_1_2());
    }
	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDataTypeDefinitionAccess().getColonKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getAliasDataTypeParserRuleCall_1_4_0()); 
	    }
		lv_alias_9_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeDefinitionRule());
	        }
       		set(
       			$current, 
       			"alias",
        		lv_alias_9_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	 iv_ruleDataType=ruleDataType 
	 { $current=$iv_ruleDataType.current; } 
	 EOF 
;

// Rule DataType
ruleDataType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeAccess().getDataTypeVoidAction_0_0_0(),
            $current);
    }
)	otherlv_1='void' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeAccess().getVoidKeyword_0_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeAccess().getDataTypeBooleanAction_0_1_0(),
            $current);
    }
)	otherlv_3='boolean' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataTypeAccess().getBooleanKeyword_0_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeAccess().getDataTypeSymbolAction_0_2_0(),
            $current);
    }
)	otherlv_5='symbol' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataTypeAccess().getSymbolKeyword_0_2_1());
    }
(	otherlv_6='in' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDataTypeAccess().getInKeyword_0_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAccess().getDefinitionSetDataTypeSymbolDefinitionSetParserRuleCall_0_2_2_1_0()); 
	    }
		lv_definitionSet_7_0=ruleDataTypeSymbolDefinitionSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRule());
	        }
       		set(
       			$current, 
       			"definitionSet",
        		lv_definitionSet_7_0, 
        		"DataTypeSymbolDefinitionSet");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeAccess().getDataTypeNumberAction_0_3_0(),
            $current);
    }
)	otherlv_9='number' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDataTypeAccess().getNumberKeyword_0_3_1());
    }
(	otherlv_10='in' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDataTypeAccess().getInKeyword_0_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAccess().getDefinitionSetDataTypeNumberDefinitionSetParserRuleCall_0_3_2_1_0()); 
	    }
		lv_definitionSet_11_0=ruleDataTypeNumberDefinitionSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRule());
	        }
       		set(
       			$current, 
       			"definitionSet",
        		lv_definitionSet_11_0, 
        		"DataTypeNumberDefinitionSet");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeAccess().getDataTypeTextAction_0_4_0(),
            $current);
    }
)	otherlv_13='text' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDataTypeAccess().getTextKeyword_0_4_1());
    }
(	otherlv_14='in' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDataTypeAccess().getInKeyword_0_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAccess().getDefinitionSetDataTypeTextDefinitionSetParserRuleCall_0_4_2_1_0()); 
	    }
		lv_definitionSet_15_0=ruleDataTypeTextDefinitionSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRule());
	        }
       		set(
       			$current, 
       			"definitionSet",
        		lv_definitionSet_15_0, 
        		"DataTypeTextDefinitionSet");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeAccess().getDataTypeTimeAction_0_5_0(),
            $current);
    }
)	otherlv_17='time' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getDataTypeAccess().getTimeKeyword_0_5_1());
    }
(	otherlv_18='in' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDataTypeAccess().getInKeyword_0_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAccess().getDefinitionSetDataTypeTimeDefinitionSetParserRuleCall_0_5_2_1_0()); 
	    }
		lv_definitionSet_19_0=ruleDataTypeTimeDefinitionSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRule());
	        }
       		set(
       			$current, 
       			"definitionSet",
        		lv_definitionSet_19_0, 
        		"DataTypeTimeDefinitionSet");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeAccess().getDataTypeIdentifierAction_0_6_0(),
            $current);
    }
)	otherlv_21='identifier' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getDataTypeAccess().getIdentifierKeyword_0_6_1());
    }
(	otherlv_22='in' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getDataTypeAccess().getInKeyword_0_6_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAccess().getDefinitionSetDataTypeIdentifierDefinitionSetParserRuleCall_0_6_2_1_0()); 
	    }
		lv_definitionSet_23_0=ruleDataTypeIdentifierDefinitionSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRule());
	        }
       		set(
       			$current, 
       			"definitionSet",
        		lv_definitionSet_23_0, 
        		"DataTypeIdentifierDefinitionSet");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeAccess().getDataTypeCustomAction_0_7_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeRule());
	        }
        }
	otherlv_25=RULE_ID
	{
		newLeafNode(otherlv_25, grammarAccess.getDataTypeAccess().getDefinitionDataTypeDefinitionCrossReference_0_7_1_0()); 
	}

)
)))((((
)	'collection' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getDataTypeAccess().getDataTypeCollectionElementTypeAction_1_0_0(),
            $current);
    }
)	otherlv_27='collection' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getDataTypeAccess().getCollectionKeyword_1_0_1());
    }
))*((((
)	'set' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getDataTypeAccess().getDataTypeSetElementTypeAction_2_0_0(),
            $current);
    }
)	otherlv_29='set' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getDataTypeAccess().getSetKeyword_2_0_1());
    }
))*((((
)	'list' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getDataTypeAccess().getDataTypeListElementTypeAction_3_0_0(),
            $current);
    }
)	otherlv_31='list' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getDataTypeAccess().getListKeyword_3_0_1());
    }
))*((((
)	'queue' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getDataTypeAccess().getDataTypeQueueElementTypeAction_4_0_0(),
            $current);
    }
)	otherlv_33='queue' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getDataTypeAccess().getQueueKeyword_4_0_1());
    }
))*)
;





// Entry rule entryRuleDataTypeSymbolDefinitionSet
entryRuleDataTypeSymbolDefinitionSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeSymbolDefinitionSetRule()); }
	 iv_ruleDataTypeSymbolDefinitionSet=ruleDataTypeSymbolDefinitionSet 
	 { $current=$iv_ruleDataTypeSymbolDefinitionSet.current; } 
	 EOF 
;

// Rule DataTypeSymbolDefinitionSet
ruleDataTypeSymbolDefinitionSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataTypeSymbolDefinitionSetAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeSymbolDefinitionSetAccess().getElementDataTypeSymbolDefinitionSetElementParserRuleCall_1_0()); 
	    }
		lv_element_1_0=ruleDataTypeSymbolDefinitionSetElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeSymbolDefinitionSetRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_1_0, 
        		"DataTypeSymbolDefinitionSetElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataTypeSymbolDefinitionSetAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeSymbolDefinitionSetAccess().getElementDataTypeSymbolDefinitionSetElementParserRuleCall_2_1_0()); 
	    }
		lv_element_3_0=ruleDataTypeSymbolDefinitionSetElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeSymbolDefinitionSetRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_3_0, 
        		"DataTypeSymbolDefinitionSetElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataTypeSymbolDefinitionSetAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleDataTypeSymbolDefinitionSetElement
entryRuleDataTypeSymbolDefinitionSetElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeSymbolDefinitionSetElementRule()); }
	 iv_ruleDataTypeSymbolDefinitionSetElement=ruleDataTypeSymbolDefinitionSetElement 
	 { $current=$iv_ruleDataTypeSymbolDefinitionSetElement.current; } 
	 EOF 
;

// Rule DataTypeSymbolDefinitionSetElement
ruleDataTypeSymbolDefinitionSetElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeSymbolDefinitionSetElementAccess().getDataTypeSymbolDefinitionSetElementAction_0(),
            $current);
    }
)	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeSymbolDefinitionSetElementAccess().getNumberSignKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getDataTypeSymbolDefinitionSetElementAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeSymbolDefinitionSetElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleDataTypeNumberDefinitionSet
entryRuleDataTypeNumberDefinitionSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeNumberDefinitionSetRule()); }
	 iv_ruleDataTypeNumberDefinitionSet=ruleDataTypeNumberDefinitionSet 
	 { $current=$iv_ruleDataTypeNumberDefinitionSet.current; } 
	 EOF 
;

// Rule DataTypeNumberDefinitionSet
ruleDataTypeNumberDefinitionSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeNumberDefinitionSetAccess().getDataTypeNumberDefinitionSetSetAction_0_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeNumberDefinitionSetAccess().getLeftCurlyBracketKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeNumberDefinitionSetAccess().getElementLiteralNumberParserRuleCall_0_2_0()); 
	    }
		lv_element_2_0=ruleLiteralNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeNumberDefinitionSetRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_2_0, 
        		"LiteralNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataTypeNumberDefinitionSetAccess().getCommaKeyword_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeNumberDefinitionSetAccess().getElementLiteralNumberParserRuleCall_0_3_1_0()); 
	    }
		lv_element_4_0=ruleLiteralNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeNumberDefinitionSetRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_4_0, 
        		"LiteralNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataTypeNumberDefinitionSetAccess().getRightCurlyBracketKeyword_0_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeNumberDefinitionSetAccess().getDataTypeNumberDefinitionSetIntervalAction_1_0(),
            $current);
    }
)	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDataTypeNumberDefinitionSetAccess().getLeftSquareBracketKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeNumberDefinitionSetAccess().getInfLiteralNumberParserRuleCall_1_2_0()); 
	    }
		lv_inf_8_0=ruleLiteralNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeNumberDefinitionSetRule());
	        }
       		set(
       			$current, 
       			"inf",
        		lv_inf_8_0, 
        		"LiteralNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDataTypeNumberDefinitionSetAccess().getCommaKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeNumberDefinitionSetAccess().getSupLiteralNumberParserRuleCall_1_4_0()); 
	    }
		lv_sup_10_0=ruleLiteralNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeNumberDefinitionSetRule());
	        }
       		set(
       			$current, 
       			"sup",
        		lv_sup_10_0, 
        		"LiteralNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDataTypeNumberDefinitionSetAccess().getRightSquareBracketKeyword_1_5());
    }
))
;





// Entry rule entryRuleDataTypeTextDefinitionSet
entryRuleDataTypeTextDefinitionSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeTextDefinitionSetRule()); }
	 iv_ruleDataTypeTextDefinitionSet=ruleDataTypeTextDefinitionSet 
	 { $current=$iv_ruleDataTypeTextDefinitionSet.current; } 
	 EOF 
;

// Rule DataTypeTextDefinitionSet
ruleDataTypeTextDefinitionSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeTextDefinitionSetAccess().getDataTypeTextDefinitionSetSetAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeTextDefinitionSetAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeTextDefinitionSetAccess().getElementLiteralTextParserRuleCall_2_0()); 
	    }
		lv_element_2_0=ruleLiteralText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeTextDefinitionSetRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_2_0, 
        		"LiteralText");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataTypeTextDefinitionSetAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeTextDefinitionSetAccess().getElementLiteralTextParserRuleCall_3_1_0()); 
	    }
		lv_element_4_0=ruleLiteralText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeTextDefinitionSetRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_4_0, 
        		"LiteralText");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataTypeTextDefinitionSetAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDataTypeTimeDefinitionSet
entryRuleDataTypeTimeDefinitionSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeTimeDefinitionSetRule()); }
	 iv_ruleDataTypeTimeDefinitionSet=ruleDataTypeTimeDefinitionSet 
	 { $current=$iv_ruleDataTypeTimeDefinitionSet.current; } 
	 EOF 
;

// Rule DataTypeTimeDefinitionSet
ruleDataTypeTimeDefinitionSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeTimeDefinitionSetAccess().getDataTypeTimeDefinitionSetSetAction_0_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeTimeDefinitionSetAccess().getLeftCurlyBracketKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeTimeDefinitionSetAccess().getElementLiteralTimeParserRuleCall_0_2_0()); 
	    }
		lv_element_2_0=ruleLiteralTime		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeTimeDefinitionSetRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_2_0, 
        		"LiteralTime");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataTypeTimeDefinitionSetAccess().getCommaKeyword_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeTimeDefinitionSetAccess().getElementLiteralTimeParserRuleCall_0_3_1_0()); 
	    }
		lv_element_4_0=ruleLiteralTime		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeTimeDefinitionSetRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_4_0, 
        		"LiteralTime");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataTypeTimeDefinitionSetAccess().getRightCurlyBracketKeyword_0_4());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeTimeDefinitionSetAccess().getDataTypeTimeDefinitionSetIntervalAction_1_0(),
            $current);
    }
)	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDataTypeTimeDefinitionSetAccess().getLeftSquareBracketKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeTimeDefinitionSetAccess().getInfLiteralTimeParserRuleCall_1_2_0()); 
	    }
		lv_inf_8_0=ruleLiteralTime		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeTimeDefinitionSetRule());
	        }
       		set(
       			$current, 
       			"inf",
        		lv_inf_8_0, 
        		"LiteralTime");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDataTypeTimeDefinitionSetAccess().getCommaKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeTimeDefinitionSetAccess().getSupLiteralTimeParserRuleCall_1_4_0()); 
	    }
		lv_sup_10_0=ruleLiteralTime		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeTimeDefinitionSetRule());
	        }
       		set(
       			$current, 
       			"sup",
        		lv_sup_10_0, 
        		"LiteralTime");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDataTypeTimeDefinitionSetAccess().getRightSquareBracketKeyword_1_5());
    }
))
;





// Entry rule entryRuleDataTypeIdentifierDefinitionSet
entryRuleDataTypeIdentifierDefinitionSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeIdentifierDefinitionSetRule()); }
	 iv_ruleDataTypeIdentifierDefinitionSet=ruleDataTypeIdentifierDefinitionSet 
	 { $current=$iv_ruleDataTypeIdentifierDefinitionSet.current; } 
	 EOF 
;

// Rule DataTypeIdentifierDefinitionSet
ruleDataTypeIdentifierDefinitionSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataTypeIdentifierDefinitionSetAccess().getDataTypeIdentifierDefinitionSetSetAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeIdentifierDefinitionSetAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeIdentifierDefinitionSetAccess().getElementLiteralNumberParserRuleCall_2_0()); 
	    }
		lv_element_2_0=ruleLiteralNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeIdentifierDefinitionSetRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_2_0, 
        		"LiteralNumber");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataTypeIdentifierDefinitionSetAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeIdentifierDefinitionSetAccess().getElementLiteralNumberParserRuleCall_3_1_0()); 
	    }
		lv_element_4_0=ruleLiteralNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeIdentifierDefinitionSetRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_4_0, 
        		"LiteralNumber");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataTypeIdentifierDefinitionSetAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDataComponentDeclaration
entryRuleDataComponentDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataComponentDeclarationRule()); }
	 iv_ruleDataComponentDeclaration=ruleDataComponentDeclaration 
	 { $current=$iv_ruleDataComponentDeclaration.current; } 
	 EOF 
;

// Rule DataComponentDeclaration
ruleDataComponentDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getDataComponentDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataComponentDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataComponentDeclarationAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataComponentDeclarationAccess().getTypeDataTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataComponentDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInteractorTypeDefinition
entryRuleInteractorTypeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorTypeDefinitionRule()); }
	 iv_ruleInteractorTypeDefinition=ruleInteractorTypeDefinition 
	 { $current=$iv_ruleInteractorTypeDefinition.current; } 
	 EOF 
;

// Rule InteractorTypeDefinition
ruleInteractorTypeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getInteractorTypeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorTypeDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='interactor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInteractorTypeDefinitionAccess().getInteractorKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInteractorTypeDefinitionAccess().getColonKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorTypeDefinitionAccess().getActorInteractorActorDeclarationParserRuleCall_3_0_0()); 
	    }
		lv_actor_3_0=ruleInteractorActorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorTypeDefinitionRule());
	        }
       		add(
       			$current, 
       			"actor",
        		lv_actor_3_0, 
        		"InteractorActorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorTypeDefinitionAccess().getDataInteractorDataDeclarationParserRuleCall_3_1_0()); 
	    }
		lv_data_4_0=ruleInteractorDataDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorTypeDefinitionRule());
	        }
       		add(
       			$current, 
       			"data",
        		lv_data_4_0, 
        		"InteractorDataDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorTypeDefinitionAccess().getInteractorInteractorInteractorDeclarationParserRuleCall_3_2_0()); 
	    }
		lv_interactor_5_0=ruleInteractorInteractorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorTypeDefinitionRule());
	        }
       		add(
       			$current, 
       			"interactor",
        		lv_interactor_5_0, 
        		"InteractorInteractorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorTypeDefinitionAccess().getBehaviorInteractorBehaviorDeclarationParserRuleCall_3_3_0()); 
	    }
		lv_behavior_6_0=ruleInteractorBehaviorDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorTypeDefinitionRule());
	        }
       		add(
       			$current, 
       			"behavior",
        		lv_behavior_6_0, 
        		"InteractorBehaviorDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleInteractorType
entryRuleInteractorType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorTypeRule()); }
	 iv_ruleInteractorType=ruleInteractorType 
	 { $current=$iv_ruleInteractorType.current; } 
	 EOF 
;

// Rule InteractorType
ruleInteractorType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorTypeAccess().getInteractorTypeCustomAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorTypeRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getInteractorTypeAccess().getDefinitionInteractorTypeDefinitionCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleInteractorActorDeclaration
entryRuleInteractorActorDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorActorDeclarationRule()); }
	 iv_ruleInteractorActorDeclaration=ruleInteractorActorDeclaration 
	 { $current=$iv_ruleInteractorActorDeclaration.current; } 
	 EOF 
;

// Rule InteractorActorDeclaration
ruleInteractorActorDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorActorDeclarationAccess().getInteractorActorDeclarationAction_0(),
            $current);
    }
)((
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInteractorActorDeclarationAccess().getNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorActorDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInteractorActorDeclarationAccess().getColonKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorActorDeclarationAccess().getTypeActorTypeParserRuleCall_1_2_0()); 
	    }
		lv_type_3_0=ruleActorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorActorDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"ActorType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='actor' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInteractorActorDeclarationAccess().getActorKeyword_1_3());
    }
))
;





// Entry rule entryRuleInteractorInteractorDeclaration
entryRuleInteractorInteractorDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorInteractorDeclarationRule()); }
	 iv_ruleInteractorInteractorDeclaration=ruleInteractorInteractorDeclaration 
	 { $current=$iv_ruleInteractorInteractorDeclaration.current; } 
	 EOF 
;

// Rule InteractorInteractorDeclaration
ruleInteractorInteractorDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorInteractorDeclarationAccess().getInteractorInteractorDeclarationAction_0(),
            $current);
    }
)((
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInteractorInteractorDeclarationAccess().getNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorInteractorDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInteractorInteractorDeclarationAccess().getColonKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorInteractorDeclarationAccess().getTypeInteractorTypeParserRuleCall_1_2_0()); 
	    }
		lv_type_3_0=ruleInteractorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorInteractorDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"InteractorType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='interactor' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInteractorInteractorDeclarationAccess().getInteractorKeyword_1_3());
    }
(	otherlv_5='with' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInteractorInteractorDeclarationAccess().getWithKeyword_1_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorInteractorDeclarationAccess().getActorsInteractorActorAliasParserRuleCall_1_4_1_0()); 
	    }
		lv_actors_6_0=ruleInteractorActorAlias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorInteractorDeclarationRule());
	        }
       		add(
       			$current, 
       			"actors",
        		lv_actors_6_0, 
        		"InteractorActorAlias");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleInteractorDataDeclaration
entryRuleInteractorDataDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorDataDeclarationRule()); }
	 iv_ruleInteractorDataDeclaration=ruleInteractorDataDeclaration 
	 { $current=$iv_ruleInteractorDataDeclaration.current; } 
	 EOF 
;

// Rule InteractorDataDeclaration
ruleInteractorDataDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorDataDeclarationAccess().getInteractorDataDeclarationEventAction_0_0(),
            $current);
    }
)((
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInteractorDataDeclarationAccess().getNameIDTerminalRuleCall_0_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorDataDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInteractorDataDeclarationAccess().getColonKeyword_0_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorDataDeclarationAccess().getTypeDataTypeParserRuleCall_0_1_2_0()); 
	    }
		lv_type_3_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorDataDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='event' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInteractorDataDeclarationAccess().getEventKeyword_0_1_3());
    }
(	otherlv_5='from' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInteractorDataDeclarationAccess().getFromKeyword_0_1_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorDataDeclarationAccess().getSourceInteractorDataAliasParserRuleCall_0_1_4_1_0()); 
	    }
		lv_source_6_0=ruleInteractorDataAlias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorDataDeclarationRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_6_0, 
        		"InteractorDataAlias");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='to' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInteractorDataDeclarationAccess().getToKeyword_0_1_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorDataDeclarationAccess().getDestinationsInteractorDataAliasParserRuleCall_0_1_5_1_0()); 
	    }
		lv_destinations_8_0=ruleInteractorDataAlias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorDataDeclarationRule());
	        }
       		add(
       			$current, 
       			"destinations",
        		lv_destinations_8_0, 
        		"InteractorDataAlias");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorDataDeclarationAccess().getInteractorDataDeclarationFlowAction_1_0(),
            $current);
    }
)((
(
		lv_name_10_0=RULE_ID
		{
			newLeafNode(lv_name_10_0, grammarAccess.getInteractorDataDeclarationAccess().getNameIDTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorDataDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_10_0, 
        		"ID");
	    }

)
)	otherlv_11=':' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInteractorDataDeclarationAccess().getColonKeyword_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorDataDeclarationAccess().getTypeDataTypeParserRuleCall_1_1_2_0()); 
	    }
		lv_type_12_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorDataDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_12_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='flow' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInteractorDataDeclarationAccess().getFlowKeyword_1_1_3());
    }
(	otherlv_14='from' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInteractorDataDeclarationAccess().getFromKeyword_1_1_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorDataDeclarationAccess().getSourceInteractorDataAliasParserRuleCall_1_1_4_1_0()); 
	    }
		lv_source_15_0=ruleInteractorDataAlias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorDataDeclarationRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_15_0, 
        		"InteractorDataAlias");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_16='to' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getInteractorDataDeclarationAccess().getToKeyword_1_1_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorDataDeclarationAccess().getDestinationsInteractorDataAliasParserRuleCall_1_1_5_1_0()); 
	    }
		lv_destinations_17_0=ruleInteractorDataAlias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorDataDeclarationRule());
	        }
       		add(
       			$current, 
       			"destinations",
        		lv_destinations_17_0, 
        		"InteractorDataAlias");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorDataDeclarationAccess().getInteractorDataDeclarationConstantAction_2_0(),
            $current);
    }
)((
(
		lv_name_19_0=RULE_ID
		{
			newLeafNode(lv_name_19_0, grammarAccess.getInteractorDataDeclarationAccess().getNameIDTerminalRuleCall_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorDataDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_19_0, 
        		"ID");
	    }

)
)	otherlv_20=':' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getInteractorDataDeclarationAccess().getColonKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorDataDeclarationAccess().getTypeDataTypeParserRuleCall_2_1_2_0()); 
	    }
		lv_type_21_0=ruleDataType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorDataDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_21_0, 
        		"DataType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_22='constant' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getInteractorDataDeclarationAccess().getConstantKeyword_2_1_3());
    }
)))
;





// Entry rule entryRuleInteractorActorAlias
entryRuleInteractorActorAlias returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorActorAliasRule()); }
	 iv_ruleInteractorActorAlias=ruleInteractorActorAlias 
	 { $current=$iv_ruleInteractorActorAlias.current; } 
	 EOF 
;

// Rule InteractorActorAlias
ruleInteractorActorAlias returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorActorAliasRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getInteractorActorAliasAccess().getActorInteractorActorDeclarationCrossReference_0_0()); 
	}

)
)	otherlv_1='as' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInteractorActorAliasAccess().getAsKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorActorAliasRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getInteractorActorAliasAccess().getAliasInteractorActorDeclarationCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleInteractorDataAlias
entryRuleInteractorDataAlias returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorDataAliasRule()); }
	 iv_ruleInteractorDataAlias=ruleInteractorDataAlias 
	 { $current=$iv_ruleInteractorDataAlias.current; } 
	 EOF 
;

// Rule InteractorDataAlias
ruleInteractorDataAlias returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorDataAliasAccess().getEntityInteractorEntityParserRuleCall_0_0()); 
	    }
		lv_entity_0_0=ruleInteractorEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorDataAliasRule());
	        }
       		set(
       			$current, 
       			"entity",
        		lv_entity_0_0, 
        		"InteractorEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='as' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInteractorDataAliasAccess().getAsKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorDataAliasRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getInteractorDataAliasAccess().getAliasInteractorDataDeclarationCrossReference_1_1_0()); 
	}

)
))?)
;





// Entry rule entryRuleInteractorEntity
entryRuleInteractorEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorEntityRule()); }
	 iv_ruleInteractorEntity=ruleInteractorEntity 
	 { $current=$iv_ruleInteractorEntity.current; } 
	 EOF 
;

// Rule InteractorEntity
ruleInteractorEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorEntityAccess().getInteractorEntityAnyAction_0_0(),
            $current);
    }
)	otherlv_1='any' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInteractorEntityAccess().getAnyKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorEntityAccess().getInteractorEntitySelfAction_1_0(),
            $current);
    }
)	otherlv_3='self' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInteractorEntityAccess().getSelfKeyword_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorEntityAccess().getInteractorEntityOtherAction_2_0(),
            $current);
    }
)	otherlv_5='other' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInteractorEntityAccess().getOtherKeyword_2_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorEntityAccess().getInteractorEntityParentAction_3_0(),
            $current);
    }
)	otherlv_7='parent' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInteractorEntityAccess().getParentKeyword_3_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorEntityAccess().getInteractorEntityChildAction_4_0(),
            $current);
    }
)	otherlv_9='child' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInteractorEntityAccess().getChildKeyword_4_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorEntityAccess().getInteractorEntityAllAction_5_0(),
            $current);
    }
)	otherlv_11='all' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInteractorEntityAccess().getAllKeyword_5_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorEntityAccess().getInteractorEntityActorsAction_6_0(),
            $current);
    }
)	otherlv_13='actors' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInteractorEntityAccess().getActorsKeyword_6_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorEntityAccess().getInteractorEntitySpecificAction_7_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorEntityRule());
	        }
        }
	otherlv_15=RULE_ID
	{
		newLeafNode(otherlv_15, grammarAccess.getInteractorEntityAccess().getEntityInteractorEntityDeclarationCrossReference_7_1_0()); 
	}

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorEntityAccess().getInteractorEntityActorAction_8_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorEntityRule());
	        }
        }
	otherlv_17=RULE_ID
	{
		newLeafNode(otherlv_17, grammarAccess.getInteractorEntityAccess().getEntityInteractorActorDeclarationCrossReference_8_1_0()); 
	}

)
)	otherlv_18='actor' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getInteractorEntityAccess().getActorKeyword_8_2());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorEntityAccess().getInteractorEntityInteractorAction_9_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorEntityRule());
	        }
        }
	otherlv_20=RULE_ID
	{
		newLeafNode(otherlv_20, grammarAccess.getInteractorEntityAccess().getEntityInteractorInteractorDeclarationCrossReference_9_1_0()); 
	}

)
)	otherlv_21='interactor' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getInteractorEntityAccess().getInteractorKeyword_9_2());
    }
))
;





// Entry rule entryRuleInteractorDataReception
entryRuleInteractorDataReception returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorDataReceptionRule()); }
	 iv_ruleInteractorDataReception=ruleInteractorDataReception 
	 { $current=$iv_ruleInteractorDataReception.current; } 
	 EOF 
;

// Rule InteractorDataReception
ruleInteractorDataReception returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorDataReceptionAccess().getInteractorDataReceptionInternalAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorDataReceptionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getInteractorDataReceptionAccess().getDataInteractorDataDeclarationCrossReference_0_1_0()); 
	}

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorDataReceptionAccess().getInteractorDataReceptionExternalAction_1_0(),
            $current);
    }
)((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorDataReceptionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getInteractorDataReceptionAccess().getDataInteractorDataDeclarationCrossReference_1_1_0_0()); 
	}

)
)	otherlv_4='from' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInteractorDataReceptionAccess().getFromKeyword_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorDataReceptionAccess().getSourceInteractorDataAliasParserRuleCall_1_1_2_0()); 
	    }
		lv_source_5_0=ruleInteractorDataAlias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorDataReceptionRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_5_0, 
        		"InteractorDataAlias");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorDataReceptionAccess().getInteractorDataReceptionInitializationAction_2_0(),
            $current);
    }
)	otherlv_7='initialization' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInteractorDataReceptionAccess().getInitializationKeyword_2_1());
    }
))
;





// Entry rule entryRuleInteractorDataEmission
entryRuleInteractorDataEmission returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorDataEmissionRule()); }
	 iv_ruleInteractorDataEmission=ruleInteractorDataEmission 
	 { $current=$iv_ruleInteractorDataEmission.current; } 
	 EOF 
;

// Rule InteractorDataEmission
ruleInteractorDataEmission returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorDataEmissionAccess().getInteractorDataEmissionInternalAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorDataEmissionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getInteractorDataEmissionAccess().getDataInteractorDataDeclarationCrossReference_0_1_0()); 
	}

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorDataEmissionAccess().getInteractorDataEmissionExternalAction_1_0(),
            $current);
    }
)((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractorDataEmissionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getInteractorDataEmissionAccess().getDataInteractorDataDeclarationCrossReference_1_1_0_0()); 
	}

)
)	otherlv_4='to' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInteractorDataEmissionAccess().getToKeyword_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorDataEmissionAccess().getDestinationInteractorDataAliasParserRuleCall_1_1_2_0()); 
	    }
		lv_destination_5_0=ruleInteractorDataAlias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorDataEmissionRule());
	        }
       		set(
       			$current, 
       			"destination",
        		lv_destination_5_0, 
        		"InteractorDataAlias");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleInteractorBehaviorDeclaration
entryRuleInteractorBehaviorDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorBehaviorDeclarationRule()); }
	 iv_ruleInteractorBehaviorDeclaration=ruleInteractorBehaviorDeclaration 
	 { $current=$iv_ruleInteractorBehaviorDeclaration.current; } 
	 EOF 
;

// Rule InteractorBehaviorDeclaration
ruleInteractorBehaviorDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorBehaviorDeclarationAccess().getInteractorBehaviorDeclarationAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorDeclarationAccess().getCauseInteractorBehaviorCauseParserRuleCall_1_0()); 
	    }
		lv_cause_1_0=ruleInteractorBehaviorCause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorDeclarationRule());
	        }
       		set(
       			$current, 
       			"cause",
        		lv_cause_1_0, 
        		"InteractorBehaviorCause");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInteractorBehaviorDeclarationAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorDeclarationAccess().getEffectInteractorBehaviorEffectParserRuleCall_3_0()); 
	    }
		lv_effect_3_0=ruleInteractorBehaviorEffect		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorDeclarationRule());
	        }
       		add(
       			$current, 
       			"effect",
        		lv_effect_3_0, 
        		"InteractorBehaviorEffect");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleInteractorBehaviorCause
entryRuleInteractorBehaviorCause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorBehaviorCauseRule()); }
	 iv_ruleInteractorBehaviorCause=ruleInteractorBehaviorCause 
	 { $current=$iv_ruleInteractorBehaviorCause.current; } 
	 EOF 
;

// Rule InteractorBehaviorCause
ruleInteractorBehaviorCause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorBehaviorCauseAccess().getInteractorBehaviorCauseOnAction_0_0(),
            $current);
    }
)	otherlv_1='on' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInteractorBehaviorCauseAccess().getOnKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorCauseAccess().getEventInteractorDataReceptionParserRuleCall_0_2_0()); 
	    }
		lv_event_2_0=ruleInteractorDataReception		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorCauseRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_2_0, 
        		"InteractorDataReception");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='if' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInteractorBehaviorCauseAccess().getIfKeyword_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorCauseAccess().getGuardExpressionParserRuleCall_0_3_1_0()); 
	    }
		lv_guard_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorCauseRule());
	        }
       		set(
       			$current, 
       			"guard",
        		lv_guard_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorBehaviorCauseAccess().getInteractorBehaviorCauseWhenAction_1_0(),
            $current);
    }
)	otherlv_6='when' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInteractorBehaviorCauseAccess().getWhenKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorCauseAccess().getConditionExpressionParserRuleCall_1_2_0()); 
	    }
		lv_condition_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorCauseRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8='if' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInteractorBehaviorCauseAccess().getIfKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorCauseAccess().getGuardExpressionParserRuleCall_1_3_1_0()); 
	    }
		lv_guard_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorCauseRule());
	        }
       		set(
       			$current, 
       			"guard",
        		lv_guard_9_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleInteractorBehaviorEffect
entryRuleInteractorBehaviorEffect returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractorBehaviorEffectRule()); }
	 iv_ruleInteractorBehaviorEffect=ruleInteractorBehaviorEffect 
	 { $current=$iv_ruleInteractorBehaviorEffect.current; } 
	 EOF 
;

// Rule InteractorBehaviorEffect
ruleInteractorBehaviorEffect returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorBehaviorEffectAccess().getInteractorBehaviorEffectAlwaysAction_0_0(),
            $current);
    }
)(	otherlv_1='always' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInteractorBehaviorEffectAccess().getAlwaysKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorEffectAccess().getTargetInteractorDataEmissionParserRuleCall_0_1_1_0()); 
	    }
		lv_target_2_0=ruleInteractorDataEmission		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorEffectRule());
	        }
       		set(
       			$current, 
       			"target",
        		lv_target_2_0, 
        		"InteractorDataEmission");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInteractorBehaviorEffectAccess().getEqualsSignKeyword_0_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorEffectAccess().getValueExpressionParserRuleCall_0_1_3_0()); 
	    }
		lv_value_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorEffectRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorBehaviorEffectAccess().getInteractorBehaviorEffectSetAction_1_0(),
            $current);
    }
)(	otherlv_6='set' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInteractorBehaviorEffectAccess().getSetKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorEffectAccess().getTargetInteractorDataEmissionParserRuleCall_1_1_1_0()); 
	    }
		lv_target_7_0=ruleInteractorDataEmission		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorEffectRule());
	        }
       		set(
       			$current, 
       			"target",
        		lv_target_7_0, 
        		"InteractorDataEmission");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInteractorBehaviorEffectAccess().getEqualsSignKeyword_1_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorEffectAccess().getValueExpressionParserRuleCall_1_1_3_0()); 
	    }
		lv_value_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorEffectRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_9_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInteractorBehaviorEffectAccess().getInteractorBehaviorEffectTriggerAction_2_0(),
            $current);
    }
)(	otherlv_11='trigger' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInteractorBehaviorEffectAccess().getTriggerKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorEffectAccess().getTargetInteractorDataEmissionParserRuleCall_2_1_1_0()); 
	    }
		lv_target_12_0=ruleInteractorDataEmission		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorEffectRule());
	        }
       		set(
       			$current, 
       			"target",
        		lv_target_12_0, 
        		"InteractorDataEmission");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInteractorBehaviorEffectAccess().getEqualsSignKeyword_2_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInteractorBehaviorEffectAccess().getValueExpressionParserRuleCall_2_1_3_0()); 
	    }
		lv_value_14_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInteractorBehaviorEffectRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_14_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getExpressionOrParserRuleCall()); 
    }
    this_ExpressionOr_0=ruleExpressionOr
    { 
        $current = $this_ExpressionOr_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleExpressionOr
entryRuleExpressionOr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionOrRule()); }
	 iv_ruleExpressionOr=ruleExpressionOr 
	 { $current=$iv_ruleExpressionOr.current; } 
	 EOF 
;

// Rule ExpressionOr
ruleExpressionOr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionOrAccess().getExpressionAndParserRuleCall_0()); 
    }
    this_ExpressionAnd_0=ruleExpressionAnd
    { 
        $current = $this_ExpressionAnd_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleExpressionOrOp
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpressionOrAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionOrAccess().getFeatureExpressionOrOpParserRuleCall_1_0_0_1_0()); 
	    }
		lv_feature_2_0=ruleExpressionOrOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionOrRule());
	        }
       		set(
       			$current, 
       			"feature",
        		lv_feature_2_0, 
        		"ExpressionOrOp");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionOrAccess().getRightOperandExpressionAndParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleExpressionAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionOrRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"ExpressionAnd");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExpressionOrOp
entryRuleExpressionOrOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionOrOpRule()); } 
	 iv_ruleExpressionOrOp=ruleExpressionOrOp 
	 { $current=$iv_ruleExpressionOrOp.current.getText(); }  
	 EOF 
;

// Rule ExpressionOrOp
ruleExpressionOrOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='or' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionOrOpAccess().getOrKeyword()); 
    }

    ;





// Entry rule entryRuleExpressionAnd
entryRuleExpressionAnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionAndRule()); }
	 iv_ruleExpressionAnd=ruleExpressionAnd 
	 { $current=$iv_ruleExpressionAnd.current; } 
	 EOF 
;

// Rule ExpressionAnd
ruleExpressionAnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionAndAccess().getExpressionEqualityParserRuleCall_0()); 
    }
    this_ExpressionEquality_0=ruleExpressionEquality
    { 
        $current = $this_ExpressionEquality_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleExpressionAndOp
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpressionAndAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAndAccess().getFeatureExpressionAndOpParserRuleCall_1_0_0_1_0()); 
	    }
		lv_feature_2_0=ruleExpressionAndOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionAndRule());
	        }
       		set(
       			$current, 
       			"feature",
        		lv_feature_2_0, 
        		"ExpressionAndOp");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAndAccess().getRightOperandExpressionEqualityParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleExpressionEquality		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionAndRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"ExpressionEquality");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExpressionAndOp
entryRuleExpressionAndOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionAndOpRule()); } 
	 iv_ruleExpressionAndOp=ruleExpressionAndOp 
	 { $current=$iv_ruleExpressionAndOp.current.getText(); }  
	 EOF 
;

// Rule ExpressionAndOp
ruleExpressionAndOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='and' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionAndOpAccess().getAndKeyword()); 
    }

    ;





// Entry rule entryRuleExpressionEquality
entryRuleExpressionEquality returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionEqualityRule()); }
	 iv_ruleExpressionEquality=ruleExpressionEquality 
	 { $current=$iv_ruleExpressionEquality.current; } 
	 EOF 
;

// Rule ExpressionEquality
ruleExpressionEquality returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionEqualityAccess().getExpressionCompareParserRuleCall_0()); 
    }
    this_ExpressionCompare_0=ruleExpressionCompare
    { 
        $current = $this_ExpressionCompare_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleExpressionEqualityOp
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpressionEqualityAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionEqualityAccess().getFeatureExpressionEqualityOpParserRuleCall_1_0_0_1_0()); 
	    }
		lv_feature_2_0=ruleExpressionEqualityOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionEqualityRule());
	        }
       		set(
       			$current, 
       			"feature",
        		lv_feature_2_0, 
        		"ExpressionEqualityOp");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionEqualityAccess().getRightOperandExpressionCompareParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleExpressionCompare		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionEqualityRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"ExpressionCompare");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExpressionEqualityOp
entryRuleExpressionEqualityOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionEqualityOpRule()); } 
	 iv_ruleExpressionEqualityOp=ruleExpressionEqualityOp 
	 { $current=$iv_ruleExpressionEqualityOp.current.getText(); }  
	 EOF 
;

// Rule ExpressionEqualityOp
ruleExpressionEqualityOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionEqualityOpAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionEqualityOpAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleExpressionCompare
entryRuleExpressionCompare returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionCompareRule()); }
	 iv_ruleExpressionCompare=ruleExpressionCompare 
	 { $current=$iv_ruleExpressionCompare.current; } 
	 EOF 
;

// Rule ExpressionCompare
ruleExpressionCompare returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionCompareAccess().getExpressionOtherParserRuleCall_0()); 
    }
    this_ExpressionOther_0=ruleExpressionOther
    { 
        $current = $this_ExpressionOther_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleExpressionCompareOp
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpressionCompareAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionCompareAccess().getFeatureExpressionCompareOpParserRuleCall_1_0_0_1_0()); 
	    }
		lv_feature_2_0=ruleExpressionCompareOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionCompareRule());
	        }
       		set(
       			$current, 
       			"feature",
        		lv_feature_2_0, 
        		"ExpressionCompareOp");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionCompareAccess().getRightOperandExpressionOtherParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleExpressionOther		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionCompareRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"ExpressionOther");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExpressionCompareOp
entryRuleExpressionCompareOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionCompareOpRule()); } 
	 iv_ruleExpressionCompareOp=ruleExpressionCompareOp 
	 { $current=$iv_ruleExpressionCompareOp.current.getText(); }  
	 EOF 
;

// Rule ExpressionCompareOp
ruleExpressionCompareOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionCompareOpAccess().getLessThanSignEqualsSignKeyword_0()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionCompareOpAccess().getGreaterThanSignEqualsSignKeyword_1()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionCompareOpAccess().getLessThanSignKeyword_2()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionCompareOpAccess().getGreaterThanSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleExpressionOther
entryRuleExpressionOther returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionOtherRule()); }
	 iv_ruleExpressionOther=ruleExpressionOther 
	 { $current=$iv_ruleExpressionOther.current; } 
	 EOF 
;

// Rule ExpressionOther
ruleExpressionOther returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionOtherAccess().getExpressionAdditionParserRuleCall_0()); 
    }
    this_ExpressionAddition_0=ruleExpressionAddition
    { 
        $current = $this_ExpressionAddition_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleExpressionOtherOp
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpressionOtherAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionOtherAccess().getFeatureExpressionOtherOpParserRuleCall_1_0_0_1_0()); 
	    }
		lv_feature_2_0=ruleExpressionOtherOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionOtherRule());
	        }
       		set(
       			$current, 
       			"feature",
        		lv_feature_2_0, 
        		"ExpressionOtherOp");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionOtherAccess().getRightOperandExpressionAdditionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleExpressionAddition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionOtherRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"ExpressionAddition");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExpressionOtherOp
entryRuleExpressionOtherOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionOtherOpRule()); } 
	 iv_ruleExpressionOtherOp=ruleExpressionOtherOp 
	 { $current=$iv_ruleExpressionOtherOp.current.getText(); }  
	 EOF 
;

// Rule ExpressionOtherOp
ruleExpressionOtherOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='<>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionOtherOpAccess().getLessThanSignGreaterThanSignKeyword_0()); 
    }

    |
	kw='?:' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionOtherOpAccess().getQuestionMarkColonKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleExpressionAddition
entryRuleExpressionAddition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionAdditionRule()); }
	 iv_ruleExpressionAddition=ruleExpressionAddition 
	 { $current=$iv_ruleExpressionAddition.current; } 
	 EOF 
;

// Rule ExpressionAddition
ruleExpressionAddition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionAdditionAccess().getExpressionMultiplicationParserRuleCall_0()); 
    }
    this_ExpressionMultiplication_0=ruleExpressionMultiplication
    { 
        $current = $this_ExpressionMultiplication_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleExpressionAdditionOp
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpressionAdditionAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAdditionAccess().getFeatureExpressionAdditionOpParserRuleCall_1_0_0_1_0()); 
	    }
		lv_feature_2_0=ruleExpressionAdditionOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionAdditionRule());
	        }
       		set(
       			$current, 
       			"feature",
        		lv_feature_2_0, 
        		"ExpressionAdditionOp");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAdditionAccess().getRightOperandExpressionMultiplicationParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleExpressionMultiplication		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionAdditionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"ExpressionMultiplication");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExpressionAdditionOp
entryRuleExpressionAdditionOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionAdditionOpRule()); } 
	 iv_ruleExpressionAdditionOp=ruleExpressionAdditionOp 
	 { $current=$iv_ruleExpressionAdditionOp.current.getText(); }  
	 EOF 
;

// Rule ExpressionAdditionOp
ruleExpressionAdditionOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionAdditionOpAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionAdditionOpAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleExpressionMultiplication
entryRuleExpressionMultiplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionMultiplicationRule()); }
	 iv_ruleExpressionMultiplication=ruleExpressionMultiplication 
	 { $current=$iv_ruleExpressionMultiplication.current; } 
	 EOF 
;

// Rule ExpressionMultiplication
ruleExpressionMultiplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionMultiplicationAccess().getExpressionUnaryParserRuleCall_0()); 
    }
    this_ExpressionUnary_0=ruleExpressionUnary
    { 
        $current = $this_ExpressionUnary_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
ruleExpressionMultiplicationOp
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpressionMultiplicationAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionMultiplicationAccess().getFeatureExpressionMultiplicationOpParserRuleCall_1_0_0_1_0()); 
	    }
		lv_feature_2_0=ruleExpressionMultiplicationOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionMultiplicationRule());
	        }
       		set(
       			$current, 
       			"feature",
        		lv_feature_2_0, 
        		"ExpressionMultiplicationOp");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionMultiplicationAccess().getRightOperandExpressionUnaryParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleExpressionUnary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionMultiplicationRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"ExpressionUnary");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExpressionMultiplicationOp
entryRuleExpressionMultiplicationOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionMultiplicationOpRule()); } 
	 iv_ruleExpressionMultiplicationOp=ruleExpressionMultiplicationOp 
	 { $current=$iv_ruleExpressionMultiplicationOp.current.getText(); }  
	 EOF 
;

// Rule ExpressionMultiplicationOp
ruleExpressionMultiplicationOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionMultiplicationOpAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionMultiplicationOpAccess().getSolidusKeyword_1()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionMultiplicationOpAccess().getPercentSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleExpressionUnary
entryRuleExpressionUnary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionUnaryRule()); }
	 iv_ruleExpressionUnary=ruleExpressionUnary 
	 { $current=$iv_ruleExpressionUnary.current; } 
	 EOF 
;

// Rule ExpressionUnary
ruleExpressionUnary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionUnaryAccess().getUnaryOperationAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionUnaryAccess().getFeatureExpressionUnaryOpParserRuleCall_0_1_0()); 
	    }
		lv_feature_1_0=ruleExpressionUnaryOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionUnaryRule());
	        }
       		set(
       			$current, 
       			"feature",
        		lv_feature_1_0, 
        		"ExpressionUnaryOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionUnaryAccess().getOperandExpressionPrimaryParserRuleCall_0_2_0()); 
	    }
		lv_operand_2_0=ruleExpressionPrimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionUnaryRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_2_0, 
        		"ExpressionPrimary");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getExpressionUnaryAccess().getExpressionPrimaryParserRuleCall_1()); 
    }
    this_ExpressionPrimary_3=ruleExpressionPrimary
    { 
        $current = $this_ExpressionPrimary_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpressionUnaryOp
entryRuleExpressionUnaryOp returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionUnaryOpRule()); } 
	 iv_ruleExpressionUnaryOp=ruleExpressionUnaryOp 
	 { $current=$iv_ruleExpressionUnaryOp.current.getText(); }  
	 EOF 
;

// Rule ExpressionUnaryOp
ruleExpressionUnaryOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionUnaryOpAccess().getExclamationMarkKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionUnaryOpAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionUnaryOpAccess().getPlusSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleExpressionPrimary
entryRuleExpressionPrimary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionPrimaryRule()); }
	 iv_ruleExpressionPrimary=ruleExpressionPrimary 
	 { $current=$iv_ruleExpressionPrimary.current; } 
	 EOF 
;

// Rule ExpressionPrimary
ruleExpressionPrimary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionPrimaryAccess().getExpressionSwitchParserRuleCall_0()); 
    }
    this_ExpressionSwitch_0=ruleExpressionSwitch
    { 
        $current = $this_ExpressionSwitch_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionPrimaryAccess().getExpressionIfParserRuleCall_1()); 
    }
    this_ExpressionIf_1=ruleExpressionIf
    { 
        $current = $this_ExpressionIf_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionPrimaryAccess().getExpressionLiteralParserRuleCall_2()); 
    }
    this_ExpressionLiteral_2=ruleExpressionLiteral
    { 
        $current = $this_ExpressionLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionPrimaryAccess().getExpressionForEachParserRuleCall_3()); 
    }
    this_ExpressionForEach_3=ruleExpressionForEach
    { 
        $current = $this_ExpressionForEach_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionPrimaryAccess().getExpressionFunctionCallParserRuleCall_4()); 
    }
    this_ExpressionFunctionCall_4=ruleExpressionFunctionCall
    { 
        $current = $this_ExpressionFunctionCall_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionPrimaryAccess().getExpressionParenthesizedParserRuleCall_5()); 
    }
    this_ExpressionParenthesized_5=ruleExpressionParenthesized
    { 
        $current = $this_ExpressionParenthesized_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpressionLiteral
entryRuleExpressionLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionLiteralRule()); }
	 iv_ruleExpressionLiteral=ruleExpressionLiteral 
	 { $current=$iv_ruleExpressionLiteral.current; } 
	 EOF 
;

// Rule ExpressionLiteral
ruleExpressionLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionLiteralAccess().getExpressionLiteralCollectionParserRuleCall_0()); 
    }
    this_ExpressionLiteralCollection_0=ruleExpressionLiteralCollection
    { 
        $current = $this_ExpressionLiteralCollection_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionLiteralAccess().getLiteralBooleanParserRuleCall_1()); 
    }
    this_LiteralBoolean_1=ruleLiteralBoolean
    { 
        $current = $this_LiteralBoolean_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionLiteralAccess().getLiteralNumberParserRuleCall_2()); 
    }
    this_LiteralNumber_2=ruleLiteralNumber
    { 
        $current = $this_LiteralNumber_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionLiteralAccess().getLiteralNullParserRuleCall_3()); 
    }
    this_LiteralNull_3=ruleLiteralNull
    { 
        $current = $this_LiteralNull_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionLiteralAccess().getLiteralTextParserRuleCall_4()); 
    }
    this_LiteralText_4=ruleLiteralText
    { 
        $current = $this_LiteralText_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionLiteralAccess().getLiteralTimeParserRuleCall_5()); 
    }
    this_LiteralTime_5=ruleLiteralTime
    { 
        $current = $this_LiteralTime_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionLiteralAccess().getLiteralEnumParserRuleCall_6()); 
    }
    this_LiteralEnum_6=ruleLiteralEnum
    { 
        $current = $this_LiteralEnum_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionLiteralAccess().getInteractorDataReceptionParserRuleCall_7()); 
    }
    this_InteractorDataReception_7=ruleInteractorDataReception
    { 
        $current = $this_InteractorDataReception_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpressionLiteralCollection
entryRuleExpressionLiteralCollection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionLiteralCollectionRule()); }
	 iv_ruleExpressionLiteralCollection=ruleExpressionLiteralCollection 
	 { $current=$iv_ruleExpressionLiteralCollection.current; } 
	 EOF 
;

// Rule ExpressionLiteralCollection
ruleExpressionLiteralCollection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpressionLiteralCollectionAccess().getExpressionLiteralSetParserRuleCall_0()); 
    }
    this_ExpressionLiteralSet_0=ruleExpressionLiteralSet
    { 
        $current = $this_ExpressionLiteralSet_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpressionLiteralCollectionAccess().getExpressionLiteralListParserRuleCall_1()); 
    }
    this_ExpressionLiteralList_1=ruleExpressionLiteralList
    { 
        $current = $this_ExpressionLiteralList_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpressionLiteralSet
entryRuleExpressionLiteralSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionLiteralSetRule()); }
	 iv_ruleExpressionLiteralSet=ruleExpressionLiteralSet 
	 { $current=$iv_ruleExpressionLiteralSet.current; } 
	 EOF 
;

// Rule ExpressionLiteralSet
ruleExpressionLiteralSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionLiteralSetAccess().getExpressionLiteralSetAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpressionLiteralSetAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionLiteralSetAccess().getElementsExpressionParserRuleCall_2_0_0()); 
	    }
		lv_elements_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionLiteralSetRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpressionLiteralSetAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionLiteralSetAccess().getElementsExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_elements_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionLiteralSetRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExpressionLiteralSetAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleExpressionLiteralList
entryRuleExpressionLiteralList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionLiteralListRule()); }
	 iv_ruleExpressionLiteralList=ruleExpressionLiteralList 
	 { $current=$iv_ruleExpressionLiteralList.current; } 
	 EOF 
;

// Rule ExpressionLiteralList
ruleExpressionLiteralList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionLiteralListAccess().getExpressionLiteralListAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpressionLiteralListAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionLiteralListAccess().getElementsExpressionParserRuleCall_2_0_0()); 
	    }
		lv_elements_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionLiteralListRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpressionLiteralListAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionLiteralListAccess().getElementsExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_elements_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionLiteralListRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExpressionLiteralListAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleExpressionParenthesized
entryRuleExpressionParenthesized returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionParenthesizedRule()); }
	 iv_ruleExpressionParenthesized=ruleExpressionParenthesized 
	 { $current=$iv_ruleExpressionParenthesized.current; } 
	 EOF 
;

// Rule ExpressionParenthesized
ruleExpressionParenthesized returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExpressionParenthesizedAccess().getLeftParenthesisKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getExpressionParenthesizedAccess().getExpressionParserRuleCall_1()); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpressionParenthesizedAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleExpressionIf
entryRuleExpressionIf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionIfRule()); }
	 iv_ruleExpressionIf=ruleExpressionIf 
	 { $current=$iv_ruleExpressionIf.current; } 
	 EOF 
;

// Rule ExpressionIf
ruleExpressionIf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionIfAccess().getExpressionIfAction_0(),
            $current);
    }
)	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpressionIfAccess().getIfKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpressionIfAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionIfAccess().getIfExpressionParserRuleCall_3_0()); 
	    }
		lv_if_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionIfRule());
	        }
       		set(
       			$current, 
       			"if",
        		lv_if_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((	')' 
)=>	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExpressionIfAccess().getRightParenthesisKeyword_4());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionIfAccess().getThenExpressionParserRuleCall_5_0()); 
	    }
		lv_then_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionIfRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_6='else' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExpressionIfAccess().getElseKeyword_6_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionIfAccess().getElseExpressionParserRuleCall_6_1_0()); 
	    }
		lv_else_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionIfRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleExpressionSwitch
entryRuleExpressionSwitch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionSwitchRule()); }
	 iv_ruleExpressionSwitch=ruleExpressionSwitch 
	 { $current=$iv_ruleExpressionSwitch.current; } 
	 EOF 
;

// Rule ExpressionSwitch
ruleExpressionSwitch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionSwitchAccess().getExpressionSwitchAction_0(),
            $current);
    }
)	otherlv_1='switch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpressionSwitchAccess().getSwitchKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpressionSwitchAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionSwitchAccess().getSwitchExpressionParserRuleCall_3_0()); 
	    }
		lv_switch_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionSwitchRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((	')' 
)=>	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExpressionSwitchAccess().getRightParenthesisKeyword_4());
    }
)((
(
ruleExpressionCase
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionSwitchAccess().getCaseExpressionCaseParserRuleCall_5_0()); 
	    }
		lv_case_5_0=ruleExpressionCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionSwitchRule());
	        }
       		add(
       			$current, 
       			"case",
        		lv_case_5_0, 
        		"ExpressionCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(((	'default' 
)=>	otherlv_6='default' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExpressionSwitchAccess().getDefaultKeyword_6_0());
    }
)	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExpressionSwitchAccess().getColonKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionSwitchAccess().getDefaultExpressionParserRuleCall_6_2_0()); 
	    }
		lv_default_8_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionSwitchRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_8_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleExpressionCase
entryRuleExpressionCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionCaseRule()); }
	 iv_ruleExpressionCase=ruleExpressionCase 
	 { $current=$iv_ruleExpressionCase.current; } 
	 EOF 
;

// Rule ExpressionCase
ruleExpressionCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='case' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExpressionCaseAccess().getCaseKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionCaseAccess().getCaseExpressionParserRuleCall_1_0()); 
	    }
		lv_case_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionCaseRule());
	        }
       		set(
       			$current, 
       			"case",
        		lv_case_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpressionCaseAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionCaseAccess().getThenExpressionParserRuleCall_3_0()); 
	    }
		lv_then_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionCaseRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExpressionForEach
entryRuleExpressionForEach returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionForEachRule()); }
	 iv_ruleExpressionForEach=ruleExpressionForEach 
	 { $current=$iv_ruleExpressionForEach.current; } 
	 EOF 
;

// Rule ExpressionForEach
ruleExpressionForEach returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionForEachAccess().getExpressionForEachAction_0(),
            $current);
    }
)	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpressionForEachAccess().getForKeyword_1());
    }
	otherlv_2='each' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpressionForEachAccess().getEachKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpressionForEachAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionForEachAccess().getForExpressionExpressionParserRuleCall_4_0()); 
	    }
		lv_forExpression_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionForEachRule());
	        }
       		set(
       			$current, 
       			"forExpression",
        		lv_forExpression_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExpressionForEachAccess().getRightParenthesisKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionForEachAccess().getEachExpressionExpressionParserRuleCall_6_0()); 
	    }
		lv_eachExpression_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionForEachRule());
	        }
       		set(
       			$current, 
       			"eachExpression",
        		lv_eachExpression_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExpressionFunctionCall
entryRuleExpressionFunctionCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionFunctionCallRule()); }
	 iv_ruleExpressionFunctionCall=ruleExpressionFunctionCall 
	 { $current=$iv_ruleExpressionFunctionCall.current; } 
	 EOF 
;

// Rule ExpressionFunctionCall
ruleExpressionFunctionCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpressionFunctionCallAccess().getExpressionFunctionCallAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionFunctionCallAccess().getFunctionExpressionFunctionCallBaseParserRuleCall_1_0()); 
	    }
		lv_function_1_0=ruleExpressionFunctionCallBase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionFunctionCallRule());
	        }
       		set(
       			$current, 
       			"function",
        		lv_function_1_0, 
        		"ExpressionFunctionCallBase");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExpressionFunctionCallAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionFunctionCallAccess().getArgumentsExpressionParserRuleCall_3_0()); 
	    }
		lv_arguments_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionFunctionCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExpressionFunctionCallAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionFunctionCallAccess().getArgumentsExpressionParserRuleCall_4_1_0()); 
	    }
		lv_arguments_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionFunctionCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExpressionFunctionCallAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleExpressionFunctionCallBase
entryRuleExpressionFunctionCallBase returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionFunctionCallBaseRule()); } 
	 iv_ruleExpressionFunctionCallBase=ruleExpressionFunctionCallBase 
	 { $current=$iv_ruleExpressionFunctionCallBase.current.getText(); }  
	 EOF 
;

// Rule ExpressionFunctionCallBase
ruleExpressionFunctionCallBase returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='math.abs' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathAbsKeyword_0()); 
    }

    |
	kw='math.acos' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathAcosKeyword_1()); 
    }

    |
	kw='math.acosh' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathAcoshKeyword_2()); 
    }

    |
	kw='math.asin' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathAsinKeyword_3()); 
    }

    |
	kw='math.asinh' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathAsinhKeyword_4()); 
    }

    |
	kw='math.atan' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathAtanKeyword_5()); 
    }

    |
	kw='math.atanh' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathAtanhKeyword_6()); 
    }

    |
	kw='math.atan2' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathAtan2Keyword_7()); 
    }

    |
	kw='math.ceil' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathCeilKeyword_8()); 
    }

    |
	kw='math.clip' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathClipKeyword_9()); 
    }

    |
	kw='math.cos' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathCosKeyword_10()); 
    }

    |
	kw='math.cosh' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathCoshKeyword_11()); 
    }

    |
	kw='math.exp' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathExpKeyword_12()); 
    }

    |
	kw='math.floor' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathFloorKeyword_13()); 
    }

    |
	kw='math.fround' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathFroundKeyword_14()); 
    }

    |
	kw='math.hypot' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathHypotKeyword_15()); 
    }

    |
	kw='math.log' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathLogKeyword_16()); 
    }

    |
	kw='math.log10' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathLog10Keyword_17()); 
    }

    |
	kw='math.log2' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathLog2Keyword_18()); 
    }

    |
	kw='math.max' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathMaxKeyword_19()); 
    }

    |
	kw='math.min' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathMinKeyword_20()); 
    }

    |
	kw='math.pow' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathPowKeyword_21()); 
    }

    |
	kw='math.random' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathRandomKeyword_22()); 
    }

    |
	kw='math.round' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathRoundKeyword_23()); 
    }

    |
	kw='math.sign' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathSignKeyword_24()); 
    }

    |
	kw='math.sin' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathSinKeyword_25()); 
    }

    |
	kw='math.sinh' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathSinhKeyword_26()); 
    }

    |
	kw='math.sqrt' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathSqrtKeyword_27()); 
    }

    |
	kw='math.tan' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathTanKeyword_28()); 
    }

    |
	kw='math.tanh' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathTanhKeyword_29()); 
    }

    |
	kw='math.trunc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExpressionFunctionCallBaseAccess().getMathTruncKeyword_30()); 
    }
)
    ;





// Entry rule entryRuleLiteralBoolean
entryRuleLiteralBoolean returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralBooleanRule()); }
	 iv_ruleLiteralBoolean=ruleLiteralBoolean 
	 { $current=$iv_ruleLiteralBoolean.current; } 
	 EOF 
;

// Rule LiteralBoolean
ruleLiteralBoolean returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralBooleanAccess().getLiteralBooleanAction_0(),
            $current);
    }
)(	otherlv_1='false' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLiteralBooleanAccess().getFalseKeyword_1_0());
    }

    |(
(
		lv_isTrue_2_0=	'true' 
    {
        newLeafNode(lv_isTrue_2_0, grammarAccess.getLiteralBooleanAccess().getIsTrueTrueKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralBooleanRule());
	        }
       		setWithLastConsumed($current, "isTrue", true, "true");
	    }

)
)))
;





// Entry rule entryRuleLiteralNull
entryRuleLiteralNull returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralNullRule()); }
	 iv_ruleLiteralNull=ruleLiteralNull 
	 { $current=$iv_ruleLiteralNull.current; } 
	 EOF 
;

// Rule LiteralNull
ruleLiteralNull returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralNullAccess().getLiteralNullAction_0(),
            $current);
    }
)	otherlv_1='null' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLiteralNullAccess().getNullKeyword_1());
    }
)
;





// Entry rule entryRuleLiteralNumber
entryRuleLiteralNumber returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralNumberRule()); }
	 iv_ruleLiteralNumber=ruleLiteralNumber 
	 { $current=$iv_ruleLiteralNumber.current; } 
	 EOF 
;

// Rule LiteralNumber
ruleLiteralNumber returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralNumberAccess().getLiteralNumberAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralNumberAccess().getValueNUMBERParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralNumberRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLiteralText
entryRuleLiteralText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralTextRule()); }
	 iv_ruleLiteralText=ruleLiteralText 
	 { $current=$iv_ruleLiteralText.current; } 
	 EOF 
;

// Rule LiteralText
ruleLiteralText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralTextAccess().getLiteralTextAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getLiteralTextAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralTextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleLiteralEnum
entryRuleLiteralEnum returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralEnumRule()); }
	 iv_ruleLiteralEnum=ruleLiteralEnum 
	 { $current=$iv_ruleLiteralEnum.current; } 
	 EOF 
;

// Rule LiteralEnum
ruleLiteralEnum returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralEnumAccess().getLiteralEnumAction_0(),
            $current);
    }
)	otherlv_1='#' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLiteralEnumAccess().getNumberSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralEnumRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getLiteralEnumAccess().getValueDataTypeSymbolDefinitionSetElementCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleLiteralTime
entryRuleLiteralTime returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralTimeRule()); }
	 iv_ruleLiteralTime=ruleLiteralTime 
	 { $current=$iv_ruleLiteralTime.current; } 
	 EOF 
;

// Rule LiteralTime
ruleLiteralTime returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralTimeAccess().getLiteralTimeNowAction_0_0(),
            $current);
    }
)	otherlv_1='now' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLiteralTimeAccess().getNowKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_1_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getYearNUMBERParserRuleCall_1_1_0_0()); 
	    }
		lv_year_3_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"year",
        		lv_year_3_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='year' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLiteralTimeAccess().getYearKeyword_1_1_1());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getMonthNUMBERParserRuleCall_1_2_0_0()); 
	    }
		lv_month_5_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"month",
        		lv_month_5_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='month' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLiteralTimeAccess().getMonthKeyword_1_2_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getDayNUMBERParserRuleCall_1_3_0_0()); 
	    }
		lv_day_7_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"day",
        		lv_day_7_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='day' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLiteralTimeAccess().getDayKeyword_1_3_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_1_4_0_0()); 
	    }
		lv_hour_9_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"hour",
        		lv_hour_9_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='hour' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLiteralTimeAccess().getHourKeyword_1_4_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_1_5_0_0()); 
	    }
		lv_minute_11_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"minute",
        		lv_minute_11_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12='m' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLiteralTimeAccess().getMKeyword_1_5_1_0());
    }

    |	otherlv_13='minute' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getLiteralTimeAccess().getMinuteKeyword_1_5_1_1());
    }
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_1_6_0_0()); 
	    }
		lv_second_14_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"second",
        		lv_second_14_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15='s' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getLiteralTimeAccess().getSKeyword_1_6_1_0());
    }

    |	otherlv_16='second' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getLiteralTimeAccess().getSecondKeyword_1_6_1_1());
    }
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_2_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getMonthNUMBERParserRuleCall_2_1_0_0()); 
	    }
		lv_month_18_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"month",
        		lv_month_18_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_19='month' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getLiteralTimeAccess().getMonthKeyword_2_1_1());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getDayNUMBERParserRuleCall_2_2_0_0()); 
	    }
		lv_day_20_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"day",
        		lv_day_20_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_21='day' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getLiteralTimeAccess().getDayKeyword_2_2_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_2_3_0_0()); 
	    }
		lv_hour_22_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"hour",
        		lv_hour_22_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_23='hour' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getLiteralTimeAccess().getHourKeyword_2_3_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_2_4_0_0()); 
	    }
		lv_minute_24_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"minute",
        		lv_minute_24_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_25='m' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getLiteralTimeAccess().getMKeyword_2_4_1_0());
    }

    |	otherlv_26='minute' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getLiteralTimeAccess().getMinuteKeyword_2_4_1_1());
    }
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_2_5_0_0()); 
	    }
		lv_second_27_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"second",
        		lv_second_27_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_28='s' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getLiteralTimeAccess().getSKeyword_2_5_1_0());
    }

    |	otherlv_29='second' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getLiteralTimeAccess().getSecondKeyword_2_5_1_1());
    }
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_3_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getDayNUMBERParserRuleCall_3_1_0_0()); 
	    }
		lv_day_31_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"day",
        		lv_day_31_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_32='day' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getLiteralTimeAccess().getDayKeyword_3_1_1());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_3_2_0_0()); 
	    }
		lv_hour_33_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"hour",
        		lv_hour_33_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_34='hour' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getLiteralTimeAccess().getHourKeyword_3_2_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_3_3_0_0()); 
	    }
		lv_minute_35_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"minute",
        		lv_minute_35_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_36='m' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getLiteralTimeAccess().getMKeyword_3_3_1_0());
    }

    |	otherlv_37='minute' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getLiteralTimeAccess().getMinuteKeyword_3_3_1_1());
    }
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_3_4_0_0()); 
	    }
		lv_second_38_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"second",
        		lv_second_38_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_39='s' 
    {
    	newLeafNode(otherlv_39, grammarAccess.getLiteralTimeAccess().getSKeyword_3_4_1_0());
    }

    |	otherlv_40='second' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getLiteralTimeAccess().getSecondKeyword_3_4_1_1());
    }
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_4_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_4_1_0_0()); 
	    }
		lv_hour_42_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"hour",
        		lv_hour_42_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_43='hour' 
    {
    	newLeafNode(otherlv_43, grammarAccess.getLiteralTimeAccess().getHourKeyword_4_1_1());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_4_2_0_0()); 
	    }
		lv_minute_44_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"minute",
        		lv_minute_44_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_45='m' 
    {
    	newLeafNode(otherlv_45, grammarAccess.getLiteralTimeAccess().getMKeyword_4_2_1_0());
    }

    |	otherlv_46='minute' 
    {
    	newLeafNode(otherlv_46, grammarAccess.getLiteralTimeAccess().getMinuteKeyword_4_2_1_1());
    }
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_4_3_0_0()); 
	    }
		lv_second_47_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"second",
        		lv_second_47_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_48='s' 
    {
    	newLeafNode(otherlv_48, grammarAccess.getLiteralTimeAccess().getSKeyword_4_3_1_0());
    }

    |	otherlv_49='second' 
    {
    	newLeafNode(otherlv_49, grammarAccess.getLiteralTimeAccess().getSecondKeyword_4_3_1_1());
    }
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_5_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_5_1_0_0()); 
	    }
		lv_minute_51_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"minute",
        		lv_minute_51_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_52='m' 
    {
    	newLeafNode(otherlv_52, grammarAccess.getLiteralTimeAccess().getMKeyword_5_1_1_0());
    }

    |	otherlv_53='minute' 
    {
    	newLeafNode(otherlv_53, grammarAccess.getLiteralTimeAccess().getMinuteKeyword_5_1_1_1());
    }
))((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_5_2_0_0()); 
	    }
		lv_second_54_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"second",
        		lv_second_54_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_55='s' 
    {
    	newLeafNode(otherlv_55, grammarAccess.getLiteralTimeAccess().getSKeyword_5_2_1_0());
    }

    |	otherlv_56='second' 
    {
    	newLeafNode(otherlv_56, grammarAccess.getLiteralTimeAccess().getSecondKeyword_5_2_1_1());
    }
))?)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_6_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_6_1_0_0()); 
	    }
		lv_second_58_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralTimeRule());
	        }
       		set(
       			$current, 
       			"second",
        		lv_second_58_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_59='s' 
    {
    	newLeafNode(otherlv_59, grammarAccess.getLiteralTimeAccess().getSKeyword_6_1_1_0());
    }

    |	otherlv_60='second' 
    {
    	newLeafNode(otherlv_60, grammarAccess.getLiteralTimeAccess().getSecondKeyword_6_1_1_1());
    }
))))
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); } 
	 iv_ruleNUMBER=ruleNUMBER 
	 { $current=$iv_ruleNUMBER.current.getText(); }  
	 EOF 
;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNUMBERAccess().getFullStopKeyword_1_0()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_1()); 
    }
)?)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


