/*
 * generated by Xtext
 */
package com.crubier.lil.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import com.crubier.lil.lil.LilPackage
import com.crubier.lil.lil.LilFactory
import com.crubier.lil.lil.InteractorTypeDefinition

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class LilGeneratorC implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		println("generate C code");
		
//		for(e : resource.allContents.toIterable.filter(typeof(Interactor))) {
////			fsa.generateFile("c/"+e.name+".c",e.compile)
//		}
		
//		fsa.generateFile('gen.java', 'test :\n' + 
//			resource.allContents.filter(typeof(InteractorDeclaration)).map[name].join(', '))
	}
	
//	def compile(InteractorTypeDefinition e) '''
//		//lil framework generated this artifact automatically
//		public class «e.name» {
//			«FOR f:e.data»
//				«f.compile»
//			«ENDFOR»
//		}
//		
//	'''
//	
//	def compile(InteractorData s) '''
//	«IF s.mode == "flow"»
//		«IF s.type.base!=null» «s.type.base» «s.name» ;
//		«ELSE» «IF s.type.custom!=null» «s.type.custom» «s.name» ;«ENDIF»«ENDIF»
//	«ENDIF»
//	'''
	
	
}
