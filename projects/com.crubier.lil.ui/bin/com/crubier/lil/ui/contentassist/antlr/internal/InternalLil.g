/*
* generated by Xtext
*/
grammar InternalLil;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package com.crubier.lil.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.crubier.lil.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.crubier.lil.services.LilGrammarAccess;

}

@parser::members {
 
 	private LilGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LilGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleLilModel
entryRuleLilModel 
:
{ before(grammarAccess.getLilModelRule()); }
	 ruleLilModel
{ after(grammarAccess.getLilModelRule()); } 
	 EOF 
;

// Rule LilModel
ruleLilModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLilModelAccess().getAlternatives()); }
(rule__LilModel__Alternatives)*
{ after(grammarAccess.getLilModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActorTypeDefinition
entryRuleActorTypeDefinition 
:
{ before(grammarAccess.getActorTypeDefinitionRule()); }
	 ruleActorTypeDefinition
{ after(grammarAccess.getActorTypeDefinitionRule()); } 
	 EOF 
;

// Rule ActorTypeDefinition
ruleActorTypeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorTypeDefinitionAccess().getGroup()); }
(rule__ActorTypeDefinition__Group__0)
{ after(grammarAccess.getActorTypeDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActorType
entryRuleActorType 
:
{ before(grammarAccess.getActorTypeRule()); }
	 ruleActorType
{ after(grammarAccess.getActorTypeRule()); } 
	 EOF 
;

// Rule ActorType
ruleActorType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorTypeAccess().getAlternatives()); }
(rule__ActorType__Alternatives)
{ after(grammarAccess.getActorTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActorBaseType
entryRuleActorBaseType 
:
{ before(grammarAccess.getActorBaseTypeRule()); }
	 ruleActorBaseType
{ after(grammarAccess.getActorBaseTypeRule()); } 
	 EOF 
;

// Rule ActorBaseType
ruleActorBaseType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorBaseTypeAccess().getAlternatives()); }
(rule__ActorBaseType__Alternatives)
{ after(grammarAccess.getActorBaseTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActorComponent
entryRuleActorComponent 
:
{ before(grammarAccess.getActorComponentRule()); }
	 ruleActorComponent
{ after(grammarAccess.getActorComponentRule()); } 
	 EOF 
;

// Rule ActorComponent
ruleActorComponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorComponentAccess().getGroup()); }
(rule__ActorComponent__Group__0)
{ after(grammarAccess.getActorComponentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDefinition
entryRuleDataTypeDefinition 
:
{ before(grammarAccess.getDataTypeDefinitionRule()); }
	 ruleDataTypeDefinition
{ after(grammarAccess.getDataTypeDefinitionRule()); } 
	 EOF 
;

// Rule DataTypeDefinition
ruleDataTypeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getAlternatives()); }
(rule__DataTypeDefinition__Alternatives)
{ after(grammarAccess.getDataTypeDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getGroup()); }
(rule__DataType__Group__0)
{ after(grammarAccess.getDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataDefinitionSet
entryRuleDataDefinitionSet 
:
{ before(grammarAccess.getDataDefinitionSetRule()); }
	 ruleDataDefinitionSet
{ after(grammarAccess.getDataDefinitionSetRule()); } 
	 EOF 
;

// Rule DataDefinitionSet
ruleDataDefinitionSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getAlternatives()); }
(rule__DataDefinitionSet__Alternatives)
{ after(grammarAccess.getDataDefinitionSetAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataDefinitionEnumElement
entryRuleDataDefinitionEnumElement 
:
{ before(grammarAccess.getDataDefinitionEnumElementRule()); }
	 ruleDataDefinitionEnumElement
{ after(grammarAccess.getDataDefinitionEnumElementRule()); } 
	 EOF 
;

// Rule DataDefinitionEnumElement
ruleDataDefinitionEnumElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataDefinitionEnumElementAccess().getGroup()); }
(rule__DataDefinitionEnumElement__Group__0)
{ after(grammarAccess.getDataDefinitionEnumElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataBaseType
entryRuleDataBaseType 
:
{ before(grammarAccess.getDataBaseTypeRule()); }
	 ruleDataBaseType
{ after(grammarAccess.getDataBaseTypeRule()); } 
	 EOF 
;

// Rule DataBaseType
ruleDataBaseType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataBaseTypeAccess().getAlternatives()); }
(rule__DataBaseType__Alternatives)
{ after(grammarAccess.getDataBaseTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataCollectionType
entryRuleDataCollectionType 
:
{ before(grammarAccess.getDataCollectionTypeRule()); }
	 ruleDataCollectionType
{ after(grammarAccess.getDataCollectionTypeRule()); } 
	 EOF 
;

// Rule DataCollectionType
ruleDataCollectionType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getAlternatives()); }
(rule__DataCollectionType__Alternatives)
{ after(grammarAccess.getDataCollectionTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataComponent
entryRuleDataComponent 
:
{ before(grammarAccess.getDataComponentRule()); }
	 ruleDataComponent
{ after(grammarAccess.getDataComponentRule()); } 
	 EOF 
;

// Rule DataComponent
ruleDataComponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataComponentAccess().getGroup()); }
(rule__DataComponent__Group__0)
{ after(grammarAccess.getDataComponentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorTypeDefinition
entryRuleInteractorTypeDefinition 
:
{ before(grammarAccess.getInteractorTypeDefinitionRule()); }
	 ruleInteractorTypeDefinition
{ after(grammarAccess.getInteractorTypeDefinitionRule()); } 
	 EOF 
;

// Rule InteractorTypeDefinition
ruleInteractorTypeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getGroup()); }
(rule__InteractorTypeDefinition__Group__0)
{ after(grammarAccess.getInteractorTypeDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorType
entryRuleInteractorType 
:
{ before(grammarAccess.getInteractorTypeRule()); }
	 ruleInteractorType
{ after(grammarAccess.getInteractorTypeRule()); } 
	 EOF 
;

// Rule InteractorType
ruleInteractorType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorTypeAccess().getCustomAssignment()); }
(rule__InteractorType__CustomAssignment)
{ after(grammarAccess.getInteractorTypeAccess().getCustomAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorActor
entryRuleInteractorActor 
:
{ before(grammarAccess.getInteractorActorRule()); }
	 ruleInteractorActor
{ after(grammarAccess.getInteractorActorRule()); } 
	 EOF 
;

// Rule InteractorActor
ruleInteractorActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorActorAccess().getGroup()); }
(rule__InteractorActor__Group__0)
{ after(grammarAccess.getInteractorActorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorData
entryRuleInteractorData 
:
{ before(grammarAccess.getInteractorDataRule()); }
	 ruleInteractorData
{ after(grammarAccess.getInteractorDataRule()); } 
	 EOF 
;

// Rule InteractorData
ruleInteractorData
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorDataAccess().getGroup()); }
(rule__InteractorData__Group__0)
{ after(grammarAccess.getInteractorDataAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorSignalAlias
entryRuleInteractorSignalAlias 
:
{ before(grammarAccess.getInteractorSignalAliasRule()); }
	 ruleInteractorSignalAlias
{ after(grammarAccess.getInteractorSignalAliasRule()); } 
	 EOF 
;

// Rule InteractorSignalAlias
ruleInteractorSignalAlias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorSignalAliasAccess().getGroup()); }
(rule__InteractorSignalAlias__Group__0)
{ after(grammarAccess.getInteractorSignalAliasAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorDataComponentMode
entryRuleInteractorDataComponentMode 
:
{ before(grammarAccess.getInteractorDataComponentModeRule()); }
	 ruleInteractorDataComponentMode
{ after(grammarAccess.getInteractorDataComponentModeRule()); } 
	 EOF 
;

// Rule InteractorDataComponentMode
ruleInteractorDataComponentMode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorDataComponentModeAccess().getAlternatives()); }
(rule__InteractorDataComponentMode__Alternatives)
{ after(grammarAccess.getInteractorDataComponentModeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorComponent
entryRuleInteractorComponent 
:
{ before(grammarAccess.getInteractorComponentRule()); }
	 ruleInteractorComponent
{ after(grammarAccess.getInteractorComponentRule()); } 
	 EOF 
;

// Rule InteractorComponent
ruleInteractorComponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorComponentAccess().getGroup()); }
(rule__InteractorComponent__Group__0)
{ after(grammarAccess.getInteractorComponentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccessibleEntity
entryRuleAccessibleEntity 
:
{ before(grammarAccess.getAccessibleEntityRule()); }
	 ruleAccessibleEntity
{ after(grammarAccess.getAccessibleEntityRule()); } 
	 EOF 
;

// Rule AccessibleEntity
ruleAccessibleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccessibleEntityAccess().getAlternatives()); }
(rule__AccessibleEntity__Alternatives)
{ after(grammarAccess.getAccessibleEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGenericEntity
entryRuleGenericEntity 
:
{ before(grammarAccess.getGenericEntityRule()); }
	 ruleGenericEntity
{ after(grammarAccess.getGenericEntityRule()); } 
	 EOF 
;

// Rule GenericEntity
ruleGenericEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGenericEntityAccess().getAlternatives()); }
(rule__GenericEntity__Alternatives)
{ after(grammarAccess.getGenericEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleActorAlias
entryRuleActorAlias 
:
{ before(grammarAccess.getActorAliasRule()); }
	 ruleActorAlias
{ after(grammarAccess.getActorAliasRule()); } 
	 EOF 
;

// Rule ActorAlias
ruleActorAlias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorAliasAccess().getGroup()); }
(rule__ActorAlias__Group__0)
{ after(grammarAccess.getActorAliasAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorSignalReception
entryRuleInteractorSignalReception 
:
{ before(grammarAccess.getInteractorSignalReceptionRule()); }
	 ruleInteractorSignalReception
{ after(grammarAccess.getInteractorSignalReceptionRule()); } 
	 EOF 
;

// Rule InteractorSignalReception
ruleInteractorSignalReception
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getAlternatives()); }
(rule__InteractorSignalReception__Alternatives)
{ after(grammarAccess.getInteractorSignalReceptionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorSignalEmission
entryRuleInteractorSignalEmission 
:
{ before(grammarAccess.getInteractorSignalEmissionRule()); }
	 ruleInteractorSignalEmission
{ after(grammarAccess.getInteractorSignalEmissionRule()); } 
	 EOF 
;

// Rule InteractorSignalEmission
ruleInteractorSignalEmission
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorSignalEmissionAccess().getGroup()); }
(rule__InteractorSignalEmission__Group__0)
{ after(grammarAccess.getInteractorSignalEmissionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorBehavior
entryRuleInteractorBehavior 
:
{ before(grammarAccess.getInteractorBehaviorRule()); }
	 ruleInteractorBehavior
{ after(grammarAccess.getInteractorBehaviorRule()); } 
	 EOF 
;

// Rule InteractorBehavior
ruleInteractorBehavior
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorBehaviorAccess().getGroup()); }
(rule__InteractorBehavior__Group__0)
{ after(grammarAccess.getInteractorBehaviorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorBehaviorCause
entryRuleInteractorBehaviorCause 
:
{ before(grammarAccess.getInteractorBehaviorCauseRule()); }
	 ruleInteractorBehaviorCause
{ after(grammarAccess.getInteractorBehaviorCauseRule()); } 
	 EOF 
;

// Rule InteractorBehaviorCause
ruleInteractorBehaviorCause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorBehaviorCauseAccess().getAlternatives()); }
(rule__InteractorBehaviorCause__Alternatives)
{ after(grammarAccess.getInteractorBehaviorCauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorBehaviorOnCause
entryRuleInteractorBehaviorOnCause 
:
{ before(grammarAccess.getInteractorBehaviorOnCauseRule()); }
	 ruleInteractorBehaviorOnCause
{ after(grammarAccess.getInteractorBehaviorOnCauseRule()); } 
	 EOF 
;

// Rule InteractorBehaviorOnCause
ruleInteractorBehaviorOnCause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorBehaviorOnCauseAccess().getGroup()); }
(rule__InteractorBehaviorOnCause__Group__0)
{ after(grammarAccess.getInteractorBehaviorOnCauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorBehaviorWhenCause
entryRuleInteractorBehaviorWhenCause 
:
{ before(grammarAccess.getInteractorBehaviorWhenCauseRule()); }
	 ruleInteractorBehaviorWhenCause
{ after(grammarAccess.getInteractorBehaviorWhenCauseRule()); } 
	 EOF 
;

// Rule InteractorBehaviorWhenCause
ruleInteractorBehaviorWhenCause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorBehaviorWhenCauseAccess().getGroup()); }
(rule__InteractorBehaviorWhenCause__Group__0)
{ after(grammarAccess.getInteractorBehaviorWhenCauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorBehaviorEffect
entryRuleInteractorBehaviorEffect 
:
{ before(grammarAccess.getInteractorBehaviorEffectRule()); }
	 ruleInteractorBehaviorEffect
{ after(grammarAccess.getInteractorBehaviorEffectRule()); } 
	 EOF 
;

// Rule InteractorBehaviorEffect
ruleInteractorBehaviorEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorBehaviorEffectAccess().getAlternatives()); }
(rule__InteractorBehaviorEffect__Alternatives)
{ after(grammarAccess.getInteractorBehaviorEffectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorBehaviorAlwaysEffect
entryRuleInteractorBehaviorAlwaysEffect 
:
{ before(grammarAccess.getInteractorBehaviorAlwaysEffectRule()); }
	 ruleInteractorBehaviorAlwaysEffect
{ after(grammarAccess.getInteractorBehaviorAlwaysEffectRule()); } 
	 EOF 
;

// Rule InteractorBehaviorAlwaysEffect
ruleInteractorBehaviorAlwaysEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getGroup()); }
(rule__InteractorBehaviorAlwaysEffect__Group__0)
{ after(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorBehaviorSetEffect
entryRuleInteractorBehaviorSetEffect 
:
{ before(grammarAccess.getInteractorBehaviorSetEffectRule()); }
	 ruleInteractorBehaviorSetEffect
{ after(grammarAccess.getInteractorBehaviorSetEffectRule()); } 
	 EOF 
;

// Rule InteractorBehaviorSetEffect
ruleInteractorBehaviorSetEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorBehaviorSetEffectAccess().getGroup()); }
(rule__InteractorBehaviorSetEffect__Group__0)
{ after(grammarAccess.getInteractorBehaviorSetEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorBehaviorTriggerEffect
entryRuleInteractorBehaviorTriggerEffect 
:
{ before(grammarAccess.getInteractorBehaviorTriggerEffectRule()); }
	 ruleInteractorBehaviorTriggerEffect
{ after(grammarAccess.getInteractorBehaviorTriggerEffectRule()); } 
	 EOF 
;

// Rule InteractorBehaviorTriggerEffect
ruleInteractorBehaviorTriggerEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getGroup()); }
(rule__InteractorBehaviorTriggerEffect__Group__0)
{ after(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getExpressionOrParserRuleCall()); }
	ruleExpressionOr
{ after(grammarAccess.getExpressionAccess().getExpressionOrParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionOr
entryRuleExpressionOr 
:
{ before(grammarAccess.getExpressionOrRule()); }
	 ruleExpressionOr
{ after(grammarAccess.getExpressionOrRule()); } 
	 EOF 
;

// Rule ExpressionOr
ruleExpressionOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionOrAccess().getGroup()); }
(rule__ExpressionOr__Group__0)
{ after(grammarAccess.getExpressionOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionOrOp
entryRuleExpressionOrOp 
:
{ before(grammarAccess.getExpressionOrOpRule()); }
	 ruleExpressionOrOp
{ after(grammarAccess.getExpressionOrOpRule()); } 
	 EOF 
;

// Rule ExpressionOrOp
ruleExpressionOrOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionOrOpAccess().getOrKeyword()); }

	'or' 

{ after(grammarAccess.getExpressionOrOpAccess().getOrKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionAnd
entryRuleExpressionAnd 
:
{ before(grammarAccess.getExpressionAndRule()); }
	 ruleExpressionAnd
{ after(grammarAccess.getExpressionAndRule()); } 
	 EOF 
;

// Rule ExpressionAnd
ruleExpressionAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAndAccess().getGroup()); }
(rule__ExpressionAnd__Group__0)
{ after(grammarAccess.getExpressionAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionAndOp
entryRuleExpressionAndOp 
:
{ before(grammarAccess.getExpressionAndOpRule()); }
	 ruleExpressionAndOp
{ after(grammarAccess.getExpressionAndOpRule()); } 
	 EOF 
;

// Rule ExpressionAndOp
ruleExpressionAndOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAndOpAccess().getAndKeyword()); }

	'and' 

{ after(grammarAccess.getExpressionAndOpAccess().getAndKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionEquality
entryRuleExpressionEquality 
:
{ before(grammarAccess.getExpressionEqualityRule()); }
	 ruleExpressionEquality
{ after(grammarAccess.getExpressionEqualityRule()); } 
	 EOF 
;

// Rule ExpressionEquality
ruleExpressionEquality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionEqualityAccess().getGroup()); }
(rule__ExpressionEquality__Group__0)
{ after(grammarAccess.getExpressionEqualityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionEqualityOp
entryRuleExpressionEqualityOp 
:
{ before(grammarAccess.getExpressionEqualityOpRule()); }
	 ruleExpressionEqualityOp
{ after(grammarAccess.getExpressionEqualityOpRule()); } 
	 EOF 
;

// Rule ExpressionEqualityOp
ruleExpressionEqualityOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionEqualityOpAccess().getAlternatives()); }
(rule__ExpressionEqualityOp__Alternatives)
{ after(grammarAccess.getExpressionEqualityOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionCompare
entryRuleExpressionCompare 
:
{ before(grammarAccess.getExpressionCompareRule()); }
	 ruleExpressionCompare
{ after(grammarAccess.getExpressionCompareRule()); } 
	 EOF 
;

// Rule ExpressionCompare
ruleExpressionCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionCompareAccess().getGroup()); }
(rule__ExpressionCompare__Group__0)
{ after(grammarAccess.getExpressionCompareAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionCompareOp
entryRuleExpressionCompareOp 
:
{ before(grammarAccess.getExpressionCompareOpRule()); }
	 ruleExpressionCompareOp
{ after(grammarAccess.getExpressionCompareOpRule()); } 
	 EOF 
;

// Rule ExpressionCompareOp
ruleExpressionCompareOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionCompareOpAccess().getAlternatives()); }
(rule__ExpressionCompareOp__Alternatives)
{ after(grammarAccess.getExpressionCompareOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionOther
entryRuleExpressionOther 
:
{ before(grammarAccess.getExpressionOtherRule()); }
	 ruleExpressionOther
{ after(grammarAccess.getExpressionOtherRule()); } 
	 EOF 
;

// Rule ExpressionOther
ruleExpressionOther
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionOtherAccess().getGroup()); }
(rule__ExpressionOther__Group__0)
{ after(grammarAccess.getExpressionOtherAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionOtherOp
entryRuleExpressionOtherOp 
:
{ before(grammarAccess.getExpressionOtherOpRule()); }
	 ruleExpressionOtherOp
{ after(grammarAccess.getExpressionOtherOpRule()); } 
	 EOF 
;

// Rule ExpressionOtherOp
ruleExpressionOtherOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionOtherOpAccess().getAlternatives()); }
(rule__ExpressionOtherOp__Alternatives)
{ after(grammarAccess.getExpressionOtherOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionAddition
entryRuleExpressionAddition 
:
{ before(grammarAccess.getExpressionAdditionRule()); }
	 ruleExpressionAddition
{ after(grammarAccess.getExpressionAdditionRule()); } 
	 EOF 
;

// Rule ExpressionAddition
ruleExpressionAddition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAdditionAccess().getGroup()); }
(rule__ExpressionAddition__Group__0)
{ after(grammarAccess.getExpressionAdditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionAdditionOp
entryRuleExpressionAdditionOp 
:
{ before(grammarAccess.getExpressionAdditionOpRule()); }
	 ruleExpressionAdditionOp
{ after(grammarAccess.getExpressionAdditionOpRule()); } 
	 EOF 
;

// Rule ExpressionAdditionOp
ruleExpressionAdditionOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAdditionOpAccess().getAlternatives()); }
(rule__ExpressionAdditionOp__Alternatives)
{ after(grammarAccess.getExpressionAdditionOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionMultiplication
entryRuleExpressionMultiplication 
:
{ before(grammarAccess.getExpressionMultiplicationRule()); }
	 ruleExpressionMultiplication
{ after(grammarAccess.getExpressionMultiplicationRule()); } 
	 EOF 
;

// Rule ExpressionMultiplication
ruleExpressionMultiplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionMultiplicationAccess().getGroup()); }
(rule__ExpressionMultiplication__Group__0)
{ after(grammarAccess.getExpressionMultiplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionMultiplicationOp
entryRuleExpressionMultiplicationOp 
:
{ before(grammarAccess.getExpressionMultiplicationOpRule()); }
	 ruleExpressionMultiplicationOp
{ after(grammarAccess.getExpressionMultiplicationOpRule()); } 
	 EOF 
;

// Rule ExpressionMultiplicationOp
ruleExpressionMultiplicationOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionMultiplicationOpAccess().getAlternatives()); }
(rule__ExpressionMultiplicationOp__Alternatives)
{ after(grammarAccess.getExpressionMultiplicationOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionUnary
entryRuleExpressionUnary 
:
{ before(grammarAccess.getExpressionUnaryRule()); }
	 ruleExpressionUnary
{ after(grammarAccess.getExpressionUnaryRule()); } 
	 EOF 
;

// Rule ExpressionUnary
ruleExpressionUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionUnaryAccess().getAlternatives()); }
(rule__ExpressionUnary__Alternatives)
{ after(grammarAccess.getExpressionUnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionUnaryOp
entryRuleExpressionUnaryOp 
:
{ before(grammarAccess.getExpressionUnaryOpRule()); }
	 ruleExpressionUnaryOp
{ after(grammarAccess.getExpressionUnaryOpRule()); } 
	 EOF 
;

// Rule ExpressionUnaryOp
ruleExpressionUnaryOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionUnaryOpAccess().getAlternatives()); }
(rule__ExpressionUnaryOp__Alternatives)
{ after(grammarAccess.getExpressionUnaryOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionPrimary
entryRuleExpressionPrimary 
:
{ before(grammarAccess.getExpressionPrimaryRule()); }
	 ruleExpressionPrimary
{ after(grammarAccess.getExpressionPrimaryRule()); } 
	 EOF 
;

// Rule ExpressionPrimary
ruleExpressionPrimary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionPrimaryAccess().getAlternatives()); }
(rule__ExpressionPrimary__Alternatives)
{ after(grammarAccess.getExpressionPrimaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionLiteral
entryRuleExpressionLiteral 
:
{ before(grammarAccess.getExpressionLiteralRule()); }
	 ruleExpressionLiteral
{ after(grammarAccess.getExpressionLiteralRule()); } 
	 EOF 
;

// Rule ExpressionLiteral
ruleExpressionLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionLiteralAccess().getAlternatives()); }
(rule__ExpressionLiteral__Alternatives)
{ after(grammarAccess.getExpressionLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionLiteralCollection
entryRuleExpressionLiteralCollection 
:
{ before(grammarAccess.getExpressionLiteralCollectionRule()); }
	 ruleExpressionLiteralCollection
{ after(grammarAccess.getExpressionLiteralCollectionRule()); } 
	 EOF 
;

// Rule ExpressionLiteralCollection
ruleExpressionLiteralCollection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionLiteralCollectionAccess().getAlternatives()); }
(rule__ExpressionLiteralCollection__Alternatives)
{ after(grammarAccess.getExpressionLiteralCollectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionLiteralSet
entryRuleExpressionLiteralSet 
:
{ before(grammarAccess.getExpressionLiteralSetRule()); }
	 ruleExpressionLiteralSet
{ after(grammarAccess.getExpressionLiteralSetRule()); } 
	 EOF 
;

// Rule ExpressionLiteralSet
ruleExpressionLiteralSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionLiteralSetAccess().getGroup()); }
(rule__ExpressionLiteralSet__Group__0)
{ after(grammarAccess.getExpressionLiteralSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionLiteralList
entryRuleExpressionLiteralList 
:
{ before(grammarAccess.getExpressionLiteralListRule()); }
	 ruleExpressionLiteralList
{ after(grammarAccess.getExpressionLiteralListRule()); } 
	 EOF 
;

// Rule ExpressionLiteralList
ruleExpressionLiteralList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionLiteralListAccess().getGroup()); }
(rule__ExpressionLiteralList__Group__0)
{ after(grammarAccess.getExpressionLiteralListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionParenthesized
entryRuleExpressionParenthesized 
:
{ before(grammarAccess.getExpressionParenthesizedRule()); }
	 ruleExpressionParenthesized
{ after(grammarAccess.getExpressionParenthesizedRule()); } 
	 EOF 
;

// Rule ExpressionParenthesized
ruleExpressionParenthesized
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionParenthesizedAccess().getGroup()); }
(rule__ExpressionParenthesized__Group__0)
{ after(grammarAccess.getExpressionParenthesizedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionIf
entryRuleExpressionIf 
:
{ before(grammarAccess.getExpressionIfRule()); }
	 ruleExpressionIf
{ after(grammarAccess.getExpressionIfRule()); } 
	 EOF 
;

// Rule ExpressionIf
ruleExpressionIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionIfAccess().getGroup()); }
(rule__ExpressionIf__Group__0)
{ after(grammarAccess.getExpressionIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionSwitch
entryRuleExpressionSwitch 
:
{ before(grammarAccess.getExpressionSwitchRule()); }
	 ruleExpressionSwitch
{ after(grammarAccess.getExpressionSwitchRule()); } 
	 EOF 
;

// Rule ExpressionSwitch
ruleExpressionSwitch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionSwitchAccess().getGroup()); }
(rule__ExpressionSwitch__Group__0)
{ after(grammarAccess.getExpressionSwitchAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionCase
entryRuleExpressionCase 
:
{ before(grammarAccess.getExpressionCaseRule()); }
	 ruleExpressionCase
{ after(grammarAccess.getExpressionCaseRule()); } 
	 EOF 
;

// Rule ExpressionCase
ruleExpressionCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionCaseAccess().getGroup()); }
(rule__ExpressionCase__Group__0)
{ after(grammarAccess.getExpressionCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionForEach
entryRuleExpressionForEach 
:
{ before(grammarAccess.getExpressionForEachRule()); }
	 ruleExpressionForEach
{ after(grammarAccess.getExpressionForEachRule()); } 
	 EOF 
;

// Rule ExpressionForEach
ruleExpressionForEach
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionForEachAccess().getGroup()); }
(rule__ExpressionForEach__Group__0)
{ after(grammarAccess.getExpressionForEachAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionFunctionCall
entryRuleExpressionFunctionCall 
:
{ before(grammarAccess.getExpressionFunctionCallRule()); }
	 ruleExpressionFunctionCall
{ after(grammarAccess.getExpressionFunctionCallRule()); } 
	 EOF 
;

// Rule ExpressionFunctionCall
ruleExpressionFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getGroup()); }
(rule__ExpressionFunctionCall__Group__0)
{ after(grammarAccess.getExpressionFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionFunctionCallBase
entryRuleExpressionFunctionCallBase 
:
{ before(grammarAccess.getExpressionFunctionCallBaseRule()); }
	 ruleExpressionFunctionCallBase
{ after(grammarAccess.getExpressionFunctionCallBaseRule()); } 
	 EOF 
;

// Rule ExpressionFunctionCallBase
ruleExpressionFunctionCallBase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getAlternatives()); }
(rule__ExpressionFunctionCallBase__Alternatives)
{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralBoolean
entryRuleLiteralBoolean 
:
{ before(grammarAccess.getLiteralBooleanRule()); }
	 ruleLiteralBoolean
{ after(grammarAccess.getLiteralBooleanRule()); } 
	 EOF 
;

// Rule LiteralBoolean
ruleLiteralBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralBooleanAccess().getGroup()); }
(rule__LiteralBoolean__Group__0)
{ after(grammarAccess.getLiteralBooleanAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralNull
entryRuleLiteralNull 
:
{ before(grammarAccess.getLiteralNullRule()); }
	 ruleLiteralNull
{ after(grammarAccess.getLiteralNullRule()); } 
	 EOF 
;

// Rule LiteralNull
ruleLiteralNull
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralNullAccess().getGroup()); }
(rule__LiteralNull__Group__0)
{ after(grammarAccess.getLiteralNullAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralNumber
entryRuleLiteralNumber 
:
{ before(grammarAccess.getLiteralNumberRule()); }
	 ruleLiteralNumber
{ after(grammarAccess.getLiteralNumberRule()); } 
	 EOF 
;

// Rule LiteralNumber
ruleLiteralNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralNumberAccess().getGroup()); }
(rule__LiteralNumber__Group__0)
{ after(grammarAccess.getLiteralNumberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralString
entryRuleLiteralString 
:
{ before(grammarAccess.getLiteralStringRule()); }
	 ruleLiteralString
{ after(grammarAccess.getLiteralStringRule()); } 
	 EOF 
;

// Rule LiteralString
ruleLiteralString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralStringAccess().getGroup()); }
(rule__LiteralString__Group__0)
{ after(grammarAccess.getLiteralStringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralEnum
entryRuleLiteralEnum 
:
{ before(grammarAccess.getLiteralEnumRule()); }
	 ruleLiteralEnum
{ after(grammarAccess.getLiteralEnumRule()); } 
	 EOF 
;

// Rule LiteralEnum
ruleLiteralEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralEnumAccess().getGroup()); }
(rule__LiteralEnum__Group__0)
{ after(grammarAccess.getLiteralEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralTime
entryRuleLiteralTime 
:
{ before(grammarAccess.getLiteralTimeRule()); }
	 ruleLiteralTime
{ after(grammarAccess.getLiteralTimeRule()); } 
	 EOF 
;

// Rule LiteralTime
ruleLiteralTime
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives()); }
(rule__LiteralTime__Alternatives)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUMBER
entryRuleNUMBER 
:
{ before(grammarAccess.getNUMBERRule()); }
	 ruleNUMBER
{ after(grammarAccess.getNUMBERRule()); } 
	 EOF 
;

// Rule NUMBER
ruleNUMBER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUMBERAccess().getGroup()); }
(rule__NUMBER__Group__0)
{ after(grammarAccess.getNUMBERAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__LilModel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLilModelAccess().getActorTypeAssignment_0()); }
(rule__LilModel__ActorTypeAssignment_0)
{ after(grammarAccess.getLilModelAccess().getActorTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getLilModelAccess().getDataTypeAssignment_1()); }
(rule__LilModel__DataTypeAssignment_1)
{ after(grammarAccess.getLilModelAccess().getDataTypeAssignment_1()); }
)

    |(
{ before(grammarAccess.getLilModelAccess().getInteractorTypeAssignment_2()); }
(rule__LilModel__InteractorTypeAssignment_2)
{ after(grammarAccess.getLilModelAccess().getInteractorTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorTypeAccess().getBaseAssignment_0()); }
(rule__ActorType__BaseAssignment_0)
{ after(grammarAccess.getActorTypeAccess().getBaseAssignment_0()); }
)

    |(
{ before(grammarAccess.getActorTypeAccess().getCustomAssignment_1()); }
(rule__ActorType__CustomAssignment_1)
{ after(grammarAccess.getActorTypeAccess().getCustomAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorBaseType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorBaseTypeAccess().getInputKeyword_0()); }

	'input' 

{ after(grammarAccess.getActorBaseTypeAccess().getInputKeyword_0()); }
)

    |(
{ before(grammarAccess.getActorBaseTypeAccess().getOutputKeyword_1()); }

	'output' 

{ after(grammarAccess.getActorBaseTypeAccess().getOutputKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getGroup_0()); }
(rule__DataTypeDefinition__Group_0__0)
{ after(grammarAccess.getDataTypeDefinitionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDataTypeDefinitionAccess().getGroup_1()); }
(rule__DataTypeDefinition__Group_1__0)
{ after(grammarAccess.getDataTypeDefinitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getGroup_0_0()); }
(rule__DataType__Group_0_0__0)
{ after(grammarAccess.getDataTypeAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getCustomAssignment_0_1()); }
(rule__DataType__CustomAssignment_0_1)
{ after(grammarAccess.getDataTypeAccess().getCustomAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getGroup_0()); }
(rule__DataDefinitionSet__Group_0__0)
{ after(grammarAccess.getDataDefinitionSetAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDataDefinitionSetAccess().getGroup_1()); }
(rule__DataDefinitionSet__Group_1__0)
{ after(grammarAccess.getDataDefinitionSetAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDataDefinitionSetAccess().getGroup_2()); }
(rule__DataDefinitionSet__Group_2__0)
{ after(grammarAccess.getDataDefinitionSetAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataBaseType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataBaseTypeAccess().getVoidKeyword_0()); }

	'void' 

{ after(grammarAccess.getDataBaseTypeAccess().getVoidKeyword_0()); }
)

    |(
{ before(grammarAccess.getDataBaseTypeAccess().getSymbolKeyword_1()); }

	'symbol' 

{ after(grammarAccess.getDataBaseTypeAccess().getSymbolKeyword_1()); }
)

    |(
{ before(grammarAccess.getDataBaseTypeAccess().getNumberKeyword_2()); }

	'number' 

{ after(grammarAccess.getDataBaseTypeAccess().getNumberKeyword_2()); }
)

    |(
{ before(grammarAccess.getDataBaseTypeAccess().getTextKeyword_3()); }

	'text' 

{ after(grammarAccess.getDataBaseTypeAccess().getTextKeyword_3()); }
)

    |(
{ before(grammarAccess.getDataBaseTypeAccess().getTimeKeyword_4()); }

	'time' 

{ after(grammarAccess.getDataBaseTypeAccess().getTimeKeyword_4()); }
)

    |(
{ before(grammarAccess.getDataBaseTypeAccess().getIdentifierKeyword_5()); }

	'identifier' 

{ after(grammarAccess.getDataBaseTypeAccess().getIdentifierKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataCollectionType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeAssignment_0()); }
(rule__DataCollectionType__TypeAssignment_0)
{ after(grammarAccess.getDataCollectionTypeAccess().getTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeAssignment_1()); }
(rule__DataCollectionType__TypeAssignment_1)
{ after(grammarAccess.getDataCollectionTypeAccess().getTypeAssignment_1()); }
)

    |(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeAssignment_2()); }
(rule__DataCollectionType__TypeAssignment_2)
{ after(grammarAccess.getDataCollectionTypeAccess().getTypeAssignment_2()); }
)

    |(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeAssignment_3()); }
(rule__DataCollectionType__TypeAssignment_3)
{ after(grammarAccess.getDataCollectionTypeAccess().getTypeAssignment_3()); }
)

    |(
{ before(grammarAccess.getDataCollectionTypeAccess().getGroup_4()); }
(rule__DataCollectionType__Group_4__0)
{ after(grammarAccess.getDataCollectionTypeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorTypeDefinition__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getActorAssignment_3_0()); }
(rule__InteractorTypeDefinition__ActorAssignment_3_0)
{ after(grammarAccess.getInteractorTypeDefinitionAccess().getActorAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getDataAssignment_3_1()); }
(rule__InteractorTypeDefinition__DataAssignment_3_1)
{ after(grammarAccess.getInteractorTypeDefinitionAccess().getDataAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getComponentAssignment_3_2()); }
(rule__InteractorTypeDefinition__ComponentAssignment_3_2)
{ after(grammarAccess.getInteractorTypeDefinitionAccess().getComponentAssignment_3_2()); }
)

    |(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getBehaviorAssignment_3_3()); }
(rule__InteractorTypeDefinition__BehaviorAssignment_3_3)
{ after(grammarAccess.getInteractorTypeDefinitionAccess().getBehaviorAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorDataComponentMode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataComponentModeAccess().getEventKeyword_0()); }

	'event' 

{ after(grammarAccess.getInteractorDataComponentModeAccess().getEventKeyword_0()); }
)

    |(
{ before(grammarAccess.getInteractorDataComponentModeAccess().getFlowKeyword_1()); }

	'flow' 

{ after(grammarAccess.getInteractorDataComponentModeAccess().getFlowKeyword_1()); }
)

    |(
{ before(grammarAccess.getInteractorDataComponentModeAccess().getConstantKeyword_2()); }

	'constant' 

{ after(grammarAccess.getInteractorDataComponentModeAccess().getConstantKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessibleEntity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericAssignment_0()); }
(rule__AccessibleEntity__GenericAssignment_0)
{ after(grammarAccess.getAccessibleEntityAccess().getGenericAssignment_0()); }
)

    |(
{ before(grammarAccess.getAccessibleEntityAccess().getSpecificAssignment_1()); }
(rule__AccessibleEntity__SpecificAssignment_1)
{ after(grammarAccess.getAccessibleEntityAccess().getSpecificAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericEntity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericEntityAccess().getAnyKeyword_0()); }

	'any' 

{ after(grammarAccess.getGenericEntityAccess().getAnyKeyword_0()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getSelfKeyword_1()); }

	'self' 

{ after(grammarAccess.getGenericEntityAccess().getSelfKeyword_1()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getOtherKeyword_2()); }

	'other' 

{ after(grammarAccess.getGenericEntityAccess().getOtherKeyword_2()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getParentKeyword_3()); }

	'parent' 

{ after(grammarAccess.getGenericEntityAccess().getParentKeyword_3()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getChildKeyword_4()); }

	'child' 

{ after(grammarAccess.getGenericEntityAccess().getChildKeyword_4()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getAllKeyword_5()); }

	'all' 

{ after(grammarAccess.getGenericEntityAccess().getAllKeyword_5()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getActorsKeyword_6()); }

	'actors' 

{ after(grammarAccess.getGenericEntityAccess().getActorsKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorSignalReception__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getGroup_0()); }
(rule__InteractorSignalReception__Group_0__0)
{ after(grammarAccess.getInteractorSignalReceptionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getInitAssignment_1()); }
(rule__InteractorSignalReception__InitAssignment_1)
{ after(grammarAccess.getInteractorSignalReceptionAccess().getInitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorCause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorCauseAccess().getInteractorBehaviorOnCauseParserRuleCall_0()); }
	ruleInteractorBehaviorOnCause
{ after(grammarAccess.getInteractorBehaviorCauseAccess().getInteractorBehaviorOnCauseParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInteractorBehaviorCauseAccess().getInteractorBehaviorWhenCauseParserRuleCall_1()); }
	ruleInteractorBehaviorWhenCause
{ after(grammarAccess.getInteractorBehaviorCauseAccess().getInteractorBehaviorWhenCauseParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorEffect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorEffectAccess().getInteractorBehaviorAlwaysEffectParserRuleCall_0()); }
	ruleInteractorBehaviorAlwaysEffect
{ after(grammarAccess.getInteractorBehaviorEffectAccess().getInteractorBehaviorAlwaysEffectParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInteractorBehaviorEffectAccess().getInteractorBehaviorSetEffectParserRuleCall_1()); }
	ruleInteractorBehaviorSetEffect
{ after(grammarAccess.getInteractorBehaviorEffectAccess().getInteractorBehaviorSetEffectParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInteractorBehaviorEffectAccess().getInteractorBehaviorTriggerEffectParserRuleCall_2()); }
	ruleInteractorBehaviorTriggerEffect
{ after(grammarAccess.getInteractorBehaviorEffectAccess().getInteractorBehaviorTriggerEffectParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionEqualityOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionEqualityOpAccess().getEqualsSignEqualsSignKeyword_0()); }

	'==' 

{ after(grammarAccess.getExpressionEqualityOpAccess().getEqualsSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getExpressionEqualityOpAccess().getExclamationMarkEqualsSignKeyword_1()); }

	'!=' 

{ after(grammarAccess.getExpressionEqualityOpAccess().getExclamationMarkEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCompareOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCompareOpAccess().getLessThanSignEqualsSignKeyword_0()); }

	'<=' 

{ after(grammarAccess.getExpressionCompareOpAccess().getLessThanSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getExpressionCompareOpAccess().getGreaterThanSignEqualsSignKeyword_1()); }

	'>=' 

{ after(grammarAccess.getExpressionCompareOpAccess().getGreaterThanSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getExpressionCompareOpAccess().getLessThanSignKeyword_2()); }

	'<' 

{ after(grammarAccess.getExpressionCompareOpAccess().getLessThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getExpressionCompareOpAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getExpressionCompareOpAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOtherOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOtherOpAccess().getLessThanSignGreaterThanSignKeyword_0()); }

	'<>' 

{ after(grammarAccess.getExpressionOtherOpAccess().getLessThanSignGreaterThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getExpressionOtherOpAccess().getQuestionMarkColonKeyword_1()); }

	'?:' 

{ after(grammarAccess.getExpressionOtherOpAccess().getQuestionMarkColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAdditionOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAdditionOpAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getExpressionAdditionOpAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getExpressionAdditionOpAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getExpressionAdditionOpAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMultiplicationOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMultiplicationOpAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getExpressionMultiplicationOpAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getExpressionMultiplicationOpAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getExpressionMultiplicationOpAccess().getSolidusKeyword_1()); }
)

    |(
{ before(grammarAccess.getExpressionMultiplicationOpAccess().getPercentSignKeyword_2()); }

	'%' 

{ after(grammarAccess.getExpressionMultiplicationOpAccess().getPercentSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionUnary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionUnaryAccess().getGroup_0()); }
(rule__ExpressionUnary__Group_0__0)
{ after(grammarAccess.getExpressionUnaryAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpressionUnaryAccess().getExpressionPrimaryParserRuleCall_1()); }
	ruleExpressionPrimary
{ after(grammarAccess.getExpressionUnaryAccess().getExpressionPrimaryParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionUnaryOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionUnaryOpAccess().getExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getExpressionUnaryOpAccess().getExclamationMarkKeyword_0()); }
)

    |(
{ before(grammarAccess.getExpressionUnaryOpAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getExpressionUnaryOpAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getExpressionUnaryOpAccess().getPlusSignKeyword_2()); }

	'+' 

{ after(grammarAccess.getExpressionUnaryOpAccess().getPlusSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPrimary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionPrimaryAccess().getExpressionSwitchParserRuleCall_0()); }
	ruleExpressionSwitch
{ after(grammarAccess.getExpressionPrimaryAccess().getExpressionSwitchParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionPrimaryAccess().getExpressionIfParserRuleCall_1()); }
	ruleExpressionIf
{ after(grammarAccess.getExpressionPrimaryAccess().getExpressionIfParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionPrimaryAccess().getExpressionLiteralParserRuleCall_2()); }
	ruleExpressionLiteral
{ after(grammarAccess.getExpressionPrimaryAccess().getExpressionLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExpressionPrimaryAccess().getExpressionForEachParserRuleCall_3()); }
	ruleExpressionForEach
{ after(grammarAccess.getExpressionPrimaryAccess().getExpressionForEachParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExpressionPrimaryAccess().getExpressionFunctionCallParserRuleCall_4()); }
	ruleExpressionFunctionCall
{ after(grammarAccess.getExpressionPrimaryAccess().getExpressionFunctionCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getExpressionPrimaryAccess().getExpressionParenthesizedParserRuleCall_5()); }
	ruleExpressionParenthesized
{ after(grammarAccess.getExpressionPrimaryAccess().getExpressionParenthesizedParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralAccess().getExpressionLiteralCollectionParserRuleCall_0()); }
	ruleExpressionLiteralCollection
{ after(grammarAccess.getExpressionLiteralAccess().getExpressionLiteralCollectionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionLiteralAccess().getLiteralBooleanParserRuleCall_1()); }
	ruleLiteralBoolean
{ after(grammarAccess.getExpressionLiteralAccess().getLiteralBooleanParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionLiteralAccess().getLiteralNumberParserRuleCall_2()); }
	ruleLiteralNumber
{ after(grammarAccess.getExpressionLiteralAccess().getLiteralNumberParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExpressionLiteralAccess().getLiteralNullParserRuleCall_3()); }
	ruleLiteralNull
{ after(grammarAccess.getExpressionLiteralAccess().getLiteralNullParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getExpressionLiteralAccess().getLiteralStringParserRuleCall_4()); }
	ruleLiteralString
{ after(grammarAccess.getExpressionLiteralAccess().getLiteralStringParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getExpressionLiteralAccess().getLiteralTimeParserRuleCall_5()); }
	ruleLiteralTime
{ after(grammarAccess.getExpressionLiteralAccess().getLiteralTimeParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getExpressionLiteralAccess().getLiteralEnumParserRuleCall_6()); }
	ruleLiteralEnum
{ after(grammarAccess.getExpressionLiteralAccess().getLiteralEnumParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getExpressionLiteralAccess().getGroup_7()); }
(rule__ExpressionLiteral__Group_7__0)
{ after(grammarAccess.getExpressionLiteralAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralCollection__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralCollectionAccess().getExpressionLiteralSetParserRuleCall_0()); }
	ruleExpressionLiteralSet
{ after(grammarAccess.getExpressionLiteralCollectionAccess().getExpressionLiteralSetParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionLiteralCollectionAccess().getExpressionLiteralListParserRuleCall_1()); }
	ruleExpressionLiteralList
{ after(grammarAccess.getExpressionLiteralCollectionAccess().getExpressionLiteralListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCallBase__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAbsKeyword_0()); }

	'math.abs' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAbsKeyword_0()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAcosKeyword_1()); }

	'math.acos' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAcosKeyword_1()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAcoshKeyword_2()); }

	'math.acosh' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAcoshKeyword_2()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAsinKeyword_3()); }

	'math.asin' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAsinKeyword_3()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAsinhKeyword_4()); }

	'math.asinh' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAsinhKeyword_4()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAtanKeyword_5()); }

	'math.atan' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAtanKeyword_5()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAtanhKeyword_6()); }

	'math.atanh' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAtanhKeyword_6()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAtan2Keyword_7()); }

	'math.atan2' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathAtan2Keyword_7()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathCeilKeyword_8()); }

	'math.ceil' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathCeilKeyword_8()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathClipKeyword_9()); }

	'math.clip' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathClipKeyword_9()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathCosKeyword_10()); }

	'math.cos' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathCosKeyword_10()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathCoshKeyword_11()); }

	'math.cosh' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathCoshKeyword_11()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathExpKeyword_12()); }

	'math.exp' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathExpKeyword_12()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathFloorKeyword_13()); }

	'math.floor' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathFloorKeyword_13()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathFroundKeyword_14()); }

	'math.fround' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathFroundKeyword_14()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathHypotKeyword_15()); }

	'math.hypot' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathHypotKeyword_15()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathLogKeyword_16()); }

	'math.log' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathLogKeyword_16()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathLog10Keyword_17()); }

	'math.log10' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathLog10Keyword_17()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathLog2Keyword_18()); }

	'math.log2' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathLog2Keyword_18()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathMaxKeyword_19()); }

	'math.max' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathMaxKeyword_19()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathMinKeyword_20()); }

	'math.min' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathMinKeyword_20()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathPowKeyword_21()); }

	'math.pow' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathPowKeyword_21()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathRandomKeyword_22()); }

	'math.random' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathRandomKeyword_22()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathRoundKeyword_23()); }

	'math.round' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathRoundKeyword_23()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathSignKeyword_24()); }

	'math.sign' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathSignKeyword_24()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathSinKeyword_25()); }

	'math.sin' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathSinKeyword_25()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathSinhKeyword_26()); }

	'math.sinh' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathSinhKeyword_26()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathSqrtKeyword_27()); }

	'math.sqrt' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathSqrtKeyword_27()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathTanKeyword_28()); }

	'math.tan' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathTanKeyword_28()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathTanhKeyword_29()); }

	'math.tanh' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathTanhKeyword_29()); }
)

    |(
{ before(grammarAccess.getExpressionFunctionCallBaseAccess().getMathTruncKeyword_30()); }

	'math.trunc' 

{ after(grammarAccess.getExpressionFunctionCallBaseAccess().getMathTruncKeyword_30()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralBooleanAccess().getFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getLiteralBooleanAccess().getFalseKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralBooleanAccess().getIsTrueAssignment_1_1()); }
(rule__LiteralBoolean__IsTrueAssignment_1_1)
{ after(grammarAccess.getLiteralBooleanAccess().getIsTrueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_0()); }
(rule__LiteralTime__Group_0__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_1()); }
(rule__LiteralTime__Group_1__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_2()); }
(rule__LiteralTime__Group_2__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_3()); }
(rule__LiteralTime__Group_3__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_4()); }
(rule__LiteralTime__Group_4__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_5()); }
(rule__LiteralTime__Group_5__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_6()); }
(rule__LiteralTime__Group_6__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives_1_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMKeyword_1_5_1_0()); }

	'm' 

{ after(grammarAccess.getLiteralTimeAccess().getMKeyword_1_5_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteKeyword_1_5_1_1()); }

	'minute' 

{ after(grammarAccess.getLiteralTimeAccess().getMinuteKeyword_1_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives_1_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSKeyword_1_6_1_0()); }

	's' 

{ after(grammarAccess.getLiteralTimeAccess().getSKeyword_1_6_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getSecondKeyword_1_6_1_1()); }

	'second' 

{ after(grammarAccess.getLiteralTimeAccess().getSecondKeyword_1_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives_2_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMKeyword_2_4_1_0()); }

	'm' 

{ after(grammarAccess.getLiteralTimeAccess().getMKeyword_2_4_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteKeyword_2_4_1_1()); }

	'minute' 

{ after(grammarAccess.getLiteralTimeAccess().getMinuteKeyword_2_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives_2_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSKeyword_2_5_1_0()); }

	's' 

{ after(grammarAccess.getLiteralTimeAccess().getSKeyword_2_5_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getSecondKeyword_2_5_1_1()); }

	'second' 

{ after(grammarAccess.getLiteralTimeAccess().getSecondKeyword_2_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMKeyword_3_3_1_0()); }

	'm' 

{ after(grammarAccess.getLiteralTimeAccess().getMKeyword_3_3_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteKeyword_3_3_1_1()); }

	'minute' 

{ after(grammarAccess.getLiteralTimeAccess().getMinuteKeyword_3_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives_3_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSKeyword_3_4_1_0()); }

	's' 

{ after(grammarAccess.getLiteralTimeAccess().getSKeyword_3_4_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getSecondKeyword_3_4_1_1()); }

	'second' 

{ after(grammarAccess.getLiteralTimeAccess().getSecondKeyword_3_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMKeyword_4_2_1_0()); }

	'm' 

{ after(grammarAccess.getLiteralTimeAccess().getMKeyword_4_2_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteKeyword_4_2_1_1()); }

	'minute' 

{ after(grammarAccess.getLiteralTimeAccess().getMinuteKeyword_4_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSKeyword_4_3_1_0()); }

	's' 

{ after(grammarAccess.getLiteralTimeAccess().getSKeyword_4_3_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getSecondKeyword_4_3_1_1()); }

	'second' 

{ after(grammarAccess.getLiteralTimeAccess().getSecondKeyword_4_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMKeyword_5_1_1_0()); }

	'm' 

{ after(grammarAccess.getLiteralTimeAccess().getMKeyword_5_1_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteKeyword_5_1_1_1()); }

	'minute' 

{ after(grammarAccess.getLiteralTimeAccess().getMinuteKeyword_5_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSKeyword_5_2_1_0()); }

	's' 

{ after(grammarAccess.getLiteralTimeAccess().getSKeyword_5_2_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getSecondKeyword_5_2_1_1()); }

	'second' 

{ after(grammarAccess.getLiteralTimeAccess().getSecondKeyword_5_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Alternatives_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSKeyword_6_1_1_0()); }

	's' 

{ after(grammarAccess.getLiteralTimeAccess().getSKeyword_6_1_1_0()); }
)

    |(
{ before(grammarAccess.getLiteralTimeAccess().getSecondKeyword_6_1_1_1()); }

	'second' 

{ after(grammarAccess.getLiteralTimeAccess().getSecondKeyword_6_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ActorTypeDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorTypeDefinition__Group__0__Impl
	rule__ActorTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorTypeDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorTypeDefinitionAccess().getNameAssignment_0()); }
(rule__ActorTypeDefinition__NameAssignment_0)
{ after(grammarAccess.getActorTypeDefinitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorTypeDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorTypeDefinition__Group__1__Impl
	rule__ActorTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorTypeDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorTypeDefinitionAccess().getActorKeyword_1()); }

	'actor' 

{ after(grammarAccess.getActorTypeDefinitionAccess().getActorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorTypeDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorTypeDefinition__Group__2__Impl
	rule__ActorTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorTypeDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorTypeDefinitionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getActorTypeDefinitionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorTypeDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorTypeDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorTypeDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorTypeDefinitionAccess().getComponentAssignment_3()); }
(rule__ActorTypeDefinition__ComponentAssignment_3)*
{ after(grammarAccess.getActorTypeDefinitionAccess().getComponentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActorComponent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorComponent__Group__0__Impl
	rule__ActorComponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorComponent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorComponentAccess().getNameAssignment_0()); }
(rule__ActorComponent__NameAssignment_0)
{ after(grammarAccess.getActorComponentAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorComponent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorComponent__Group__1__Impl
	rule__ActorComponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorComponent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorComponentAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getActorComponentAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorComponent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorComponent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorComponent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorComponentAccess().getTypeAssignment_2()); }
(rule__ActorComponent__TypeAssignment_2)
{ after(grammarAccess.getActorComponentAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DataTypeDefinition__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group_0__0__Impl
	rule__DataTypeDefinition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDefinitionCompoundAction_0_0()); }
(

)
{ after(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDefinitionCompoundAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group_0__1__Impl
	rule__DataTypeDefinition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getNameAssignment_0_1()); }
(rule__DataTypeDefinition__NameAssignment_0_1)
{ after(grammarAccess.getDataTypeDefinitionAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group_0__2__Impl
	rule__DataTypeDefinition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getDataKeyword_0_2()); }

	'data' 

{ after(grammarAccess.getDataTypeDefinitionAccess().getDataKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group_0__3__Impl
	rule__DataTypeDefinition__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getColonKeyword_0_3()); }

	':' 

{ after(grammarAccess.getDataTypeDefinitionAccess().getColonKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getComponentAssignment_0_4()); }
(rule__DataTypeDefinition__ComponentAssignment_0_4)*
{ after(grammarAccess.getDataTypeDefinitionAccess().getComponentAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DataTypeDefinition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group_1__0__Impl
	rule__DataTypeDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDefinitionAliasAction_1_0()); }
(

)
{ after(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDefinitionAliasAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group_1__1__Impl
	rule__DataTypeDefinition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getNameAssignment_1_1()); }
(rule__DataTypeDefinition__NameAssignment_1_1)
{ after(grammarAccess.getDataTypeDefinitionAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group_1__2__Impl
	rule__DataTypeDefinition__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getDataKeyword_1_2()); }

	'data' 

{ after(grammarAccess.getDataTypeDefinitionAccess().getDataKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group_1__3__Impl
	rule__DataTypeDefinition__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getColonKeyword_1_3()); }

	':' 

{ after(grammarAccess.getDataTypeDefinitionAccess().getColonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getAliasAssignment_1_4()); }
(rule__DataTypeDefinition__AliasAssignment_1_4)
{ after(grammarAccess.getDataTypeDefinitionAccess().getAliasAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives_0()); }
(rule__DataType__Alternatives_0)
{ after(grammarAccess.getDataTypeAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getCollectionAssignment_1()); }
(rule__DataType__CollectionAssignment_1)?
{ after(grammarAccess.getDataTypeAccess().getCollectionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataType__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_0_0__0__Impl
	rule__DataType__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getBaseAssignment_0_0_0()); }
(rule__DataType__BaseAssignment_0_0_0)
{ after(grammarAccess.getDataTypeAccess().getBaseAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getGroup_0_0_1()); }
(rule__DataType__Group_0_0_1__0)?
{ after(grammarAccess.getDataTypeAccess().getGroup_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataType__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_0_0_1__0__Impl
	rule__DataType__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getInKeyword_0_0_1_0()); }

	'in' 

{ after(grammarAccess.getDataTypeAccess().getInKeyword_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDefinitionSetAssignment_0_0_1_1()); }
(rule__DataType__DefinitionSetAssignment_0_0_1_1)
{ after(grammarAccess.getDataTypeAccess().getDefinitionSetAssignment_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataDefinitionSet__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_0__0__Impl
	rule__DataDefinitionSet__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getDataDefinitionSetEnumAction_0_0()); }
(

)
{ after(grammarAccess.getDataDefinitionSetAccess().getDataDefinitionSetEnumAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_0__1__Impl
	rule__DataDefinitionSet__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getLeftCurlyBracketKeyword_0_1()); }

	'{' 

{ after(grammarAccess.getDataDefinitionSetAccess().getLeftCurlyBracketKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_0__2__Impl
	rule__DataDefinitionSet__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getElementAssignment_0_2()); }
(rule__DataDefinitionSet__ElementAssignment_0_2)
{ after(grammarAccess.getDataDefinitionSetAccess().getElementAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_0__3__Impl
	rule__DataDefinitionSet__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getGroup_0_3()); }
(rule__DataDefinitionSet__Group_0_3__0)*
{ after(grammarAccess.getDataDefinitionSetAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getRightCurlyBracketKeyword_0_4()); }

	'}' 

{ after(grammarAccess.getDataDefinitionSetAccess().getRightCurlyBracketKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DataDefinitionSet__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_0_3__0__Impl
	rule__DataDefinitionSet__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getCommaKeyword_0_3_0()); }

	',' 

{ after(grammarAccess.getDataDefinitionSetAccess().getCommaKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getElementAssignment_0_3_1()); }
(rule__DataDefinitionSet__ElementAssignment_0_3_1)
{ after(grammarAccess.getDataDefinitionSetAccess().getElementAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataDefinitionSet__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_1__0__Impl
	rule__DataDefinitionSet__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getDataDefinitionSetNumberAction_1_0()); }
(

)
{ after(grammarAccess.getDataDefinitionSetAccess().getDataDefinitionSetNumberAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_1__1__Impl
	rule__DataDefinitionSet__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getLeftCurlyBracketKeyword_1_1()); }

	'{' 

{ after(grammarAccess.getDataDefinitionSetAccess().getLeftCurlyBracketKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_1__2__Impl
	rule__DataDefinitionSet__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getElementAssignment_1_2()); }
(rule__DataDefinitionSet__ElementAssignment_1_2)
{ after(grammarAccess.getDataDefinitionSetAccess().getElementAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_1__3__Impl
	rule__DataDefinitionSet__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getGroup_1_3()); }
(rule__DataDefinitionSet__Group_1_3__0)*
{ after(grammarAccess.getDataDefinitionSetAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getRightCurlyBracketKeyword_1_4()); }

	'}' 

{ after(grammarAccess.getDataDefinitionSetAccess().getRightCurlyBracketKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DataDefinitionSet__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_1_3__0__Impl
	rule__DataDefinitionSet__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getDataDefinitionSetAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getElementAssignment_1_3_1()); }
(rule__DataDefinitionSet__ElementAssignment_1_3_1)
{ after(grammarAccess.getDataDefinitionSetAccess().getElementAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataDefinitionSet__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_2__0__Impl
	rule__DataDefinitionSet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getDataDefinitionSetIntervalAction_2_0()); }
(

)
{ after(grammarAccess.getDataDefinitionSetAccess().getDataDefinitionSetIntervalAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_2__1__Impl
	rule__DataDefinitionSet__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getLeftSquareBracketKeyword_2_1()); }

	'[' 

{ after(grammarAccess.getDataDefinitionSetAccess().getLeftSquareBracketKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_2__2__Impl
	rule__DataDefinitionSet__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getInfAssignment_2_2()); }
(rule__DataDefinitionSet__InfAssignment_2_2)
{ after(grammarAccess.getDataDefinitionSetAccess().getInfAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_2__3__Impl
	rule__DataDefinitionSet__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getCommaKeyword_2_3()); }

	',' 

{ after(grammarAccess.getDataDefinitionSetAccess().getCommaKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_2__4__Impl
	rule__DataDefinitionSet__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getSupAssignment_2_4()); }
(rule__DataDefinitionSet__SupAssignment_2_4)
{ after(grammarAccess.getDataDefinitionSetAccess().getSupAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionSet__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionSet__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getRightSquareBracketKeyword_2_5()); }

	']' 

{ after(grammarAccess.getDataDefinitionSetAccess().getRightSquareBracketKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DataDefinitionEnumElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionEnumElement__Group__0__Impl
	rule__DataDefinitionEnumElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionEnumElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionEnumElementAccess().getDataDefinitionEnumElementAction_0()); }
(

)
{ after(grammarAccess.getDataDefinitionEnumElementAccess().getDataDefinitionEnumElementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionEnumElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionEnumElement__Group__1__Impl
	rule__DataDefinitionEnumElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionEnumElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionEnumElementAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getDataDefinitionEnumElementAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataDefinitionEnumElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataDefinitionEnumElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionEnumElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionEnumElementAccess().getNameAssignment_2()); }
(rule__DataDefinitionEnumElement__NameAssignment_2)
{ after(grammarAccess.getDataDefinitionEnumElementAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DataCollectionType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataCollectionType__Group_4__0__Impl
	rule__DataCollectionType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataCollectionType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeAssignment_4_0()); }
(rule__DataCollectionType__TypeAssignment_4_0)
{ after(grammarAccess.getDataCollectionTypeAccess().getTypeAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataCollectionType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataCollectionType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataCollectionType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getGroup_4_1()); }
(rule__DataCollectionType__Group_4_1__0)
{ after(grammarAccess.getDataCollectionTypeAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataCollectionType__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataCollectionType__Group_4_1__0__Impl
	rule__DataCollectionType__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataCollectionType__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getByKeyword_4_1_0()); }
(
	'by' 
)
{ after(grammarAccess.getDataCollectionTypeAccess().getByKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataCollectionType__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataCollectionType__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataCollectionType__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getMappingAssignment_4_1_1()); }
(rule__DataCollectionType__MappingAssignment_4_1_1)
{ after(grammarAccess.getDataCollectionTypeAccess().getMappingAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataComponent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataComponent__Group__0__Impl
	rule__DataComponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataComponent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataComponentAccess().getNameAssignment_0()); }
(rule__DataComponent__NameAssignment_0)
{ after(grammarAccess.getDataComponentAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataComponent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataComponent__Group__1__Impl
	rule__DataComponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataComponent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataComponentAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getDataComponentAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataComponent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataComponent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataComponent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataComponentAccess().getTypeAssignment_2()); }
(rule__DataComponent__TypeAssignment_2)
{ after(grammarAccess.getDataComponentAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InteractorTypeDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorTypeDefinition__Group__0__Impl
	rule__InteractorTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorTypeDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getNameAssignment_0()); }
(rule__InteractorTypeDefinition__NameAssignment_0)
{ after(grammarAccess.getInteractorTypeDefinitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorTypeDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorTypeDefinition__Group__1__Impl
	rule__InteractorTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorTypeDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getInteractorKeyword_1()); }

	'interactor' 

{ after(grammarAccess.getInteractorTypeDefinitionAccess().getInteractorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorTypeDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorTypeDefinition__Group__2__Impl
	rule__InteractorTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorTypeDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getInteractorTypeDefinitionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorTypeDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorTypeDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorTypeDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getAlternatives_3()); }
(rule__InteractorTypeDefinition__Alternatives_3)*
{ after(grammarAccess.getInteractorTypeDefinitionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InteractorActor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorActor__Group__0__Impl
	rule__InteractorActor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorActor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorActorAccess().getNameAssignment_0()); }
(rule__InteractorActor__NameAssignment_0)
{ after(grammarAccess.getInteractorActorAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorActor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorActor__Group__1__Impl
	rule__InteractorActor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorActor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorActorAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getInteractorActorAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorActor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorActor__Group__2__Impl
	rule__InteractorActor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorActor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorActorAccess().getTypeAssignment_2()); }
(rule__InteractorActor__TypeAssignment_2)
{ after(grammarAccess.getInteractorActorAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorActor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorActor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorActor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorActorAccess().getActorKeyword_3()); }

	'actor' 

{ after(grammarAccess.getInteractorActorAccess().getActorKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InteractorData__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorData__Group__0__Impl
	rule__InteractorData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getNameAssignment_0()); }
(rule__InteractorData__NameAssignment_0)
{ after(grammarAccess.getInteractorDataAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorData__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorData__Group__1__Impl
	rule__InteractorData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getInteractorDataAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorData__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorData__Group__2__Impl
	rule__InteractorData__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getTypeAssignment_2()); }
(rule__InteractorData__TypeAssignment_2)
{ after(grammarAccess.getInteractorDataAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorData__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorData__Group__3__Impl
	rule__InteractorData__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getModeAssignment_3()); }
(rule__InteractorData__ModeAssignment_3)
{ after(grammarAccess.getInteractorDataAccess().getModeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorData__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorData__Group__4__Impl
	rule__InteractorData__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getGroup_4()); }
(rule__InteractorData__Group_4__0)?
{ after(grammarAccess.getInteractorDataAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorData__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorData__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getGroup_5()); }
(rule__InteractorData__Group_5__0)*
{ after(grammarAccess.getInteractorDataAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InteractorData__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorData__Group_4__0__Impl
	rule__InteractorData__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getFromKeyword_4_0()); }

	'from' 

{ after(grammarAccess.getInteractorDataAccess().getFromKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorData__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorData__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getSourceAssignment_4_1()); }
(rule__InteractorData__SourceAssignment_4_1)
{ after(grammarAccess.getInteractorDataAccess().getSourceAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InteractorData__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorData__Group_5__0__Impl
	rule__InteractorData__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getToKeyword_5_0()); }

	'to' 

{ after(grammarAccess.getInteractorDataAccess().getToKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorData__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorData__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getDestinationsAssignment_5_1()); }
(rule__InteractorData__DestinationsAssignment_5_1)
{ after(grammarAccess.getInteractorDataAccess().getDestinationsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InteractorSignalAlias__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalAlias__Group__0__Impl
	rule__InteractorSignalAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalAlias__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalAliasAccess().getSourceAssignment_0()); }
(rule__InteractorSignalAlias__SourceAssignment_0)
{ after(grammarAccess.getInteractorSignalAliasAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorSignalAlias__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalAlias__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalAlias__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalAliasAccess().getGroup_1()); }
(rule__InteractorSignalAlias__Group_1__0)?
{ after(grammarAccess.getInteractorSignalAliasAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InteractorSignalAlias__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalAlias__Group_1__0__Impl
	rule__InteractorSignalAlias__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalAlias__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalAliasAccess().getAsKeyword_1_0()); }

	'as' 

{ after(grammarAccess.getInteractorSignalAliasAccess().getAsKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorSignalAlias__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalAlias__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalAlias__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalAliasAccess().getAliasAssignment_1_1()); }
(rule__InteractorSignalAlias__AliasAssignment_1_1)
{ after(grammarAccess.getInteractorSignalAliasAccess().getAliasAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InteractorComponent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorComponent__Group__0__Impl
	rule__InteractorComponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getNameAssignment_0()); }
(rule__InteractorComponent__NameAssignment_0)
{ after(grammarAccess.getInteractorComponentAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorComponent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorComponent__Group__1__Impl
	rule__InteractorComponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getInteractorComponentAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorComponent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorComponent__Group__2__Impl
	rule__InteractorComponent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getTypeAssignment_2()); }
(rule__InteractorComponent__TypeAssignment_2)
{ after(grammarAccess.getInteractorComponentAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorComponent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorComponent__Group__3__Impl
	rule__InteractorComponent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getInteractorKeyword_3()); }

	'interactor' 

{ after(grammarAccess.getInteractorComponentAccess().getInteractorKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorComponent__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorComponent__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getGroup_4()); }
(rule__InteractorComponent__Group_4__0)?
{ after(grammarAccess.getInteractorComponentAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InteractorComponent__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorComponent__Group_4__0__Impl
	rule__InteractorComponent__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getWithKeyword_4_0()); }

	'with' 

{ after(grammarAccess.getInteractorComponentAccess().getWithKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorComponent__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorComponent__Group_4__1__Impl
	rule__InteractorComponent__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getActorsAssignment_4_1()); }
(rule__InteractorComponent__ActorsAssignment_4_1)
{ after(grammarAccess.getInteractorComponentAccess().getActorsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorComponent__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorComponent__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getGroup_4_2()); }
(rule__InteractorComponent__Group_4_2__0)*
{ after(grammarAccess.getInteractorComponentAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InteractorComponent__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorComponent__Group_4_2__0__Impl
	rule__InteractorComponent__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getInteractorComponentAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorComponent__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorComponent__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getActorsAssignment_4_2_1()); }
(rule__InteractorComponent__ActorsAssignment_4_2_1)
{ after(grammarAccess.getInteractorComponentAccess().getActorsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActorAlias__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorAlias__Group__0__Impl
	rule__ActorAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getSourceAssignment_0()); }
(rule__ActorAlias__SourceAssignment_0)
{ after(grammarAccess.getActorAliasAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorAlias__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorAlias__Group__1__Impl
	rule__ActorAlias__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getAsKeyword_1()); }

	'as' 

{ after(grammarAccess.getActorAliasAccess().getAsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorAlias__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorAlias__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getAliasAssignment_2()); }
(rule__ActorAlias__AliasAssignment_2)
{ after(grammarAccess.getActorAliasAccess().getAliasAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InteractorSignalReception__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalReception__Group_0__0__Impl
	rule__InteractorSignalReception__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalReception__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getInstanceAssignment_0_0()); }
(rule__InteractorSignalReception__InstanceAssignment_0_0)
{ after(grammarAccess.getInteractorSignalReceptionAccess().getInstanceAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorSignalReception__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalReception__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalReception__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getGroup_0_1()); }
(rule__InteractorSignalReception__Group_0_1__0)?
{ after(grammarAccess.getInteractorSignalReceptionAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InteractorSignalReception__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalReception__Group_0_1__0__Impl
	rule__InteractorSignalReception__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalReception__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getFromKeyword_0_1_0()); }

	'from' 

{ after(grammarAccess.getInteractorSignalReceptionAccess().getFromKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorSignalReception__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalReception__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalReception__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getSourceAssignment_0_1_1()); }
(rule__InteractorSignalReception__SourceAssignment_0_1_1)
{ after(grammarAccess.getInteractorSignalReceptionAccess().getSourceAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InteractorSignalEmission__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalEmission__Group__0__Impl
	rule__InteractorSignalEmission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalEmission__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalEmissionAccess().getInstanceAssignment_0()); }
(rule__InteractorSignalEmission__InstanceAssignment_0)
{ after(grammarAccess.getInteractorSignalEmissionAccess().getInstanceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorSignalEmission__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalEmission__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalEmission__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalEmissionAccess().getGroup_1()); }
(rule__InteractorSignalEmission__Group_1__0)?
{ after(grammarAccess.getInteractorSignalEmissionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InteractorSignalEmission__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalEmission__Group_1__0__Impl
	rule__InteractorSignalEmission__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalEmission__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalEmissionAccess().getToKeyword_1_0()); }

	'to' 

{ after(grammarAccess.getInteractorSignalEmissionAccess().getToKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorSignalEmission__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorSignalEmission__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalEmission__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalEmissionAccess().getDestinationAssignment_1_1()); }
(rule__InteractorSignalEmission__DestinationAssignment_1_1)
{ after(grammarAccess.getInteractorSignalEmissionAccess().getDestinationAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InteractorBehavior__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehavior__Group__0__Impl
	rule__InteractorBehavior__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehavior__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorAccess().getCauseAssignment_0()); }
(rule__InteractorBehavior__CauseAssignment_0)
{ after(grammarAccess.getInteractorBehaviorAccess().getCauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehavior__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehavior__Group__1__Impl
	rule__InteractorBehavior__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehavior__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getInteractorBehaviorAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehavior__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehavior__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehavior__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getInteractorBehaviorAccess().getEffectAssignment_2()); }
(rule__InteractorBehavior__EffectAssignment_2)
{ after(grammarAccess.getInteractorBehaviorAccess().getEffectAssignment_2()); }
)
(
{ before(grammarAccess.getInteractorBehaviorAccess().getEffectAssignment_2()); }
(rule__InteractorBehavior__EffectAssignment_2)*
{ after(grammarAccess.getInteractorBehaviorAccess().getEffectAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InteractorBehaviorOnCause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorOnCause__Group__0__Impl
	rule__InteractorBehaviorOnCause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorOnCause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorOnCauseAccess().getOnKeyword_0()); }

	'on' 

{ after(grammarAccess.getInteractorBehaviorOnCauseAccess().getOnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorOnCause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorOnCause__Group__1__Impl
	rule__InteractorBehaviorOnCause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorOnCause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorOnCauseAccess().getEventAssignment_1()); }
(rule__InteractorBehaviorOnCause__EventAssignment_1)
{ after(grammarAccess.getInteractorBehaviorOnCauseAccess().getEventAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorOnCause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorOnCause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorOnCause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorOnCauseAccess().getGroup_2()); }
(rule__InteractorBehaviorOnCause__Group_2__0)?
{ after(grammarAccess.getInteractorBehaviorOnCauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InteractorBehaviorOnCause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorOnCause__Group_2__0__Impl
	rule__InteractorBehaviorOnCause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorOnCause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorOnCauseAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getInteractorBehaviorOnCauseAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorOnCause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorOnCause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorOnCause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorOnCauseAccess().getGuardAssignment_2_1()); }
(rule__InteractorBehaviorOnCause__GuardAssignment_2_1)
{ after(grammarAccess.getInteractorBehaviorOnCauseAccess().getGuardAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InteractorBehaviorWhenCause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorWhenCause__Group__0__Impl
	rule__InteractorBehaviorWhenCause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorWhenCause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorWhenCauseAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getInteractorBehaviorWhenCauseAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorWhenCause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorWhenCause__Group__1__Impl
	rule__InteractorBehaviorWhenCause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorWhenCause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorWhenCauseAccess().getConditionAssignment_1()); }
(rule__InteractorBehaviorWhenCause__ConditionAssignment_1)
{ after(grammarAccess.getInteractorBehaviorWhenCauseAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorWhenCause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorWhenCause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorWhenCause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorWhenCauseAccess().getGroup_2()); }
(rule__InteractorBehaviorWhenCause__Group_2__0)?
{ after(grammarAccess.getInteractorBehaviorWhenCauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InteractorBehaviorWhenCause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorWhenCause__Group_2__0__Impl
	rule__InteractorBehaviorWhenCause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorWhenCause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorWhenCauseAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getInteractorBehaviorWhenCauseAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorWhenCause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorWhenCause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorWhenCause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorWhenCauseAccess().getGuardAssignment_2_1()); }
(rule__InteractorBehaviorWhenCause__GuardAssignment_2_1)
{ after(grammarAccess.getInteractorBehaviorWhenCauseAccess().getGuardAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InteractorBehaviorAlwaysEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorAlwaysEffect__Group__0__Impl
	rule__InteractorBehaviorAlwaysEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorAlwaysEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getAlwaysKeyword_0()); }

	'always' 

{ after(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getAlwaysKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorAlwaysEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorAlwaysEffect__Group__1__Impl
	rule__InteractorBehaviorAlwaysEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorAlwaysEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getTargetAssignment_1()); }
(rule__InteractorBehaviorAlwaysEffect__TargetAssignment_1)
{ after(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorAlwaysEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorAlwaysEffect__Group__2__Impl
	rule__InteractorBehaviorAlwaysEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorAlwaysEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorAlwaysEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorAlwaysEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorAlwaysEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getValueAssignment_3()); }
(rule__InteractorBehaviorAlwaysEffect__ValueAssignment_3)
{ after(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InteractorBehaviorSetEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorSetEffect__Group__0__Impl
	rule__InteractorBehaviorSetEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorSetEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorSetEffectAccess().getSetKeyword_0()); }

	'set' 

{ after(grammarAccess.getInteractorBehaviorSetEffectAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorSetEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorSetEffect__Group__1__Impl
	rule__InteractorBehaviorSetEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorSetEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorSetEffectAccess().getTargetAssignment_1()); }
(rule__InteractorBehaviorSetEffect__TargetAssignment_1)
{ after(grammarAccess.getInteractorBehaviorSetEffectAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorSetEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorSetEffect__Group__2__Impl
	rule__InteractorBehaviorSetEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorSetEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorSetEffectAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getInteractorBehaviorSetEffectAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorSetEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorSetEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorSetEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorSetEffectAccess().getValueAssignment_3()); }
(rule__InteractorBehaviorSetEffect__ValueAssignment_3)
{ after(grammarAccess.getInteractorBehaviorSetEffectAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InteractorBehaviorTriggerEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorTriggerEffect__Group__0__Impl
	rule__InteractorBehaviorTriggerEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorTriggerEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getTriggerKeyword_0()); }

	'trigger' 

{ after(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getTriggerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorTriggerEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorTriggerEffect__Group__1__Impl
	rule__InteractorBehaviorTriggerEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorTriggerEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getTargetAssignment_1()); }
(rule__InteractorBehaviorTriggerEffect__TargetAssignment_1)
{ after(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorTriggerEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorTriggerEffect__Group__2__Impl
	rule__InteractorBehaviorTriggerEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorTriggerEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorBehaviorTriggerEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorBehaviorTriggerEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorTriggerEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getValueAssignment_3()); }
(rule__InteractorBehaviorTriggerEffect__ValueAssignment_3)
{ after(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExpressionOr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOr__Group__0__Impl
	rule__ExpressionOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOrAccess().getExpressionAndParserRuleCall_0()); }
	ruleExpressionAnd
{ after(grammarAccess.getExpressionOrAccess().getExpressionAndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionOr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOrAccess().getGroup_1()); }
(rule__ExpressionOr__Group_1__0)*
{ after(grammarAccess.getExpressionOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionOr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOr__Group_1__0__Impl
	rule__ExpressionOr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOrAccess().getGroup_1_0()); }
(rule__ExpressionOr__Group_1_0__0)
{ after(grammarAccess.getExpressionOrAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionOr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOrAccess().getRightOperandAssignment_1_1()); }
(rule__ExpressionOr__RightOperandAssignment_1_1)
{ after(grammarAccess.getExpressionOrAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionOr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOrAccess().getGroup_1_0_0()); }
(rule__ExpressionOr__Group_1_0_0__0)
{ after(grammarAccess.getExpressionOrAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExpressionOr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOr__Group_1_0_0__0__Impl
	rule__ExpressionOr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOrAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getExpressionOrAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionOr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOrAccess().getFeatureAssignment_1_0_0_1()); }
(rule__ExpressionOr__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getExpressionOrAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionAnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAnd__Group__0__Impl
	rule__ExpressionAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAnd__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAndAccess().getExpressionEqualityParserRuleCall_0()); }
	ruleExpressionEquality
{ after(grammarAccess.getExpressionAndAccess().getExpressionEqualityParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionAnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAnd__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAndAccess().getGroup_1()); }
(rule__ExpressionAnd__Group_1__0)*
{ after(grammarAccess.getExpressionAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionAnd__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAnd__Group_1__0__Impl
	rule__ExpressionAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAnd__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAndAccess().getGroup_1_0()); }
(rule__ExpressionAnd__Group_1_0__0)
{ after(grammarAccess.getExpressionAndAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionAnd__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAnd__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAnd__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAndAccess().getRightOperandAssignment_1_1()); }
(rule__ExpressionAnd__RightOperandAssignment_1_1)
{ after(grammarAccess.getExpressionAndAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionAnd__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAnd__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAnd__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAndAccess().getGroup_1_0_0()); }
(rule__ExpressionAnd__Group_1_0_0__0)
{ after(grammarAccess.getExpressionAndAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExpressionAnd__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAnd__Group_1_0_0__0__Impl
	rule__ExpressionAnd__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAnd__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAndAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getExpressionAndAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionAnd__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAnd__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAnd__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAndAccess().getFeatureAssignment_1_0_0_1()); }
(rule__ExpressionAnd__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getExpressionAndAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionEquality__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionEquality__Group__0__Impl
	rule__ExpressionEquality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionEquality__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionEqualityAccess().getExpressionCompareParserRuleCall_0()); }
	ruleExpressionCompare
{ after(grammarAccess.getExpressionEqualityAccess().getExpressionCompareParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionEquality__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionEquality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionEquality__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionEqualityAccess().getGroup_1()); }
(rule__ExpressionEquality__Group_1__0)*
{ after(grammarAccess.getExpressionEqualityAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionEquality__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionEquality__Group_1__0__Impl
	rule__ExpressionEquality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionEquality__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionEqualityAccess().getGroup_1_0()); }
(rule__ExpressionEquality__Group_1_0__0)
{ after(grammarAccess.getExpressionEqualityAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionEquality__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionEquality__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionEquality__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionEqualityAccess().getRightOperandAssignment_1_1()); }
(rule__ExpressionEquality__RightOperandAssignment_1_1)
{ after(grammarAccess.getExpressionEqualityAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionEquality__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionEquality__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionEquality__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionEqualityAccess().getGroup_1_0_0()); }
(rule__ExpressionEquality__Group_1_0_0__0)
{ after(grammarAccess.getExpressionEqualityAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExpressionEquality__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionEquality__Group_1_0_0__0__Impl
	rule__ExpressionEquality__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionEquality__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionEqualityAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getExpressionEqualityAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionEquality__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionEquality__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionEquality__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionEqualityAccess().getFeatureAssignment_1_0_0_1()); }
(rule__ExpressionEquality__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getExpressionEqualityAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionCompare__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionCompare__Group__0__Impl
	rule__ExpressionCompare__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCompare__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCompareAccess().getExpressionOtherParserRuleCall_0()); }
	ruleExpressionOther
{ after(grammarAccess.getExpressionCompareAccess().getExpressionOtherParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionCompare__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionCompare__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCompare__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCompareAccess().getGroup_1()); }
(rule__ExpressionCompare__Group_1__0)*
{ after(grammarAccess.getExpressionCompareAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionCompare__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionCompare__Group_1__0__Impl
	rule__ExpressionCompare__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCompare__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCompareAccess().getGroup_1_0()); }
(rule__ExpressionCompare__Group_1_0__0)
{ after(grammarAccess.getExpressionCompareAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionCompare__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionCompare__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCompare__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCompareAccess().getRightOperandAssignment_1_1()); }
(rule__ExpressionCompare__RightOperandAssignment_1_1)
{ after(grammarAccess.getExpressionCompareAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionCompare__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionCompare__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCompare__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCompareAccess().getGroup_1_0_0()); }
(rule__ExpressionCompare__Group_1_0_0__0)
{ after(grammarAccess.getExpressionCompareAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExpressionCompare__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionCompare__Group_1_0_0__0__Impl
	rule__ExpressionCompare__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCompare__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCompareAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getExpressionCompareAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionCompare__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionCompare__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCompare__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCompareAccess().getFeatureAssignment_1_0_0_1()); }
(rule__ExpressionCompare__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getExpressionCompareAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionOther__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOther__Group__0__Impl
	rule__ExpressionOther__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOther__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOtherAccess().getExpressionAdditionParserRuleCall_0()); }
	ruleExpressionAddition
{ after(grammarAccess.getExpressionOtherAccess().getExpressionAdditionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionOther__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOther__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOther__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOtherAccess().getGroup_1()); }
(rule__ExpressionOther__Group_1__0)*
{ after(grammarAccess.getExpressionOtherAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionOther__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOther__Group_1__0__Impl
	rule__ExpressionOther__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOther__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOtherAccess().getGroup_1_0()); }
(rule__ExpressionOther__Group_1_0__0)
{ after(grammarAccess.getExpressionOtherAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionOther__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOther__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOther__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOtherAccess().getRightOperandAssignment_1_1()); }
(rule__ExpressionOther__RightOperandAssignment_1_1)
{ after(grammarAccess.getExpressionOtherAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionOther__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOther__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOther__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOtherAccess().getGroup_1_0_0()); }
(rule__ExpressionOther__Group_1_0_0__0)
{ after(grammarAccess.getExpressionOtherAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExpressionOther__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOther__Group_1_0_0__0__Impl
	rule__ExpressionOther__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOther__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOtherAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getExpressionOtherAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionOther__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionOther__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOther__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOtherAccess().getFeatureAssignment_1_0_0_1()); }
(rule__ExpressionOther__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getExpressionOtherAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionAddition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAddition__Group__0__Impl
	rule__ExpressionAddition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAddition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAdditionAccess().getExpressionMultiplicationParserRuleCall_0()); }
	ruleExpressionMultiplication
{ after(grammarAccess.getExpressionAdditionAccess().getExpressionMultiplicationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionAddition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAddition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAddition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAdditionAccess().getGroup_1()); }
(rule__ExpressionAddition__Group_1__0)*
{ after(grammarAccess.getExpressionAdditionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionAddition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAddition__Group_1__0__Impl
	rule__ExpressionAddition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAddition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAdditionAccess().getGroup_1_0()); }
(rule__ExpressionAddition__Group_1_0__0)
{ after(grammarAccess.getExpressionAdditionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionAddition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAddition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAddition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAdditionAccess().getRightOperandAssignment_1_1()); }
(rule__ExpressionAddition__RightOperandAssignment_1_1)
{ after(grammarAccess.getExpressionAdditionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionAddition__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAddition__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAddition__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAdditionAccess().getGroup_1_0_0()); }
(rule__ExpressionAddition__Group_1_0_0__0)
{ after(grammarAccess.getExpressionAdditionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExpressionAddition__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAddition__Group_1_0_0__0__Impl
	rule__ExpressionAddition__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAddition__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAdditionAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getExpressionAdditionAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionAddition__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionAddition__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAddition__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAdditionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__ExpressionAddition__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getExpressionAdditionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionMultiplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionMultiplication__Group__0__Impl
	rule__ExpressionMultiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMultiplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMultiplicationAccess().getExpressionUnaryParserRuleCall_0()); }
	ruleExpressionUnary
{ after(grammarAccess.getExpressionMultiplicationAccess().getExpressionUnaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionMultiplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionMultiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMultiplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMultiplicationAccess().getGroup_1()); }
(rule__ExpressionMultiplication__Group_1__0)*
{ after(grammarAccess.getExpressionMultiplicationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionMultiplication__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionMultiplication__Group_1__0__Impl
	rule__ExpressionMultiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMultiplication__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMultiplicationAccess().getGroup_1_0()); }
(rule__ExpressionMultiplication__Group_1_0__0)
{ after(grammarAccess.getExpressionMultiplicationAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionMultiplication__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionMultiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMultiplication__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMultiplicationAccess().getRightOperandAssignment_1_1()); }
(rule__ExpressionMultiplication__RightOperandAssignment_1_1)
{ after(grammarAccess.getExpressionMultiplicationAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionMultiplication__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionMultiplication__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMultiplication__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMultiplicationAccess().getGroup_1_0_0()); }
(rule__ExpressionMultiplication__Group_1_0_0__0)
{ after(grammarAccess.getExpressionMultiplicationAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExpressionMultiplication__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionMultiplication__Group_1_0_0__0__Impl
	rule__ExpressionMultiplication__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMultiplication__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMultiplicationAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getExpressionMultiplicationAccess().getExpressionBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionMultiplication__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionMultiplication__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMultiplication__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMultiplicationAccess().getFeatureAssignment_1_0_0_1()); }
(rule__ExpressionMultiplication__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getExpressionMultiplicationAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionUnary__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionUnary__Group_0__0__Impl
	rule__ExpressionUnary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionUnary__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionUnaryAccess().getUnaryOperationAction_0_0()); }
(

)
{ after(grammarAccess.getExpressionUnaryAccess().getUnaryOperationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionUnary__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionUnary__Group_0__1__Impl
	rule__ExpressionUnary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionUnary__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionUnaryAccess().getFeatureAssignment_0_1()); }
(rule__ExpressionUnary__FeatureAssignment_0_1)
{ after(grammarAccess.getExpressionUnaryAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionUnary__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionUnary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionUnary__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionUnaryAccess().getOperandAssignment_0_2()); }
(rule__ExpressionUnary__OperandAssignment_0_2)
{ after(grammarAccess.getExpressionUnaryAccess().getOperandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionLiteral__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteral__Group_7__0__Impl
	rule__ExpressionLiteral__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteral__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralAccess().getLiteralDataAction_7_0()); }
(

)
{ after(grammarAccess.getExpressionLiteralAccess().getLiteralDataAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLiteral__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteral__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteral__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralAccess().getDataAssignment_7_1()); }
(rule__ExpressionLiteral__DataAssignment_7_1)
{ after(grammarAccess.getExpressionLiteralAccess().getDataAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionLiteralSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralSet__Group__0__Impl
	rule__ExpressionLiteralSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralSetAccess().getExpressionLiteralSetAction_0()); }
(

)
{ after(grammarAccess.getExpressionLiteralSetAccess().getExpressionLiteralSetAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLiteralSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralSet__Group__1__Impl
	rule__ExpressionLiteralSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralSetAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getExpressionLiteralSetAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLiteralSet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralSet__Group__2__Impl
	rule__ExpressionLiteralSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralSet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralSetAccess().getGroup_2()); }
(rule__ExpressionLiteralSet__Group_2__0)?
{ after(grammarAccess.getExpressionLiteralSetAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLiteralSet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralSet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralSetAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getExpressionLiteralSetAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExpressionLiteralSet__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralSet__Group_2__0__Impl
	rule__ExpressionLiteralSet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralSet__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralSetAccess().getElementsAssignment_2_0()); }
(rule__ExpressionLiteralSet__ElementsAssignment_2_0)
{ after(grammarAccess.getExpressionLiteralSetAccess().getElementsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLiteralSet__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralSet__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralSet__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralSetAccess().getGroup_2_1()); }
(rule__ExpressionLiteralSet__Group_2_1__0)*
{ after(grammarAccess.getExpressionLiteralSetAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionLiteralSet__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralSet__Group_2_1__0__Impl
	rule__ExpressionLiteralSet__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralSet__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralSetAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getExpressionLiteralSetAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLiteralSet__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralSet__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralSet__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralSetAccess().getElementsAssignment_2_1_1()); }
(rule__ExpressionLiteralSet__ElementsAssignment_2_1_1)
{ after(grammarAccess.getExpressionLiteralSetAccess().getElementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionLiteralList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralList__Group__0__Impl
	rule__ExpressionLiteralList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralListAccess().getExpressionLiteralListAction_0()); }
(

)
{ after(grammarAccess.getExpressionLiteralListAccess().getExpressionLiteralListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLiteralList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralList__Group__1__Impl
	rule__ExpressionLiteralList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralListAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getExpressionLiteralListAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLiteralList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralList__Group__2__Impl
	rule__ExpressionLiteralList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralListAccess().getGroup_2()); }
(rule__ExpressionLiteralList__Group_2__0)?
{ after(grammarAccess.getExpressionLiteralListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLiteralList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralListAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getExpressionLiteralListAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExpressionLiteralList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralList__Group_2__0__Impl
	rule__ExpressionLiteralList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralListAccess().getElementsAssignment_2_0()); }
(rule__ExpressionLiteralList__ElementsAssignment_2_0)
{ after(grammarAccess.getExpressionLiteralListAccess().getElementsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLiteralList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralListAccess().getGroup_2_1()); }
(rule__ExpressionLiteralList__Group_2_1__0)*
{ after(grammarAccess.getExpressionLiteralListAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionLiteralList__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralList__Group_2_1__0__Impl
	rule__ExpressionLiteralList__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralList__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralListAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getExpressionLiteralListAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLiteralList__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionLiteralList__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralList__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralListAccess().getElementsAssignment_2_1_1()); }
(rule__ExpressionLiteralList__ElementsAssignment_2_1_1)
{ after(grammarAccess.getExpressionLiteralListAccess().getElementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionParenthesized__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionParenthesized__Group__0__Impl
	rule__ExpressionParenthesized__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionParenthesized__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionParenthesizedAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getExpressionParenthesizedAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionParenthesized__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionParenthesized__Group__1__Impl
	rule__ExpressionParenthesized__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionParenthesized__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionParenthesizedAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getExpressionParenthesizedAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionParenthesized__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionParenthesized__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionParenthesized__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionParenthesizedAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getExpressionParenthesizedAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionIf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionIf__Group__0__Impl
	rule__ExpressionIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getExpressionIfAction_0()); }
(

)
{ after(grammarAccess.getExpressionIfAccess().getExpressionIfAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionIf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionIf__Group__1__Impl
	rule__ExpressionIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getExpressionIfAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionIf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionIf__Group__2__Impl
	rule__ExpressionIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getExpressionIfAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionIf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionIf__Group__3__Impl
	rule__ExpressionIf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getIfAssignment_3()); }
(rule__ExpressionIf__IfAssignment_3)
{ after(grammarAccess.getExpressionIfAccess().getIfAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionIf__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionIf__Group__4__Impl
	rule__ExpressionIf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getRightParenthesisKeyword_4()); }
(
	')' 
)
{ after(grammarAccess.getExpressionIfAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionIf__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionIf__Group__5__Impl
	rule__ExpressionIf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getThenAssignment_5()); }
(rule__ExpressionIf__ThenAssignment_5)
{ after(grammarAccess.getExpressionIfAccess().getThenAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionIf__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionIf__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getGroup_6()); }
(rule__ExpressionIf__Group_6__0)
{ after(grammarAccess.getExpressionIfAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ExpressionIf__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionIf__Group_6__0__Impl
	rule__ExpressionIf__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getElseKeyword_6_0()); }
(
	'else' 
)
{ after(grammarAccess.getExpressionIfAccess().getElseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionIf__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionIf__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getElseAssignment_6_1()); }
(rule__ExpressionIf__ElseAssignment_6_1)
{ after(grammarAccess.getExpressionIfAccess().getElseAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionSwitch__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionSwitch__Group__0__Impl
	rule__ExpressionSwitch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getExpressionSwitchAction_0()); }
(

)
{ after(grammarAccess.getExpressionSwitchAccess().getExpressionSwitchAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionSwitch__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionSwitch__Group__1__Impl
	rule__ExpressionSwitch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getSwitchKeyword_1()); }

	'switch' 

{ after(grammarAccess.getExpressionSwitchAccess().getSwitchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionSwitch__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionSwitch__Group__2__Impl
	rule__ExpressionSwitch__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getExpressionSwitchAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionSwitch__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionSwitch__Group__3__Impl
	rule__ExpressionSwitch__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getSwitchAssignment_3()); }
(rule__ExpressionSwitch__SwitchAssignment_3)
{ after(grammarAccess.getExpressionSwitchAccess().getSwitchAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionSwitch__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionSwitch__Group__4__Impl
	rule__ExpressionSwitch__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getRightParenthesisKeyword_4()); }
(
	')' 
)
{ after(grammarAccess.getExpressionSwitchAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionSwitch__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionSwitch__Group__5__Impl
	rule__ExpressionSwitch__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getExpressionSwitchAccess().getCaseAssignment_5()); }
(rule__ExpressionSwitch__CaseAssignment_5)
{ after(grammarAccess.getExpressionSwitchAccess().getCaseAssignment_5()); }
)
(
{ before(grammarAccess.getExpressionSwitchAccess().getCaseAssignment_5()); }
(rule__ExpressionSwitch__CaseAssignment_5)*
{ after(grammarAccess.getExpressionSwitchAccess().getCaseAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionSwitch__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionSwitch__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getGroup_6()); }
(rule__ExpressionSwitch__Group_6__0)?
{ after(grammarAccess.getExpressionSwitchAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ExpressionSwitch__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionSwitch__Group_6__0__Impl
	rule__ExpressionSwitch__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getDefaultKeyword_6_0()); }
(
	'default' 
)
{ after(grammarAccess.getExpressionSwitchAccess().getDefaultKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionSwitch__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionSwitch__Group_6__1__Impl
	rule__ExpressionSwitch__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getColonKeyword_6_1()); }

	':' 

{ after(grammarAccess.getExpressionSwitchAccess().getColonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionSwitch__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionSwitch__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getDefaultAssignment_6_2()); }
(rule__ExpressionSwitch__DefaultAssignment_6_2)
{ after(grammarAccess.getExpressionSwitchAccess().getDefaultAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExpressionCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionCase__Group__0__Impl
	rule__ExpressionCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCaseAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getExpressionCaseAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionCase__Group__1__Impl
	rule__ExpressionCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCaseAccess().getCaseAssignment_1()); }
(rule__ExpressionCase__CaseAssignment_1)
{ after(grammarAccess.getExpressionCaseAccess().getCaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionCase__Group__2__Impl
	rule__ExpressionCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCaseAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getExpressionCaseAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionCase__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCase__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCaseAccess().getThenAssignment_3()); }
(rule__ExpressionCase__ThenAssignment_3)
{ after(grammarAccess.getExpressionCaseAccess().getThenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExpressionForEach__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionForEach__Group__0__Impl
	rule__ExpressionForEach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionForEach__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionForEachAccess().getExpressionForEachAction_0()); }
(

)
{ after(grammarAccess.getExpressionForEachAccess().getExpressionForEachAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionForEach__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionForEach__Group__1__Impl
	rule__ExpressionForEach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionForEach__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionForEachAccess().getForKeyword_1()); }

	'for' 

{ after(grammarAccess.getExpressionForEachAccess().getForKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionForEach__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionForEach__Group__2__Impl
	rule__ExpressionForEach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionForEach__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionForEachAccess().getEachKeyword_2()); }

	'each' 

{ after(grammarAccess.getExpressionForEachAccess().getEachKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionForEach__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionForEach__Group__3__Impl
	rule__ExpressionForEach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionForEach__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionForEachAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getExpressionForEachAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionForEach__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionForEach__Group__4__Impl
	rule__ExpressionForEach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionForEach__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionForEachAccess().getForExpressionAssignment_4()); }
(rule__ExpressionForEach__ForExpressionAssignment_4)
{ after(grammarAccess.getExpressionForEachAccess().getForExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionForEach__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionForEach__Group__5__Impl
	rule__ExpressionForEach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionForEach__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionForEachAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getExpressionForEachAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionForEach__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionForEach__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionForEach__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionForEachAccess().getEachExpressionAssignment_6()); }
(rule__ExpressionForEach__EachExpressionAssignment_6)
{ after(grammarAccess.getExpressionForEachAccess().getEachExpressionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ExpressionFunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionFunctionCall__Group__0__Impl
	rule__ExpressionFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getExpressionFunctionCallAction_0()); }
(

)
{ after(grammarAccess.getExpressionFunctionCallAccess().getExpressionFunctionCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionFunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionFunctionCall__Group__1__Impl
	rule__ExpressionFunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getFunctionAssignment_1()); }
(rule__ExpressionFunctionCall__FunctionAssignment_1)
{ after(grammarAccess.getExpressionFunctionCallAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionFunctionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionFunctionCall__Group__2__Impl
	rule__ExpressionFunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getExpressionFunctionCallAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionFunctionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionFunctionCall__Group__3__Impl
	rule__ExpressionFunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getArgumentsAssignment_3()); }
(rule__ExpressionFunctionCall__ArgumentsAssignment_3)?
{ after(grammarAccess.getExpressionFunctionCallAccess().getArgumentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionFunctionCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionFunctionCall__Group__4__Impl
	rule__ExpressionFunctionCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getGroup_4()); }
(rule__ExpressionFunctionCall__Group_4__0)*
{ after(grammarAccess.getExpressionFunctionCallAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionFunctionCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionFunctionCall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getExpressionFunctionCallAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ExpressionFunctionCall__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionFunctionCall__Group_4__0__Impl
	rule__ExpressionFunctionCall__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCall__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getExpressionFunctionCallAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionFunctionCall__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionFunctionCall__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCall__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getArgumentsAssignment_4_1()); }
(rule__ExpressionFunctionCall__ArgumentsAssignment_4_1)
{ after(grammarAccess.getExpressionFunctionCallAccess().getArgumentsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralBoolean__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralBoolean__Group__0__Impl
	rule__LiteralBoolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralBooleanAccess().getLiteralBooleanAction_0()); }
(

)
{ after(grammarAccess.getLiteralBooleanAccess().getLiteralBooleanAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralBoolean__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralBoolean__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralBooleanAccess().getAlternatives_1()); }
(rule__LiteralBoolean__Alternatives_1)
{ after(grammarAccess.getLiteralBooleanAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralNull__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralNull__Group__0__Impl
	rule__LiteralNull__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralNull__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralNullAccess().getLiteralNullAction_0()); }
(

)
{ after(grammarAccess.getLiteralNullAccess().getLiteralNullAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralNull__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralNull__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralNull__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralNullAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getLiteralNullAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralNumber__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralNumber__Group__0__Impl
	rule__LiteralNumber__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralNumber__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralNumberAccess().getLiteralNumberAction_0()); }
(

)
{ after(grammarAccess.getLiteralNumberAccess().getLiteralNumberAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralNumber__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralNumber__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralNumber__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralNumberAccess().getValueAssignment_1()); }
(rule__LiteralNumber__ValueAssignment_1)
{ after(grammarAccess.getLiteralNumberAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralString__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralString__Group__0__Impl
	rule__LiteralString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralString__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralStringAccess().getLiteralStringAction_0()); }
(

)
{ after(grammarAccess.getLiteralStringAccess().getLiteralStringAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralString__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralString__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralString__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralStringAccess().getValueAssignment_1()); }
(rule__LiteralString__ValueAssignment_1)
{ after(grammarAccess.getLiteralStringAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralEnum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralEnum__Group__0__Impl
	rule__LiteralEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralEnum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralEnumAccess().getLiteralEnumAction_0()); }
(

)
{ after(grammarAccess.getLiteralEnumAccess().getLiteralEnumAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralEnum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralEnum__Group__1__Impl
	rule__LiteralEnum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralEnum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralEnumAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getLiteralEnumAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralEnum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralEnum__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralEnum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralEnumAccess().getValueAssignment_2()); }
(rule__LiteralEnum__ValueAssignment_2)
{ after(grammarAccess.getLiteralEnumAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LiteralTime__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_0__0__Impl
	rule__LiteralTime__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_0_0()); }
(

)
{ after(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getNowAssignment_0_1()); }
(rule__LiteralTime__NowAssignment_0_1)
{ after(grammarAccess.getLiteralTimeAccess().getNowAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1__0__Impl
	rule__LiteralTime__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_1_0()); }
(

)
{ after(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1__1__Impl
	rule__LiteralTime__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_1_1()); }
(rule__LiteralTime__Group_1_1__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1__2__Impl
	rule__LiteralTime__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_1_2()); }
(rule__LiteralTime__Group_1_2__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1__3__Impl
	rule__LiteralTime__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_1_3()); }
(rule__LiteralTime__Group_1_3__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1__4__Impl
	rule__LiteralTime__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_1_4()); }
(rule__LiteralTime__Group_1_4__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1__5__Impl
	rule__LiteralTime__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_1_5()); }
(rule__LiteralTime__Group_1_5__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_1_6()); }
(rule__LiteralTime__Group_1_6__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__LiteralTime__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_1__0__Impl
	rule__LiteralTime__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getYearAssignment_1_1_0()); }
(rule__LiteralTime__YearAssignment_1_1_0)
{ after(grammarAccess.getLiteralTimeAccess().getYearAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getYearKeyword_1_1_1()); }

	'year' 

{ after(grammarAccess.getLiteralTimeAccess().getYearKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_2__0__Impl
	rule__LiteralTime__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMonthAssignment_1_2_0()); }
(rule__LiteralTime__MonthAssignment_1_2_0)
{ after(grammarAccess.getLiteralTimeAccess().getMonthAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMonthKeyword_1_2_1()); }

	'month' 

{ after(grammarAccess.getLiteralTimeAccess().getMonthKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_3__0__Impl
	rule__LiteralTime__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getDayAssignment_1_3_0()); }
(rule__LiteralTime__DayAssignment_1_3_0)
{ after(grammarAccess.getLiteralTimeAccess().getDayAssignment_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getDayKeyword_1_3_1()); }

	'day' 

{ after(grammarAccess.getLiteralTimeAccess().getDayKeyword_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_4__0__Impl
	rule__LiteralTime__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourAssignment_1_4_0()); }
(rule__LiteralTime__HourAssignment_1_4_0)
{ after(grammarAccess.getLiteralTimeAccess().getHourAssignment_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourKeyword_1_4_1()); }

	'hour' 

{ after(grammarAccess.getLiteralTimeAccess().getHourKeyword_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_5__0__Impl
	rule__LiteralTime__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteAssignment_1_5_0()); }
(rule__LiteralTime__MinuteAssignment_1_5_0)
{ after(grammarAccess.getLiteralTimeAccess().getMinuteAssignment_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives_1_5_1()); }
(rule__LiteralTime__Alternatives_1_5_1)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_6__0__Impl
	rule__LiteralTime__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondAssignment_1_6_0()); }
(rule__LiteralTime__SecondAssignment_1_6_0)
{ after(grammarAccess.getLiteralTimeAccess().getSecondAssignment_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_1_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives_1_6_1()); }
(rule__LiteralTime__Alternatives_1_6_1)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2__0__Impl
	rule__LiteralTime__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_2_0()); }
(

)
{ after(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2__1__Impl
	rule__LiteralTime__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_2_1()); }
(rule__LiteralTime__Group_2_1__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2__2__Impl
	rule__LiteralTime__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_2_2()); }
(rule__LiteralTime__Group_2_2__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2__3__Impl
	rule__LiteralTime__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_2_3()); }
(rule__LiteralTime__Group_2_3__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2__4__Impl
	rule__LiteralTime__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_2_4()); }
(rule__LiteralTime__Group_2_4__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_2_5()); }
(rule__LiteralTime__Group_2_5__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LiteralTime__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2_1__0__Impl
	rule__LiteralTime__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMonthAssignment_2_1_0()); }
(rule__LiteralTime__MonthAssignment_2_1_0)
{ after(grammarAccess.getLiteralTimeAccess().getMonthAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMonthKeyword_2_1_1()); }

	'month' 

{ after(grammarAccess.getLiteralTimeAccess().getMonthKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2_2__0__Impl
	rule__LiteralTime__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getDayAssignment_2_2_0()); }
(rule__LiteralTime__DayAssignment_2_2_0)
{ after(grammarAccess.getLiteralTimeAccess().getDayAssignment_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getDayKeyword_2_2_1()); }

	'day' 

{ after(grammarAccess.getLiteralTimeAccess().getDayKeyword_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2_3__0__Impl
	rule__LiteralTime__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourAssignment_2_3_0()); }
(rule__LiteralTime__HourAssignment_2_3_0)
{ after(grammarAccess.getLiteralTimeAccess().getHourAssignment_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourKeyword_2_3_1()); }

	'hour' 

{ after(grammarAccess.getLiteralTimeAccess().getHourKeyword_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2_4__0__Impl
	rule__LiteralTime__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteAssignment_2_4_0()); }
(rule__LiteralTime__MinuteAssignment_2_4_0)
{ after(grammarAccess.getLiteralTimeAccess().getMinuteAssignment_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives_2_4_1()); }
(rule__LiteralTime__Alternatives_2_4_1)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_2_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2_5__0__Impl
	rule__LiteralTime__Group_2_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondAssignment_2_5_0()); }
(rule__LiteralTime__SecondAssignment_2_5_0)
{ after(grammarAccess.getLiteralTimeAccess().getSecondAssignment_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_2_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_2_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_2_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives_2_5_1()); }
(rule__LiteralTime__Alternatives_2_5_1)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives_2_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3__0__Impl
	rule__LiteralTime__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_3_0()); }
(

)
{ after(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3__1__Impl
	rule__LiteralTime__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_3_1()); }
(rule__LiteralTime__Group_3_1__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3__2__Impl
	rule__LiteralTime__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_3_2()); }
(rule__LiteralTime__Group_3_2__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3__3__Impl
	rule__LiteralTime__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_3_3()); }
(rule__LiteralTime__Group_3_3__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_3_4()); }
(rule__LiteralTime__Group_3_4__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LiteralTime__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3_1__0__Impl
	rule__LiteralTime__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getDayAssignment_3_1_0()); }
(rule__LiteralTime__DayAssignment_3_1_0)
{ after(grammarAccess.getLiteralTimeAccess().getDayAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getDayKeyword_3_1_1()); }

	'day' 

{ after(grammarAccess.getLiteralTimeAccess().getDayKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3_2__0__Impl
	rule__LiteralTime__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourAssignment_3_2_0()); }
(rule__LiteralTime__HourAssignment_3_2_0)
{ after(grammarAccess.getLiteralTimeAccess().getHourAssignment_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourKeyword_3_2_1()); }

	'hour' 

{ after(grammarAccess.getLiteralTimeAccess().getHourKeyword_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3_3__0__Impl
	rule__LiteralTime__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteAssignment_3_3_0()); }
(rule__LiteralTime__MinuteAssignment_3_3_0)
{ after(grammarAccess.getLiteralTimeAccess().getMinuteAssignment_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives_3_3_1()); }
(rule__LiteralTime__Alternatives_3_3_1)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_3_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3_4__0__Impl
	rule__LiteralTime__Group_3_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondAssignment_3_4_0()); }
(rule__LiteralTime__SecondAssignment_3_4_0)
{ after(grammarAccess.getLiteralTimeAccess().getSecondAssignment_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_3_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_3_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_3_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives_3_4_1()); }
(rule__LiteralTime__Alternatives_3_4_1)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives_3_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_4__0__Impl
	rule__LiteralTime__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_4_0()); }
(

)
{ after(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_4__1__Impl
	rule__LiteralTime__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_4_1()); }
(rule__LiteralTime__Group_4_1__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_4__2__Impl
	rule__LiteralTime__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_4_2()); }
(rule__LiteralTime__Group_4_2__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_4_3()); }
(rule__LiteralTime__Group_4_3__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LiteralTime__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_4_1__0__Impl
	rule__LiteralTime__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourAssignment_4_1_0()); }
(rule__LiteralTime__HourAssignment_4_1_0)
{ after(grammarAccess.getLiteralTimeAccess().getHourAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourKeyword_4_1_1()); }

	'hour' 

{ after(grammarAccess.getLiteralTimeAccess().getHourKeyword_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_4_2__0__Impl
	rule__LiteralTime__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteAssignment_4_2_0()); }
(rule__LiteralTime__MinuteAssignment_4_2_0)
{ after(grammarAccess.getLiteralTimeAccess().getMinuteAssignment_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives_4_2_1()); }
(rule__LiteralTime__Alternatives_4_2_1)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_4_3__0__Impl
	rule__LiteralTime__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondAssignment_4_3_0()); }
(rule__LiteralTime__SecondAssignment_4_3_0)
{ after(grammarAccess.getLiteralTimeAccess().getSecondAssignment_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives_4_3_1()); }
(rule__LiteralTime__Alternatives_4_3_1)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_5__0__Impl
	rule__LiteralTime__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_5_0()); }
(

)
{ after(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_5__1__Impl
	rule__LiteralTime__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_5_1()); }
(rule__LiteralTime__Group_5_1__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_5_2()); }
(rule__LiteralTime__Group_5_2__0)?
{ after(grammarAccess.getLiteralTimeAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LiteralTime__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_5_1__0__Impl
	rule__LiteralTime__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteAssignment_5_1_0()); }
(rule__LiteralTime__MinuteAssignment_5_1_0)
{ after(grammarAccess.getLiteralTimeAccess().getMinuteAssignment_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives_5_1_1()); }
(rule__LiteralTime__Alternatives_5_1_1)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_5_2__0__Impl
	rule__LiteralTime__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondAssignment_5_2_0()); }
(rule__LiteralTime__SecondAssignment_5_2_0)
{ after(grammarAccess.getLiteralTimeAccess().getSecondAssignment_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives_5_2_1()); }
(rule__LiteralTime__Alternatives_5_2_1)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_6__0__Impl
	rule__LiteralTime__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_6_0()); }
(

)
{ after(grammarAccess.getLiteralTimeAccess().getLiteralTimeAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getGroup_6_1()); }
(rule__LiteralTime__Group_6_1__0)
{ after(grammarAccess.getLiteralTimeAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LiteralTime__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_6_1__0__Impl
	rule__LiteralTime__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondAssignment_6_1_0()); }
(rule__LiteralTime__SecondAssignment_6_1_0)
{ after(grammarAccess.getLiteralTimeAccess().getSecondAssignment_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LiteralTime__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LiteralTime__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getAlternatives_6_1_1()); }
(rule__LiteralTime__Alternatives_6_1_1)
{ after(grammarAccess.getLiteralTimeAccess().getAlternatives_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NUMBER__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group__0__Impl
	rule__NUMBER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getGroup_1()); }
(rule__NUMBER__Group_1__0)?
{ after(grammarAccess.getNUMBERAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NUMBER__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group_1__0__Impl
	rule__NUMBER__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getNUMBERAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__LilModel__ActorTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLilModelAccess().getActorTypeActorTypeDefinitionParserRuleCall_0_0()); }
	ruleActorTypeDefinition{ after(grammarAccess.getLilModelAccess().getActorTypeActorTypeDefinitionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LilModel__DataTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLilModelAccess().getDataTypeDataTypeDefinitionParserRuleCall_1_0()); }
	ruleDataTypeDefinition{ after(grammarAccess.getLilModelAccess().getDataTypeDataTypeDefinitionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LilModel__InteractorTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLilModelAccess().getInteractorTypeInteractorTypeDefinitionParserRuleCall_2_0()); }
	ruleInteractorTypeDefinition{ after(grammarAccess.getLilModelAccess().getInteractorTypeInteractorTypeDefinitionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorTypeDefinition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorTypeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getActorTypeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorTypeDefinition__ComponentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorTypeDefinitionAccess().getComponentActorComponentParserRuleCall_3_0()); }
	ruleActorComponent{ after(grammarAccess.getActorTypeDefinitionAccess().getComponentActorComponentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorType__BaseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorTypeAccess().getBaseActorBaseTypeParserRuleCall_0_0()); }
	ruleActorBaseType{ after(grammarAccess.getActorTypeAccess().getBaseActorBaseTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorType__CustomAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorTypeAccess().getCustomActorTypeDefinitionCrossReference_1_0()); }
(
{ before(grammarAccess.getActorTypeAccess().getCustomActorTypeDefinitionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getActorTypeAccess().getCustomActorTypeDefinitionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getActorTypeAccess().getCustomActorTypeDefinitionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorComponent__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorComponentAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getActorComponentAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorComponent__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorComponentAccess().getTypeActorTypeParserRuleCall_2_0()); }
	ruleActorType{ after(grammarAccess.getActorComponentAccess().getTypeActorTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getDataTypeDefinitionAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__ComponentAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getComponentDataComponentParserRuleCall_0_4_0()); }
	ruleDataComponent{ after(grammarAccess.getDataTypeDefinitionAccess().getComponentDataComponentParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getDataTypeDefinitionAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__AliasAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getAliasDataTypeParserRuleCall_1_4_0()); }
	ruleDataType{ after(grammarAccess.getDataTypeDefinitionAccess().getAliasDataTypeParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__BaseAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getBaseDataBaseTypeParserRuleCall_0_0_0_0()); }
	ruleDataBaseType{ after(grammarAccess.getDataTypeAccess().getBaseDataBaseTypeParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__DefinitionSetAssignment_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDefinitionSetDataDefinitionSetParserRuleCall_0_0_1_1_0()); }
	ruleDataDefinitionSet{ after(grammarAccess.getDataTypeAccess().getDefinitionSetDataDefinitionSetParserRuleCall_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__CustomAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getCustomDataTypeDefinitionCrossReference_0_1_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getCustomDataTypeDefinitionIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDataTypeAccess().getCustomDataTypeDefinitionIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getDataTypeAccess().getCustomDataTypeDefinitionCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__CollectionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getCollectionDataCollectionTypeParserRuleCall_1_0()); }
	ruleDataCollectionType{ after(grammarAccess.getDataTypeAccess().getCollectionDataCollectionTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__ElementAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getElementDataDefinitionEnumElementParserRuleCall_0_2_0()); }
	ruleDataDefinitionEnumElement{ after(grammarAccess.getDataDefinitionSetAccess().getElementDataDefinitionEnumElementParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__ElementAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getElementDataDefinitionEnumElementParserRuleCall_0_3_1_0()); }
	ruleDataDefinitionEnumElement{ after(grammarAccess.getDataDefinitionSetAccess().getElementDataDefinitionEnumElementParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__ElementAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getElementLiteralNumberParserRuleCall_1_2_0()); }
	ruleLiteralNumber{ after(grammarAccess.getDataDefinitionSetAccess().getElementLiteralNumberParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__ElementAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getElementLiteralNumberParserRuleCall_1_3_1_0()); }
	ruleLiteralNumber{ after(grammarAccess.getDataDefinitionSetAccess().getElementLiteralNumberParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__InfAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getInfLiteralNumberParserRuleCall_2_2_0()); }
	ruleLiteralNumber{ after(grammarAccess.getDataDefinitionSetAccess().getInfLiteralNumberParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionSet__SupAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionSetAccess().getSupLiteralNumberParserRuleCall_2_4_0()); }
	ruleLiteralNumber{ after(grammarAccess.getDataDefinitionSetAccess().getSupLiteralNumberParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataDefinitionEnumElement__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataDefinitionEnumElementAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getDataDefinitionEnumElementAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataCollectionType__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeCollectionKeyword_0_0()); }
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeCollectionKeyword_0_0()); }

	'collection' 

{ after(grammarAccess.getDataCollectionTypeAccess().getTypeCollectionKeyword_0_0()); }
)

{ after(grammarAccess.getDataCollectionTypeAccess().getTypeCollectionKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataCollectionType__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeSetKeyword_1_0()); }
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeSetKeyword_1_0()); }

	'set' 

{ after(grammarAccess.getDataCollectionTypeAccess().getTypeSetKeyword_1_0()); }
)

{ after(grammarAccess.getDataCollectionTypeAccess().getTypeSetKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataCollectionType__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeListKeyword_2_0()); }
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeListKeyword_2_0()); }

	'list' 

{ after(grammarAccess.getDataCollectionTypeAccess().getTypeListKeyword_2_0()); }
)

{ after(grammarAccess.getDataCollectionTypeAccess().getTypeListKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataCollectionType__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeQueueKeyword_3_0()); }
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeQueueKeyword_3_0()); }

	'queue' 

{ after(grammarAccess.getDataCollectionTypeAccess().getTypeQueueKeyword_3_0()); }
)

{ after(grammarAccess.getDataCollectionTypeAccess().getTypeQueueKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataCollectionType__TypeAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeMapKeyword_4_0_0()); }
(
{ before(grammarAccess.getDataCollectionTypeAccess().getTypeMapKeyword_4_0_0()); }

	'map' 

{ after(grammarAccess.getDataCollectionTypeAccess().getTypeMapKeyword_4_0_0()); }
)

{ after(grammarAccess.getDataCollectionTypeAccess().getTypeMapKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataCollectionType__MappingAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCollectionTypeAccess().getMappingDataTypeParserRuleCall_4_1_1_0()); }
	ruleDataType{ after(grammarAccess.getDataCollectionTypeAccess().getMappingDataTypeParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataComponent__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataComponentAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDataComponentAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataComponent__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataComponentAccess().getTypeDataTypeParserRuleCall_2_0()); }
	ruleDataType{ after(grammarAccess.getDataComponentAccess().getTypeDataTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorTypeDefinition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getInteractorTypeDefinitionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorTypeDefinition__ActorAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getActorInteractorActorParserRuleCall_3_0_0()); }
	ruleInteractorActor{ after(grammarAccess.getInteractorTypeDefinitionAccess().getActorInteractorActorParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorTypeDefinition__DataAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getDataInteractorDataParserRuleCall_3_1_0()); }
	ruleInteractorData{ after(grammarAccess.getInteractorTypeDefinitionAccess().getDataInteractorDataParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorTypeDefinition__ComponentAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getComponentInteractorComponentParserRuleCall_3_2_0()); }
	ruleInteractorComponent{ after(grammarAccess.getInteractorTypeDefinitionAccess().getComponentInteractorComponentParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorTypeDefinition__BehaviorAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorTypeDefinitionAccess().getBehaviorInteractorBehaviorParserRuleCall_3_3_0()); }
	ruleInteractorBehavior{ after(grammarAccess.getInteractorTypeDefinitionAccess().getBehaviorInteractorBehaviorParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorType__CustomAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorTypeAccess().getCustomInteractorTypeDefinitionCrossReference_0()); }
(
{ before(grammarAccess.getInteractorTypeAccess().getCustomInteractorTypeDefinitionIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getInteractorTypeAccess().getCustomInteractorTypeDefinitionIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getInteractorTypeAccess().getCustomInteractorTypeDefinitionCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorActor__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorActorAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getInteractorActorAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorActor__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorActorAccess().getTypeActorTypeParserRuleCall_2_0()); }
	ruleActorType{ after(grammarAccess.getInteractorActorAccess().getTypeActorTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getInteractorDataAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getTypeDataTypeParserRuleCall_2_0()); }
	ruleDataType{ after(grammarAccess.getInteractorDataAccess().getTypeDataTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__ModeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getModeInteractorDataComponentModeParserRuleCall_3_0()); }
	ruleInteractorDataComponentMode{ after(grammarAccess.getInteractorDataAccess().getModeInteractorDataComponentModeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__SourceAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getSourceInteractorSignalAliasParserRuleCall_4_1_0()); }
	ruleInteractorSignalAlias{ after(grammarAccess.getInteractorDataAccess().getSourceInteractorSignalAliasParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorData__DestinationsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDataAccess().getDestinationsInteractorSignalAliasParserRuleCall_5_1_0()); }
	ruleInteractorSignalAlias{ after(grammarAccess.getInteractorDataAccess().getDestinationsInteractorSignalAliasParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalAlias__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalAliasAccess().getSourceAccessibleEntityParserRuleCall_0_0()); }
	ruleAccessibleEntity{ after(grammarAccess.getInteractorSignalAliasAccess().getSourceAccessibleEntityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalAlias__AliasAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalAliasAccess().getAliasInteractorDataCrossReference_1_1_0()); }
(
{ before(grammarAccess.getInteractorSignalAliasAccess().getAliasInteractorDataIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInteractorSignalAliasAccess().getAliasInteractorDataIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getInteractorSignalAliasAccess().getAliasInteractorDataCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getInteractorComponentAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getTypeInteractorTypeParserRuleCall_2_0()); }
	ruleInteractorType{ after(grammarAccess.getInteractorComponentAccess().getTypeInteractorTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__ActorsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getActorsActorAliasParserRuleCall_4_1_0()); }
	ruleActorAlias{ after(grammarAccess.getInteractorComponentAccess().getActorsActorAliasParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorComponent__ActorsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorComponentAccess().getActorsActorAliasParserRuleCall_4_2_1_0()); }
	ruleActorAlias{ after(grammarAccess.getInteractorComponentAccess().getActorsActorAliasParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessibleEntity__GenericAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericGenericEntityParserRuleCall_0_0()); }
	ruleGenericEntity{ after(grammarAccess.getAccessibleEntityAccess().getGenericGenericEntityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessibleEntity__SpecificAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessibleEntityAccess().getSpecificEntityCrossReference_1_0()); }
(
{ before(grammarAccess.getAccessibleEntityAccess().getSpecificEntityIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAccessibleEntityAccess().getSpecificEntityIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAccessibleEntityAccess().getSpecificEntityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getSourceInteractorActorCrossReference_0_0()); }
(
{ before(grammarAccess.getActorAliasAccess().getSourceInteractorActorIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getActorAliasAccess().getSourceInteractorActorIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getActorAliasAccess().getSourceInteractorActorCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__AliasAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getAliasInteractorActorCrossReference_2_0()); }
(
{ before(grammarAccess.getActorAliasAccess().getAliasInteractorActorIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getActorAliasAccess().getAliasInteractorActorIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getActorAliasAccess().getAliasInteractorActorCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalReception__InstanceAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getInstanceInteractorDataCrossReference_0_0_0()); }
(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getInstanceInteractorDataIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getInteractorSignalReceptionAccess().getInstanceInteractorDataIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getInteractorSignalReceptionAccess().getInstanceInteractorDataCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalReception__SourceAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getSourceInteractorSignalAliasParserRuleCall_0_1_1_0()); }
	ruleInteractorSignalAlias{ after(grammarAccess.getInteractorSignalReceptionAccess().getSourceInteractorSignalAliasParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalReception__InitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getInitInitKeyword_1_0()); }
(
{ before(grammarAccess.getInteractorSignalReceptionAccess().getInitInitKeyword_1_0()); }

	'init' 

{ after(grammarAccess.getInteractorSignalReceptionAccess().getInitInitKeyword_1_0()); }
)

{ after(grammarAccess.getInteractorSignalReceptionAccess().getInitInitKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalEmission__InstanceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalEmissionAccess().getInstanceInteractorDataCrossReference_0_0()); }
(
{ before(grammarAccess.getInteractorSignalEmissionAccess().getInstanceInteractorDataIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getInteractorSignalEmissionAccess().getInstanceInteractorDataIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getInteractorSignalEmissionAccess().getInstanceInteractorDataCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorSignalEmission__DestinationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorSignalEmissionAccess().getDestinationInteractorSignalAliasParserRuleCall_1_1_0()); }
	ruleInteractorSignalAlias{ after(grammarAccess.getInteractorSignalEmissionAccess().getDestinationInteractorSignalAliasParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehavior__CauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorAccess().getCauseInteractorBehaviorCauseParserRuleCall_0_0()); }
	ruleInteractorBehaviorCause{ after(grammarAccess.getInteractorBehaviorAccess().getCauseInteractorBehaviorCauseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehavior__EffectAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorAccess().getEffectInteractorBehaviorEffectParserRuleCall_2_0()); }
	ruleInteractorBehaviorEffect{ after(grammarAccess.getInteractorBehaviorAccess().getEffectInteractorBehaviorEffectParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorOnCause__EventAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorOnCauseAccess().getEventInteractorSignalReceptionParserRuleCall_1_0()); }
	ruleInteractorSignalReception{ after(grammarAccess.getInteractorBehaviorOnCauseAccess().getEventInteractorSignalReceptionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorOnCause__GuardAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorOnCauseAccess().getGuardExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getInteractorBehaviorOnCauseAccess().getGuardExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorWhenCause__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorWhenCauseAccess().getConditionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getInteractorBehaviorWhenCauseAccess().getConditionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorWhenCause__GuardAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorWhenCauseAccess().getGuardExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getInteractorBehaviorWhenCauseAccess().getGuardExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorAlwaysEffect__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getTargetInteractorSignalEmissionParserRuleCall_1_0()); }
	ruleInteractorSignalEmission{ after(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getTargetInteractorSignalEmissionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorAlwaysEffect__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getValueExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getInteractorBehaviorAlwaysEffectAccess().getValueExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorSetEffect__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorSetEffectAccess().getTargetInteractorSignalEmissionParserRuleCall_1_0()); }
	ruleInteractorSignalEmission{ after(grammarAccess.getInteractorBehaviorSetEffectAccess().getTargetInteractorSignalEmissionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorSetEffect__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorSetEffectAccess().getValueExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getInteractorBehaviorSetEffectAccess().getValueExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorTriggerEffect__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getTargetInteractorSignalEmissionParserRuleCall_1_0()); }
	ruleInteractorSignalEmission{ after(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getTargetInteractorSignalEmissionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorBehaviorTriggerEffect__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getValueExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getInteractorBehaviorTriggerEffectAccess().getValueExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOr__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOrAccess().getFeatureExpressionOrOpParserRuleCall_1_0_0_1_0()); }
	ruleExpressionOrOp{ after(grammarAccess.getExpressionOrAccess().getFeatureExpressionOrOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOr__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOrAccess().getRightOperandExpressionAndParserRuleCall_1_1_0()); }
	ruleExpressionAnd{ after(grammarAccess.getExpressionOrAccess().getRightOperandExpressionAndParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAnd__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAndAccess().getFeatureExpressionAndOpParserRuleCall_1_0_0_1_0()); }
	ruleExpressionAndOp{ after(grammarAccess.getExpressionAndAccess().getFeatureExpressionAndOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAnd__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAndAccess().getRightOperandExpressionEqualityParserRuleCall_1_1_0()); }
	ruleExpressionEquality{ after(grammarAccess.getExpressionAndAccess().getRightOperandExpressionEqualityParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionEquality__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionEqualityAccess().getFeatureExpressionEqualityOpParserRuleCall_1_0_0_1_0()); }
	ruleExpressionEqualityOp{ after(grammarAccess.getExpressionEqualityAccess().getFeatureExpressionEqualityOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionEquality__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionEqualityAccess().getRightOperandExpressionCompareParserRuleCall_1_1_0()); }
	ruleExpressionCompare{ after(grammarAccess.getExpressionEqualityAccess().getRightOperandExpressionCompareParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCompare__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCompareAccess().getFeatureExpressionCompareOpParserRuleCall_1_0_0_1_0()); }
	ruleExpressionCompareOp{ after(grammarAccess.getExpressionCompareAccess().getFeatureExpressionCompareOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCompare__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCompareAccess().getRightOperandExpressionOtherParserRuleCall_1_1_0()); }
	ruleExpressionOther{ after(grammarAccess.getExpressionCompareAccess().getRightOperandExpressionOtherParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOther__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOtherAccess().getFeatureExpressionOtherOpParserRuleCall_1_0_0_1_0()); }
	ruleExpressionOtherOp{ after(grammarAccess.getExpressionOtherAccess().getFeatureExpressionOtherOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOther__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionOtherAccess().getRightOperandExpressionAdditionParserRuleCall_1_1_0()); }
	ruleExpressionAddition{ after(grammarAccess.getExpressionOtherAccess().getRightOperandExpressionAdditionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAddition__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAdditionAccess().getFeatureExpressionAdditionOpParserRuleCall_1_0_0_1_0()); }
	ruleExpressionAdditionOp{ after(grammarAccess.getExpressionAdditionAccess().getFeatureExpressionAdditionOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionAddition__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAdditionAccess().getRightOperandExpressionMultiplicationParserRuleCall_1_1_0()); }
	ruleExpressionMultiplication{ after(grammarAccess.getExpressionAdditionAccess().getRightOperandExpressionMultiplicationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMultiplication__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMultiplicationAccess().getFeatureExpressionMultiplicationOpParserRuleCall_1_0_0_1_0()); }
	ruleExpressionMultiplicationOp{ after(grammarAccess.getExpressionMultiplicationAccess().getFeatureExpressionMultiplicationOpParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMultiplication__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMultiplicationAccess().getRightOperandExpressionUnaryParserRuleCall_1_1_0()); }
	ruleExpressionUnary{ after(grammarAccess.getExpressionMultiplicationAccess().getRightOperandExpressionUnaryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionUnary__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionUnaryAccess().getFeatureExpressionUnaryOpParserRuleCall_0_1_0()); }
	ruleExpressionUnaryOp{ after(grammarAccess.getExpressionUnaryAccess().getFeatureExpressionUnaryOpParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionUnary__OperandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionUnaryAccess().getOperandExpressionPrimaryParserRuleCall_0_2_0()); }
	ruleExpressionPrimary{ after(grammarAccess.getExpressionUnaryAccess().getOperandExpressionPrimaryParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteral__DataAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralAccess().getDataInteractorDataCrossReference_7_1_0()); }
(
{ before(grammarAccess.getExpressionLiteralAccess().getDataInteractorDataIDTerminalRuleCall_7_1_0_1()); }
	RULE_ID{ after(grammarAccess.getExpressionLiteralAccess().getDataInteractorDataIDTerminalRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getExpressionLiteralAccess().getDataInteractorDataCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralSet__ElementsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralSetAccess().getElementsExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionLiteralSetAccess().getElementsExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralSet__ElementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralSetAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionLiteralSetAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralList__ElementsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralListAccess().getElementsExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionLiteralListAccess().getElementsExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLiteralList__ElementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionLiteralListAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionLiteralListAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__IfAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getIfExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getExpressionIfAccess().getIfExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__ThenAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getThenExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getExpressionIfAccess().getThenExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionIf__ElseAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionIfAccess().getElseExpressionParserRuleCall_6_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionIfAccess().getElseExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__SwitchAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getSwitchExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getExpressionSwitchAccess().getSwitchExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__CaseAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getCaseExpressionCaseParserRuleCall_5_0()); }
	ruleExpressionCase{ after(grammarAccess.getExpressionSwitchAccess().getCaseExpressionCaseParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionSwitch__DefaultAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionSwitchAccess().getDefaultExpressionParserRuleCall_6_2_0()); }
	ruleExpression{ after(grammarAccess.getExpressionSwitchAccess().getDefaultExpressionParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCase__CaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCaseAccess().getCaseExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionCaseAccess().getCaseExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionCase__ThenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionCaseAccess().getThenExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getExpressionCaseAccess().getThenExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionForEach__ForExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionForEachAccess().getForExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getExpressionForEachAccess().getForExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionForEach__EachExpressionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionForEachAccess().getEachExpressionExpressionParserRuleCall_6_0()); }
	ruleExpression{ after(grammarAccess.getExpressionForEachAccess().getEachExpressionExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCall__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getFunctionExpressionFunctionCallBaseParserRuleCall_1_0()); }
	ruleExpressionFunctionCallBase{ after(grammarAccess.getExpressionFunctionCallAccess().getFunctionExpressionFunctionCallBaseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCall__ArgumentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getArgumentsExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getExpressionFunctionCallAccess().getArgumentsExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionFunctionCall__ArgumentsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionFunctionCallAccess().getArgumentsExpressionParserRuleCall_4_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionFunctionCallAccess().getArgumentsExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralBoolean__IsTrueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralBooleanAccess().getIsTrueTrueKeyword_1_1_0()); }
(
{ before(grammarAccess.getLiteralBooleanAccess().getIsTrueTrueKeyword_1_1_0()); }

	'true' 

{ after(grammarAccess.getLiteralBooleanAccess().getIsTrueTrueKeyword_1_1_0()); }
)

{ after(grammarAccess.getLiteralBooleanAccess().getIsTrueTrueKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralNumber__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralNumberAccess().getValueNUMBERParserRuleCall_1_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralNumberAccess().getValueNUMBERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralString__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralStringAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getLiteralStringAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralEnum__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralEnumAccess().getValueDataDefinitionEnumElementCrossReference_2_0()); }
(
{ before(grammarAccess.getLiteralEnumAccess().getValueDataDefinitionEnumElementIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getLiteralEnumAccess().getValueDataDefinitionEnumElementIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getLiteralEnumAccess().getValueDataDefinitionEnumElementCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__NowAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getNowNowKeyword_0_1_0()); }
(
{ before(grammarAccess.getLiteralTimeAccess().getNowNowKeyword_0_1_0()); }

	'now' 

{ after(grammarAccess.getLiteralTimeAccess().getNowNowKeyword_0_1_0()); }
)

{ after(grammarAccess.getLiteralTimeAccess().getNowNowKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__YearAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getYearNUMBERParserRuleCall_1_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getYearNUMBERParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__MonthAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMonthNUMBERParserRuleCall_1_2_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getMonthNUMBERParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__DayAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getDayNUMBERParserRuleCall_1_3_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getDayNUMBERParserRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__HourAssignment_1_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_1_4_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__MinuteAssignment_1_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_1_5_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_1_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__SecondAssignment_1_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_1_6_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_1_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__MonthAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMonthNUMBERParserRuleCall_2_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getMonthNUMBERParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__DayAssignment_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getDayNUMBERParserRuleCall_2_2_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getDayNUMBERParserRuleCall_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__HourAssignment_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_2_3_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__MinuteAssignment_2_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_2_4_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_2_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__SecondAssignment_2_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_2_5_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_2_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__DayAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getDayNUMBERParserRuleCall_3_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getDayNUMBERParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__HourAssignment_3_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_3_2_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_3_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__MinuteAssignment_3_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_3_3_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_3_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__SecondAssignment_3_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_3_4_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_3_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__HourAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_4_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getHourNUMBERParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__MinuteAssignment_4_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_4_2_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_4_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__SecondAssignment_4_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_4_3_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_4_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__MinuteAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_5_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getMinuteNUMBERParserRuleCall_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__SecondAssignment_5_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_5_2_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_5_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralTime__SecondAssignment_6_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_6_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getLiteralTimeAccess().getSecondNUMBERParserRuleCall_6_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


