/*
* generated by Xtext
*/
grammar InternalLil;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package com.crubier.lil.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.crubier.lil.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.crubier.lil.services.LilGrammarAccess;

}

@parser::members {
 
 	private LilGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LilGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleLilModel
entryRuleLilModel 
:
{ before(grammarAccess.getLilModelRule()); }
	 ruleLilModel
{ after(grammarAccess.getLilModelRule()); } 
	 EOF 
;

// Rule LilModel
ruleLilModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLilModelAccess().getAlternatives()); }
(rule__LilModel__Alternatives)*
{ after(grammarAccess.getLilModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractorDeclaration
entryRuleInteractorDeclaration 
:
{ before(grammarAccess.getInteractorDeclarationRule()); }
	 ruleInteractorDeclaration
{ after(grammarAccess.getInteractorDeclarationRule()); } 
	 EOF 
;

// Rule InteractorDeclaration
ruleInteractorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorDeclarationAccess().getGroup()); }
(rule__InteractorDeclaration__Group__0)
{ after(grammarAccess.getInteractorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccessibleEntity
entryRuleAccessibleEntity 
:
{ before(grammarAccess.getAccessibleEntityRule()); }
	 ruleAccessibleEntity
{ after(grammarAccess.getAccessibleEntityRule()); } 
	 EOF 
;

// Rule AccessibleEntity
ruleAccessibleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccessibleEntityAccess().getAlternatives()); }
(rule__AccessibleEntity__Alternatives)
{ after(grammarAccess.getAccessibleEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getInstanceAssignment()); }
(rule__Entity__InstanceAssignment)
{ after(grammarAccess.getEntityAccess().getInstanceAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActor
entryRuleActor 
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorAccess().getInstanceAssignment()); }
(rule__Actor__InstanceAssignment)
{ after(grammarAccess.getActorAccess().getInstanceAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponent
entryRuleComponent 
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentAccess().getInstanceAssignment()); }
(rule__Component__InstanceAssignment)
{ after(grammarAccess.getComponentAccess().getInstanceAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityDeclaration
entryRuleEntityDeclaration 
:
{ before(grammarAccess.getEntityDeclarationRule()); }
	 ruleEntityDeclaration
{ after(grammarAccess.getEntityDeclarationRule()); } 
	 EOF 
;

// Rule EntityDeclaration
ruleEntityDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityDeclarationAccess().getAlternatives()); }
(rule__EntityDeclaration__Alternatives)
{ after(grammarAccess.getEntityDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActorDeclaration
entryRuleActorDeclaration 
:
{ before(grammarAccess.getActorDeclarationRule()); }
	 ruleActorDeclaration
{ after(grammarAccess.getActorDeclarationRule()); } 
	 EOF 
;

// Rule ActorDeclaration
ruleActorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorDeclarationAccess().getGroup()); }
(rule__ActorDeclaration__Group__0)
{ after(grammarAccess.getActorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActorAlias
entryRuleActorAlias 
:
{ before(grammarAccess.getActorAliasRule()); }
	 ruleActorAlias
{ after(grammarAccess.getActorAliasRule()); } 
	 EOF 
;

// Rule ActorAlias
ruleActorAlias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorAliasAccess().getGroup()); }
(rule__ActorAlias__Group__0)
{ after(grammarAccess.getActorAliasAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentDeclaration
entryRuleComponentDeclaration 
:
{ before(grammarAccess.getComponentDeclarationRule()); }
	 ruleComponentDeclaration
{ after(grammarAccess.getComponentDeclarationRule()); } 
	 EOF 
;

// Rule ComponentDeclaration
ruleComponentDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentDeclarationAccess().getGroup()); }
(rule__ComponentDeclaration__Group__0)
{ after(grammarAccess.getComponentDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEventReception
entryRuleEventReception 
:
{ before(grammarAccess.getEventReceptionRule()); }
	 ruleEventReception
{ after(grammarAccess.getEventReceptionRule()); } 
	 EOF 
;

// Rule EventReception
ruleEventReception
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventReceptionAccess().getAlternatives()); }
(rule__EventReception__Alternatives)
{ after(grammarAccess.getEventReceptionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEventEmission
entryRuleEventEmission 
:
{ before(grammarAccess.getEventEmissionRule()); }
	 ruleEventEmission
{ after(grammarAccess.getEventEmissionRule()); } 
	 EOF 
;

// Rule EventEmission
ruleEventEmission
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventEmissionAccess().getGroup()); }
(rule__EventEmission__Group__0)
{ after(grammarAccess.getEventEmissionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFlowEmission
entryRuleFlowEmission 
:
{ before(grammarAccess.getFlowEmissionRule()); }
	 ruleFlowEmission
{ after(grammarAccess.getFlowEmissionRule()); } 
	 EOF 
;

// Rule FlowEmission
ruleFlowEmission
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlowEmissionAccess().getGroup()); }
(rule__FlowEmission__Group__0)
{ after(grammarAccess.getFlowEmissionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalDeclaration
entryRuleSignalDeclaration 
:
{ before(grammarAccess.getSignalDeclarationRule()); }
	 ruleSignalDeclaration
{ after(grammarAccess.getSignalDeclarationRule()); } 
	 EOF 
;

// Rule SignalDeclaration
ruleSignalDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalDeclarationAccess().getAlternatives()); }
(rule__SignalDeclaration__Alternatives)
{ after(grammarAccess.getSignalDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEventDeclaration
entryRuleEventDeclaration 
:
{ before(grammarAccess.getEventDeclarationRule()); }
	 ruleEventDeclaration
{ after(grammarAccess.getEventDeclarationRule()); } 
	 EOF 
;

// Rule EventDeclaration
ruleEventDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventDeclarationAccess().getGroup()); }
(rule__EventDeclaration__Group__0)
{ after(grammarAccess.getEventDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFlowDeclaration
entryRuleFlowDeclaration 
:
{ before(grammarAccess.getFlowDeclarationRule()); }
	 ruleFlowDeclaration
{ after(grammarAccess.getFlowDeclarationRule()); } 
	 EOF 
;

// Rule FlowDeclaration
ruleFlowDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlowDeclarationAccess().getGroup()); }
(rule__FlowDeclaration__Group__0)
{ after(grammarAccess.getFlowDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBehaviorDeclaration
entryRuleBehaviorDeclaration 
:
{ before(grammarAccess.getBehaviorDeclarationRule()); }
	 ruleBehaviorDeclaration
{ after(grammarAccess.getBehaviorDeclarationRule()); } 
	 EOF 
;

// Rule BehaviorDeclaration
ruleBehaviorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBehaviorDeclarationAccess().getGroup()); }
(rule__BehaviorDeclaration__Group__0)
{ after(grammarAccess.getBehaviorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCause
entryRuleCause 
:
{ before(grammarAccess.getCauseRule()); }
	 ruleCause
{ after(grammarAccess.getCauseRule()); } 
	 EOF 
;

// Rule Cause
ruleCause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCauseAccess().getAlternatives()); }
(rule__Cause__Alternatives)
{ after(grammarAccess.getCauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOnCause
entryRuleOnCause 
:
{ before(grammarAccess.getOnCauseRule()); }
	 ruleOnCause
{ after(grammarAccess.getOnCauseRule()); } 
	 EOF 
;

// Rule OnCause
ruleOnCause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOnCauseAccess().getGroup()); }
(rule__OnCause__Group__0)
{ after(grammarAccess.getOnCauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhenCause
entryRuleWhenCause 
:
{ before(grammarAccess.getWhenCauseRule()); }
	 ruleWhenCause
{ after(grammarAccess.getWhenCauseRule()); } 
	 EOF 
;

// Rule WhenCause
ruleWhenCause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhenCauseAccess().getGroup()); }
(rule__WhenCause__Group__0)
{ after(grammarAccess.getWhenCauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEffect
entryRuleEffect 
:
{ before(grammarAccess.getEffectRule()); }
	 ruleEffect
{ after(grammarAccess.getEffectRule()); } 
	 EOF 
;

// Rule Effect
ruleEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectAccess().getAlternatives()); }
(rule__Effect__Alternatives)
{ after(grammarAccess.getEffectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlwaysEffect
entryRuleAlwaysEffect 
:
{ before(grammarAccess.getAlwaysEffectRule()); }
	 ruleAlwaysEffect
{ after(grammarAccess.getAlwaysEffectRule()); } 
	 EOF 
;

// Rule AlwaysEffect
ruleAlwaysEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlwaysEffectAccess().getGroup()); }
(rule__AlwaysEffect__Group__0)
{ after(grammarAccess.getAlwaysEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetEffect
entryRuleSetEffect 
:
{ before(grammarAccess.getSetEffectRule()); }
	 ruleSetEffect
{ after(grammarAccess.getSetEffectRule()); } 
	 EOF 
;

// Rule SetEffect
ruleSetEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetEffectAccess().getGroup()); }
(rule__SetEffect__Group__0)
{ after(grammarAccess.getSetEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTriggerEffect
entryRuleTriggerEffect 
:
{ before(grammarAccess.getTriggerEffectRule()); }
	 ruleTriggerEffect
{ after(grammarAccess.getTriggerEffectRule()); } 
	 EOF 
;

// Rule TriggerEffect
ruleTriggerEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggerEffectAccess().getGroup()); }
(rule__TriggerEffect__Group__0)
{ after(grammarAccess.getTriggerEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeCompoundDeclaration
entryRuleDataTypeCompoundDeclaration 
:
{ before(grammarAccess.getDataTypeCompoundDeclarationRule()); }
	 ruleDataTypeCompoundDeclaration
{ after(grammarAccess.getDataTypeCompoundDeclarationRule()); } 
	 EOF 
;

// Rule DataTypeCompoundDeclaration
ruleDataTypeCompoundDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeCompoundDeclarationAccess().getGroup()); }
(rule__DataTypeCompoundDeclaration__Group__0)
{ after(grammarAccess.getDataTypeCompoundDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeCompoundField
entryRuleDataTypeCompoundField 
:
{ before(grammarAccess.getDataTypeCompoundFieldRule()); }
	 ruleDataTypeCompoundField
{ after(grammarAccess.getDataTypeCompoundFieldRule()); } 
	 EOF 
;

// Rule DataTypeCompoundField
ruleDataTypeCompoundField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeCompoundFieldAccess().getGroup()); }
(rule__DataTypeCompoundField__Group__0)
{ after(grammarAccess.getDataTypeCompoundFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeBase
entryRuleDataTypeBase 
:
{ before(grammarAccess.getDataTypeBaseRule()); }
	 ruleDataTypeBase
{ after(grammarAccess.getDataTypeBaseRule()); } 
	 EOF 
;

// Rule DataTypeBase
ruleDataTypeBase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeBaseAccess().getAlternatives()); }
(rule__DataTypeBase__Alternatives)
{ after(grammarAccess.getDataTypeBaseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXExpression
entryRuleXExpression 
:
{ before(grammarAccess.getXExpressionRule()); }
	 ruleXExpression
{ after(grammarAccess.getXExpressionRule()); } 
	 EOF 
;

// Rule XExpression
ruleXExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXExpressionAccess().getXOrExpressionParserRuleCall()); }
	ruleXOrExpression
{ after(grammarAccess.getXExpressionAccess().getXOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXOrExpression
entryRuleXOrExpression 
:
{ before(grammarAccess.getXOrExpressionRule()); }
	 ruleXOrExpression
{ after(grammarAccess.getXOrExpressionRule()); } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup()); }
(rule__XOrExpression__Group__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOr
entryRuleOpOr 
:
{ before(grammarAccess.getOpOrRule()); }
	 ruleOpOr
{ after(grammarAccess.getOpOrRule()); } 
	 EOF 
;

// Rule OpOr
ruleOpOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOrAccess().getOrKeyword()); }

	'or' 

{ after(grammarAccess.getOpOrAccess().getOrKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAndExpression
entryRuleXAndExpression 
:
{ before(grammarAccess.getXAndExpressionRule()); }
	 ruleXAndExpression
{ after(grammarAccess.getXAndExpressionRule()); } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup()); }
(rule__XAndExpression__Group__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAnd
entryRuleOpAnd 
:
{ before(grammarAccess.getOpAndRule()); }
	 ruleOpAnd
{ after(grammarAccess.getOpAndRule()); } 
	 EOF 
;

// Rule OpAnd
ruleOpAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAndAccess().getAndKeyword()); }

	'and' 

{ after(grammarAccess.getOpAndAccess().getAndKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression 
:
{ before(grammarAccess.getXEqualityExpressionRule()); }
	 ruleXEqualityExpression
{ after(grammarAccess.getXEqualityExpressionRule()); } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup()); }
(rule__XEqualityExpression__Group__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpEquality
entryRuleOpEquality 
:
{ before(grammarAccess.getOpEqualityRule()); }
	 ruleOpEquality
{ after(grammarAccess.getOpEqualityRule()); } 
	 EOF 
;

// Rule OpEquality
ruleOpEquality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpEqualityAccess().getAlternatives()); }
(rule__OpEquality__Alternatives)
{ after(grammarAccess.getOpEqualityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression 
:
{ before(grammarAccess.getXRelationalExpressionRule()); }
	 ruleXRelationalExpression
{ after(grammarAccess.getXRelationalExpressionRule()); } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup()); }
(rule__XRelationalExpression__Group__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpCompare
entryRuleOpCompare 
:
{ before(grammarAccess.getOpCompareRule()); }
	 ruleOpCompare
{ after(grammarAccess.getOpCompareRule()); } 
	 EOF 
;

// Rule OpCompare
ruleOpCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpCompareAccess().getAlternatives()); }
(rule__OpCompare__Alternatives)
{ after(grammarAccess.getOpCompareAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression 
:
{ before(grammarAccess.getXOtherOperatorExpressionRule()); }
	 ruleXOtherOperatorExpression
{ after(grammarAccess.getXOtherOperatorExpressionRule()); } 
	 EOF 
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup()); }
(rule__XOtherOperatorExpression__Group__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOther
entryRuleOpOther 
:
{ before(grammarAccess.getOpOtherRule()); }
	 ruleOpOther
{ after(grammarAccess.getOpOtherRule()); } 
	 EOF 
;

// Rule OpOther
ruleOpOther
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives()); }
(rule__OpOther__Alternatives)
{ after(grammarAccess.getOpOtherAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression 
:
{ before(grammarAccess.getXAdditiveExpressionRule()); }
	 ruleXAdditiveExpression
{ after(grammarAccess.getXAdditiveExpressionRule()); } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup()); }
(rule__XAdditiveExpression__Group__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAdd
entryRuleOpAdd 
:
{ before(grammarAccess.getOpAddRule()); }
	 ruleOpAdd
{ after(grammarAccess.getOpAddRule()); } 
	 EOF 
;

// Rule OpAdd
ruleOpAdd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAddAccess().getAlternatives()); }
(rule__OpAdd__Alternatives)
{ after(grammarAccess.getOpAddAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression 
:
{ before(grammarAccess.getXMultiplicativeExpressionRule()); }
	 ruleXMultiplicativeExpression
{ after(grammarAccess.getXMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup()); }
(rule__XMultiplicativeExpression__Group__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMulti
entryRuleOpMulti 
:
{ before(grammarAccess.getOpMultiRule()); }
	 ruleOpMulti
{ after(grammarAccess.getOpMultiRule()); } 
	 EOF 
;

// Rule OpMulti
ruleOpMulti
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpMultiAccess().getAlternatives()); }
(rule__OpMulti__Alternatives)
{ after(grammarAccess.getOpMultiAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation 
:
{ before(grammarAccess.getXUnaryOperationRule()); }
	 ruleXUnaryOperation
{ after(grammarAccess.getXUnaryOperationRule()); } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXUnaryOperationAccess().getAlternatives()); }
(rule__XUnaryOperation__Alternatives)
{ after(grammarAccess.getXUnaryOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpUnary
entryRuleOpUnary 
:
{ before(grammarAccess.getOpUnaryRule()); }
	 ruleOpUnary
{ after(grammarAccess.getOpUnaryRule()); } 
	 EOF 
;

// Rule OpUnary
ruleOpUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpUnaryAccess().getAlternatives()); }
(rule__OpUnary__Alternatives)
{ after(grammarAccess.getOpUnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression 
:
{ before(grammarAccess.getXPrimaryExpressionRule()); }
	 ruleXPrimaryExpression
{ after(grammarAccess.getXPrimaryExpressionRule()); } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
(rule__XPrimaryExpression__Alternatives)
{ after(grammarAccess.getXPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXLiteral
entryRuleXLiteral 
:
{ before(grammarAccess.getXLiteralRule()); }
	 ruleXLiteral
{ after(grammarAccess.getXLiteralRule()); } 
	 EOF 
;

// Rule XLiteral
ruleXLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXLiteralAccess().getAlternatives()); }
(rule__XLiteral__Alternatives)
{ after(grammarAccess.getXLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCollectionLiteral
entryRuleXCollectionLiteral 
:
{ before(grammarAccess.getXCollectionLiteralRule()); }
	 ruleXCollectionLiteral
{ after(grammarAccess.getXCollectionLiteralRule()); } 
	 EOF 
;

// Rule XCollectionLiteral
ruleXCollectionLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXCollectionLiteralAccess().getAlternatives()); }
(rule__XCollectionLiteral__Alternatives)
{ after(grammarAccess.getXCollectionLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSetLiteral
entryRuleXSetLiteral 
:
{ before(grammarAccess.getXSetLiteralRule()); }
	 ruleXSetLiteral
{ after(grammarAccess.getXSetLiteralRule()); } 
	 EOF 
;

// Rule XSetLiteral
ruleXSetLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup()); }
(rule__XSetLiteral__Group__0)
{ after(grammarAccess.getXSetLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXListLiteral
entryRuleXListLiteral 
:
{ before(grammarAccess.getXListLiteralRule()); }
	 ruleXListLiteral
{ after(grammarAccess.getXListLiteralRule()); } 
	 EOF 
;

// Rule XListLiteral
ruleXListLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXListLiteralAccess().getGroup()); }
(rule__XListLiteral__Group__0)
{ after(grammarAccess.getXListLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression 
:
{ before(grammarAccess.getXParenthesizedExpressionRule()); }
	 ruleXParenthesizedExpression
{ after(grammarAccess.getXParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
(rule__XParenthesizedExpression__Group__0)
{ after(grammarAccess.getXParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXIfExpression
entryRuleXIfExpression 
:
{ before(grammarAccess.getXIfExpressionRule()); }
	 ruleXIfExpression
{ after(grammarAccess.getXIfExpressionRule()); } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup()); }
(rule__XIfExpression__Group__0)
{ after(grammarAccess.getXIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression 
:
{ before(grammarAccess.getXSwitchExpressionRule()); }
	 ruleXSwitchExpression
{ after(grammarAccess.getXSwitchExpressionRule()); } 
	 EOF 
;

// Rule XSwitchExpression
ruleXSwitchExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup()); }
(rule__XSwitchExpression__Group__0)
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXCasePart
entryRuleXCasePart 
:
{ before(grammarAccess.getXCasePartRule()); }
	 ruleXCasePart
{ after(grammarAccess.getXCasePartRule()); } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXCasePartAccess().getGroup()); }
(rule__XCasePart__Group__0)
{ after(grammarAccess.getXCasePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXForEachExpression
entryRuleXForEachExpression 
:
{ before(grammarAccess.getXForEachExpressionRule()); }
	 ruleXForEachExpression
{ after(grammarAccess.getXForEachExpressionRule()); } 
	 EOF 
;

// Rule XForEachExpression
ruleXForEachExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXForEachExpressionAccess().getGroup()); }
(rule__XForEachExpression__Group__0)
{ after(grammarAccess.getXForEachExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXFunctionCallExpression
entryRuleXFunctionCallExpression 
:
{ before(grammarAccess.getXFunctionCallExpressionRule()); }
	 ruleXFunctionCallExpression
{ after(grammarAccess.getXFunctionCallExpressionRule()); } 
	 EOF 
;

// Rule XFunctionCallExpression
ruleXFunctionCallExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getGroup()); }
(rule__XFunctionCallExpression__Group__0)
{ after(grammarAccess.getXFunctionCallExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInFunction
entryRuleBuiltInFunction 
:
{ before(grammarAccess.getBuiltInFunctionRule()); }
	 ruleBuiltInFunction
{ after(grammarAccess.getBuiltInFunctionRule()); } 
	 EOF 
;

// Rule BuiltInFunction
ruleBuiltInFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInFunctionAccess().getAlternatives()); }
(rule__BuiltInFunction__Alternatives)
{ after(grammarAccess.getBuiltInFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral 
:
{ before(grammarAccess.getXBooleanLiteralRule()); }
	 ruleXBooleanLiteral
{ after(grammarAccess.getXBooleanLiteralRule()); } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getGroup()); }
(rule__XBooleanLiteral__Group__0)
{ after(grammarAccess.getXBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral 
:
{ before(grammarAccess.getXNullLiteralRule()); }
	 ruleXNullLiteral
{ after(grammarAccess.getXNullLiteralRule()); } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXNullLiteralAccess().getGroup()); }
(rule__XNullLiteral__Group__0)
{ after(grammarAccess.getXNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral 
:
{ before(grammarAccess.getXNumberLiteralRule()); }
	 ruleXNumberLiteral
{ after(grammarAccess.getXNumberLiteralRule()); } 
	 EOF 
;

// Rule XNumberLiteral
ruleXNumberLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXNumberLiteralAccess().getGroup()); }
(rule__XNumberLiteral__Group__0)
{ after(grammarAccess.getXNumberLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral 
:
{ before(grammarAccess.getXStringLiteralRule()); }
	 ruleXStringLiteral
{ after(grammarAccess.getXStringLiteralRule()); } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXStringLiteralAccess().getGroup()); }
(rule__XStringLiteral__Group__0)
{ after(grammarAccess.getXStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUMBER
entryRuleNUMBER 
:
{ before(grammarAccess.getNUMBERRule()); }
	 ruleNUMBER
{ after(grammarAccess.getNUMBERRule()); } 
	 EOF 
;

// Rule NUMBER
ruleNUMBER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUMBERAccess().getGroup()); }
(rule__NUMBER__Group__0)
{ after(grammarAccess.getNUMBERAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__LilModel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLilModelAccess().getInteractorsAssignment_0()); }
(rule__LilModel__InteractorsAssignment_0)
{ after(grammarAccess.getLilModelAccess().getInteractorsAssignment_0()); }
)

    |(
{ before(grammarAccess.getLilModelAccess().getDataTypesAssignment_1()); }
(rule__LilModel__DataTypesAssignment_1)
{ after(grammarAccess.getLilModelAccess().getDataTypesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorDeclaration__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDeclarationAccess().getEntitiesAssignment_3_0()); }
(rule__InteractorDeclaration__EntitiesAssignment_3_0)
{ after(grammarAccess.getInteractorDeclarationAccess().getEntitiesAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getInteractorDeclarationAccess().getSignalsAssignment_3_1()); }
(rule__InteractorDeclaration__SignalsAssignment_3_1)
{ after(grammarAccess.getInteractorDeclarationAccess().getSignalsAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getInteractorDeclarationAccess().getBehaviorsAssignment_3_2()); }
(rule__InteractorDeclaration__BehaviorsAssignment_3_2)
{ after(grammarAccess.getInteractorDeclarationAccess().getBehaviorsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessibleEntity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericAssignment_0()); }
(rule__AccessibleEntity__GenericAssignment_0)
{ after(grammarAccess.getAccessibleEntityAccess().getGenericAssignment_0()); }
)

    |(
{ before(grammarAccess.getAccessibleEntityAccess().getSpecificAssignment_1()); }
(rule__AccessibleEntity__SpecificAssignment_1)
{ after(grammarAccess.getAccessibleEntityAccess().getSpecificAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessibleEntity__GenericAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericAnyKeyword_0_0_0()); }

	'any' 

{ after(grammarAccess.getAccessibleEntityAccess().getGenericAnyKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericSelfKeyword_0_0_1()); }

	'self' 

{ after(grammarAccess.getAccessibleEntityAccess().getGenericSelfKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericOtherKeyword_0_0_2()); }

	'other' 

{ after(grammarAccess.getAccessibleEntityAccess().getGenericOtherKeyword_0_0_2()); }
)

    |(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericParentKeyword_0_0_3()); }

	'parent' 

{ after(grammarAccess.getAccessibleEntityAccess().getGenericParentKeyword_0_0_3()); }
)

    |(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericChildKeyword_0_0_4()); }

	'child' 

{ after(grammarAccess.getAccessibleEntityAccess().getGenericChildKeyword_0_0_4()); }
)

    |(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericAllKeyword_0_0_5()); }

	'all' 

{ after(grammarAccess.getAccessibleEntityAccess().getGenericAllKeyword_0_0_5()); }
)

    |(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericActorsKeyword_0_0_6()); }

	'actors' 

{ after(grammarAccess.getAccessibleEntityAccess().getGenericActorsKeyword_0_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityDeclarationAccess().getActorDeclarationParserRuleCall_0()); }
	ruleActorDeclaration
{ after(grammarAccess.getEntityDeclarationAccess().getActorDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEntityDeclarationAccess().getComponentDeclarationParserRuleCall_1()); }
	ruleComponentDeclaration
{ after(grammarAccess.getEntityDeclarationAccess().getComponentDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventReception__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventReceptionAccess().getGroup_0()); }
(rule__EventReception__Group_0__0)
{ after(grammarAccess.getEventReceptionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getEventReceptionAccess().getBaseAssignment_1()); }
(rule__EventReception__BaseAssignment_1)
{ after(grammarAccess.getEventReceptionAccess().getBaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getEventDeclarationParserRuleCall_0()); }
	ruleEventDeclaration
{ after(grammarAccess.getSignalDeclarationAccess().getEventDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSignalDeclarationAccess().getFlowDeclarationParserRuleCall_1()); }
	ruleFlowDeclaration
{ after(grammarAccess.getSignalDeclarationAccess().getFlowDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCauseAccess().getOnCauseParserRuleCall_0()); }
	ruleOnCause
{ after(grammarAccess.getCauseAccess().getOnCauseParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCauseAccess().getWhenCauseParserRuleCall_1()); }
	ruleWhenCause
{ after(grammarAccess.getCauseAccess().getWhenCauseParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getAlwaysEffectParserRuleCall_0()); }
	ruleAlwaysEffect
{ after(grammarAccess.getEffectAccess().getAlwaysEffectParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getSetEffectParserRuleCall_1()); }
	ruleSetEffect
{ after(grammarAccess.getEffectAccess().getSetEffectParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getTriggerEffectParserRuleCall_2()); }
	ruleTriggerEffect
{ after(grammarAccess.getEffectAccess().getTriggerEffectParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getGroup_0()); }
(rule__DataType__Group_0__0)
{ after(grammarAccess.getDataTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getGroup_1()); }
(rule__DataType__Group_1__0)
{ after(grammarAccess.getDataTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeBase__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeBaseAccess().getVoidKeyword_0()); }

	'void' 

{ after(grammarAccess.getDataTypeBaseAccess().getVoidKeyword_0()); }
)

    |(
{ before(grammarAccess.getDataTypeBaseAccess().getSymbolKeyword_1()); }

	'symbol' 

{ after(grammarAccess.getDataTypeBaseAccess().getSymbolKeyword_1()); }
)

    |(
{ before(grammarAccess.getDataTypeBaseAccess().getNumberKeyword_2()); }

	'number' 

{ after(grammarAccess.getDataTypeBaseAccess().getNumberKeyword_2()); }
)

    |(
{ before(grammarAccess.getDataTypeBaseAccess().getTextKeyword_3()); }

	'text' 

{ after(grammarAccess.getDataTypeBaseAccess().getTextKeyword_3()); }
)

    |(
{ before(grammarAccess.getDataTypeBaseAccess().getTimeKeyword_4()); }

	'time' 

{ after(grammarAccess.getDataTypeBaseAccess().getTimeKeyword_4()); }
)

    |(
{ before(grammarAccess.getDataTypeBaseAccess().getReferenceKeyword_5()); }

	'reference' 

{ after(grammarAccess.getDataTypeBaseAccess().getReferenceKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }

	'==' 

{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }

	'!=' 

{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }

	'>=' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); }

	'<=' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); }

	'<' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_0()); }

	'<>' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_1()); }

	'?:' 

{ after(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdd__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMulti__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getOpMultiAccess().getSolidusKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getPercentSignKeyword_2()); }

	'%' 

{ after(grammarAccess.getOpMultiAccess().getPercentSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getGroup_0()); }
(rule__XUnaryOperation__Group_0__0)
{ after(grammarAccess.getXUnaryOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getXUnaryOperationAccess().getXPrimaryExpressionParserRuleCall_1()); }
	ruleXPrimaryExpression
{ after(grammarAccess.getXUnaryOperationAccess().getXPrimaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpUnary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }

	'+' 

{ after(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_0()); }
	ruleXSwitchExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_1()); }
	ruleXIfExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXForEachExpressionParserRuleCall_2()); }
	ruleXForEachExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXForEachExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXFunctionCallExpressionParserRuleCall_3()); }
	ruleXFunctionCallExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXFunctionCallExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_4()); }
	ruleXParenthesizedExpression
{ after(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5()); }
	ruleXLiteral
{ after(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); }
	ruleXCollectionLiteral
{ after(grammarAccess.getXLiteralAccess().getXCollectionLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_1()); }
	ruleXBooleanLiteral
{ after(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_2()); }
	ruleXNumberLiteral
{ after(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_3()); }
	ruleXNullLiteral
{ after(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_4()); }
	ruleXStringLiteral
{ after(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCollectionLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); }
	ruleXSetLiteral
{ after(grammarAccess.getXCollectionLiteralAccess().getXSetLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); }
	ruleXListLiteral
{ after(grammarAccess.getXCollectionLiteralAccess().getXListLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAbsKeyword_0()); }

	'Math.abs' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAbsKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAcosKeyword_1()); }

	'Math.acos' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAcosKeyword_1()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAcoshKeyword_2()); }

	'Math.acosh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAcoshKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAsinKeyword_3()); }

	'Math.asin' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAsinKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAsinhKeyword_4()); }

	'Math.asinh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAsinhKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAtanKeyword_5()); }

	'Math.atan' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAtanKeyword_5()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAtanhKeyword_6()); }

	'Math.atanh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAtanhKeyword_6()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAtan2Keyword_7()); }

	'Math.atan2' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAtan2Keyword_7()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathCeilKeyword_8()); }

	'Math.ceil' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathCeilKeyword_8()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathCosKeyword_9()); }

	'Math.cos' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathCosKeyword_9()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathCoshKeyword_10()); }

	'Math.cosh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathCoshKeyword_10()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathExpKeyword_11()); }

	'Math.exp' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathExpKeyword_11()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathFloorKeyword_12()); }

	'Math.floor' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathFloorKeyword_12()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathFroundKeyword_13()); }

	'Math.fround' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathFroundKeyword_13()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathHypotKeyword_14()); }

	'Math.hypot' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathHypotKeyword_14()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathLogKeyword_15()); }

	'Math.log' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathLogKeyword_15()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathLog10Keyword_16()); }

	'Math.log10' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathLog10Keyword_16()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathLog2Keyword_17()); }

	'Math.log2' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathLog2Keyword_17()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathMaxKeyword_18()); }

	'Math.max' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathMaxKeyword_18()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathMinKeyword_19()); }

	'Math.min' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathMinKeyword_19()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathPowKeyword_20()); }

	'Math.pow' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathPowKeyword_20()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathRandomKeyword_21()); }

	'Math.random' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathRandomKeyword_21()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathRoundKeyword_22()); }

	'Math.round' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathRoundKeyword_22()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathSignKeyword_23()); }

	'Math.sign' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathSignKeyword_23()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathSinKeyword_24()); }

	'Math.sin' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathSinKeyword_24()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathSinhKeyword_25()); }

	'Math.sinh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathSinhKeyword_25()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathSqrtKeyword_26()); }

	'Math.sqrt' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathSqrtKeyword_26()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathTanKeyword_27()); }

	'Math.tan' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathTanKeyword_27()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathTanhKeyword_28()); }

	'Math.tanh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathTanhKeyword_28()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathTruncKeyword_29()); }

	'Math.trunc' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathTruncKeyword_29()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getSetOrderbyKeyword_30()); }

	'Set.orderby' 

{ after(grammarAccess.getBuiltInFunctionAccess().getSetOrderbyKeyword_30()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getSetAddKeyword_31()); }

	'Set.add' 

{ after(grammarAccess.getBuiltInFunctionAccess().getSetAddKeyword_31()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getSetFindKeyword_32()); }

	'Set.find' 

{ after(grammarAccess.getBuiltInFunctionAccess().getSetFindKeyword_32()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getSetChangeKeyword_33()); }

	'Set.change' 

{ after(grammarAccess.getBuiltInFunctionAccess().getSetChangeKeyword_33()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getSetRemoveKeyword_34()); }

	'Set.remove' 

{ after(grammarAccess.getBuiltInFunctionAccess().getSetRemoveKeyword_34()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
(rule__XBooleanLiteral__IsTrueAssignment_1_1)
{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__InteractorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorDeclaration__Group__0__Impl
	rule__InteractorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDeclarationAccess().getInteractorKeyword_0()); }

	'interactor' 

{ after(grammarAccess.getInteractorDeclarationAccess().getInteractorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorDeclaration__Group__1__Impl
	rule__InteractorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDeclarationAccess().getNameAssignment_1()); }
(rule__InteractorDeclaration__NameAssignment_1)
{ after(grammarAccess.getInteractorDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorDeclaration__Group__2__Impl
	rule__InteractorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDeclarationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getInteractorDeclarationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InteractorDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InteractorDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDeclarationAccess().getAlternatives_3()); }
(rule__InteractorDeclaration__Alternatives_3)*
{ after(grammarAccess.getInteractorDeclarationAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorDeclaration__Group__0__Impl
	rule__ActorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorDeclarationAccess().getActorKeyword_0()); }

	'actor' 

{ after(grammarAccess.getActorDeclarationAccess().getActorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorDeclarationAccess().getNameAssignment_1()); }
(rule__ActorDeclaration__NameAssignment_1)
{ after(grammarAccess.getActorDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActorAlias__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorAlias__Group__0__Impl
	rule__ActorAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getSourceAssignment_0()); }
(rule__ActorAlias__SourceAssignment_0)
{ after(grammarAccess.getActorAliasAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorAlias__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorAlias__Group__1__Impl
	rule__ActorAlias__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getAsKeyword_1()); }

	'as' 

{ after(grammarAccess.getActorAliasAccess().getAsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorAlias__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorAlias__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getRemoteAssignment_2()); }
(rule__ActorAlias__RemoteAssignment_2)
{ after(grammarAccess.getActorAliasAccess().getRemoteAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComponentDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group__0__Impl
	rule__ComponentDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getInteractorAssignment_0()); }
(rule__ComponentDeclaration__InteractorAssignment_0)
{ after(grammarAccess.getComponentDeclarationAccess().getInteractorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group__1__Impl
	rule__ComponentDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getNameAssignment_1()); }
(rule__ComponentDeclaration__NameAssignment_1)
{ after(grammarAccess.getComponentDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getGroup_2()); }
(rule__ComponentDeclaration__Group_2__0)?
{ after(grammarAccess.getComponentDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComponentDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group_2__0__Impl
	rule__ComponentDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getWithKeyword_2_0()); }

	'with' 

{ after(grammarAccess.getComponentDeclarationAccess().getWithKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group_2__1__Impl
	rule__ComponentDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getAliasesAssignment_2_1()); }
(rule__ComponentDeclaration__AliasesAssignment_2_1)
{ after(grammarAccess.getComponentDeclarationAccess().getAliasesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getGroup_2_2()); }
(rule__ComponentDeclaration__Group_2_2__0)*
{ after(grammarAccess.getComponentDeclarationAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComponentDeclaration__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group_2_2__0__Impl
	rule__ComponentDeclaration__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getComponentDeclarationAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentDeclaration__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentDeclaration__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getAliasesAssignment_2_2_1()); }
(rule__ComponentDeclaration__AliasesAssignment_2_2_1)
{ after(grammarAccess.getComponentDeclarationAccess().getAliasesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventReception__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventReception__Group_0__0__Impl
	rule__EventReception__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventReception__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventReceptionAccess().getInstanceAssignment_0_0()); }
(rule__EventReception__InstanceAssignment_0_0)
{ after(grammarAccess.getEventReceptionAccess().getInstanceAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventReception__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventReception__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventReception__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventReceptionAccess().getGroup_0_1()); }
(rule__EventReception__Group_0_1__0)?
{ after(grammarAccess.getEventReceptionAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventReception__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventReception__Group_0_1__0__Impl
	rule__EventReception__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventReception__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventReceptionAccess().getFromKeyword_0_1_0()); }

	'from' 

{ after(grammarAccess.getEventReceptionAccess().getFromKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventReception__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventReception__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventReception__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventReceptionAccess().getSourceAssignment_0_1_1()); }
(rule__EventReception__SourceAssignment_0_1_1)
{ after(grammarAccess.getEventReceptionAccess().getSourceAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EventEmission__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventEmission__Group__0__Impl
	rule__EventEmission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventEmission__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventEmissionAccess().getInstanceAssignment_0()); }
(rule__EventEmission__InstanceAssignment_0)
{ after(grammarAccess.getEventEmissionAccess().getInstanceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventEmission__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventEmission__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventEmission__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventEmissionAccess().getGroup_1()); }
(rule__EventEmission__Group_1__0)?
{ after(grammarAccess.getEventEmissionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventEmission__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventEmission__Group_1__0__Impl
	rule__EventEmission__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventEmission__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventEmissionAccess().getToKeyword_1_0()); }

	'to' 

{ after(grammarAccess.getEventEmissionAccess().getToKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventEmission__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventEmission__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventEmission__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventEmissionAccess().getDestinationAssignment_1_1()); }
(rule__EventEmission__DestinationAssignment_1_1)
{ after(grammarAccess.getEventEmissionAccess().getDestinationAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FlowEmission__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowEmission__Group__0__Impl
	rule__FlowEmission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowEmission__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowEmissionAccess().getInstanceAssignment_0()); }
(rule__FlowEmission__InstanceAssignment_0)
{ after(grammarAccess.getFlowEmissionAccess().getInstanceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowEmission__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowEmission__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowEmission__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowEmissionAccess().getGroup_1()); }
(rule__FlowEmission__Group_1__0)?
{ after(grammarAccess.getFlowEmissionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FlowEmission__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowEmission__Group_1__0__Impl
	rule__FlowEmission__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowEmission__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowEmissionAccess().getToKeyword_1_0()); }

	'to' 

{ after(grammarAccess.getFlowEmissionAccess().getToKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowEmission__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowEmission__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowEmission__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowEmissionAccess().getDestinationAssignment_1_1()); }
(rule__FlowEmission__DestinationAssignment_1_1)
{ after(grammarAccess.getFlowEmissionAccess().getDestinationAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__0__Impl
	rule__EventDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getTypeAssignment_0()); }
(rule__EventDeclaration__TypeAssignment_0)
{ after(grammarAccess.getEventDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__1__Impl
	rule__EventDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getEventKeyword_1()); }

	'event' 

{ after(grammarAccess.getEventDeclarationAccess().getEventKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__2__Impl
	rule__EventDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getNameAssignment_2()); }
(rule__EventDeclaration__NameAssignment_2)
{ after(grammarAccess.getEventDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__3__Impl
	rule__EventDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getGroup_3()); }
(rule__EventDeclaration__Group_3__0)?
{ after(grammarAccess.getEventDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getGroup_4()); }
(rule__EventDeclaration__Group_4__0)*
{ after(grammarAccess.getEventDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EventDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_3__0__Impl
	rule__EventDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getFromKeyword_3_0()); }

	'from' 

{ after(grammarAccess.getEventDeclarationAccess().getFromKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getSourceAssignment_3_1()); }
(rule__EventDeclaration__SourceAssignment_3_1)
{ after(grammarAccess.getEventDeclarationAccess().getSourceAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EventDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_4__0__Impl
	rule__EventDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getToKeyword_4_0()); }

	'to' 

{ after(grammarAccess.getEventDeclarationAccess().getToKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getDestinationsAssignment_4_1()); }
(rule__EventDeclaration__DestinationsAssignment_4_1)
{ after(grammarAccess.getEventDeclarationAccess().getDestinationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FlowDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowDeclaration__Group__0__Impl
	rule__FlowDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getTypeAssignment_0()); }
(rule__FlowDeclaration__TypeAssignment_0)
{ after(grammarAccess.getFlowDeclarationAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowDeclaration__Group__1__Impl
	rule__FlowDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getFlowKeyword_1()); }

	'flow' 

{ after(grammarAccess.getFlowDeclarationAccess().getFlowKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowDeclaration__Group__2__Impl
	rule__FlowDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getNameAssignment_2()); }
(rule__FlowDeclaration__NameAssignment_2)
{ after(grammarAccess.getFlowDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowDeclaration__Group__3__Impl
	rule__FlowDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getGroup_3()); }
(rule__FlowDeclaration__Group_3__0)?
{ after(grammarAccess.getFlowDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getGroup_4()); }
(rule__FlowDeclaration__Group_4__0)*
{ after(grammarAccess.getFlowDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FlowDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowDeclaration__Group_3__0__Impl
	rule__FlowDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getFromKeyword_3_0()); }

	'from' 

{ after(grammarAccess.getFlowDeclarationAccess().getFromKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getSourceAssignment_3_1()); }
(rule__FlowDeclaration__SourceAssignment_3_1)
{ after(grammarAccess.getFlowDeclarationAccess().getSourceAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FlowDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowDeclaration__Group_4__0__Impl
	rule__FlowDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getToKeyword_4_0()); }

	'to' 

{ after(grammarAccess.getFlowDeclarationAccess().getToKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FlowDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FlowDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getDestinationsAssignment_4_1()); }
(rule__FlowDeclaration__DestinationsAssignment_4_1)
{ after(grammarAccess.getFlowDeclarationAccess().getDestinationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BehaviorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BehaviorDeclaration__Group__0__Impl
	rule__BehaviorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorDeclarationAccess().getCauseAssignment_0()); }
(rule__BehaviorDeclaration__CauseAssignment_0)
{ after(grammarAccess.getBehaviorDeclarationAccess().getCauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BehaviorDeclaration__Group__1__Impl
	rule__BehaviorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getBehaviorDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BehaviorDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBehaviorDeclarationAccess().getEffectsAssignment_2()); }
(rule__BehaviorDeclaration__EffectsAssignment_2)
{ after(grammarAccess.getBehaviorDeclarationAccess().getEffectsAssignment_2()); }
)
(
{ before(grammarAccess.getBehaviorDeclarationAccess().getEffectsAssignment_2()); }
(rule__BehaviorDeclaration__EffectsAssignment_2)*
{ after(grammarAccess.getBehaviorDeclarationAccess().getEffectsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OnCause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnCause__Group__0__Impl
	rule__OnCause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getOnKeyword_0()); }

	'on' 

{ after(grammarAccess.getOnCauseAccess().getOnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnCause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnCause__Group__1__Impl
	rule__OnCause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getEventAssignment_1()); }
(rule__OnCause__EventAssignment_1)
{ after(grammarAccess.getOnCauseAccess().getEventAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnCause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnCause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getGroup_2()); }
(rule__OnCause__Group_2__0)?
{ after(grammarAccess.getOnCauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OnCause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnCause__Group_2__0__Impl
	rule__OnCause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getOnCauseAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnCause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnCause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getGuardAssignment_2_1()); }
(rule__OnCause__GuardAssignment_2_1)
{ after(grammarAccess.getOnCauseAccess().getGuardAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhenCause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenCause__Group__0__Impl
	rule__WhenCause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getWhenCauseAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenCause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenCause__Group__1__Impl
	rule__WhenCause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getConditionAssignment_1()); }
(rule__WhenCause__ConditionAssignment_1)
{ after(grammarAccess.getWhenCauseAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenCause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenCause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getGroup_2()); }
(rule__WhenCause__Group_2__0)?
{ after(grammarAccess.getWhenCauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WhenCause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenCause__Group_2__0__Impl
	rule__WhenCause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getWhenCauseAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenCause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenCause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getGuardAssignment_2_1()); }
(rule__WhenCause__GuardAssignment_2_1)
{ after(grammarAccess.getWhenCauseAccess().getGuardAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AlwaysEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysEffect__Group__0__Impl
	rule__AlwaysEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getAlwaysKeyword_0()); }

	'always' 

{ after(grammarAccess.getAlwaysEffectAccess().getAlwaysKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysEffect__Group__1__Impl
	rule__AlwaysEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getTargetAssignment_1()); }
(rule__AlwaysEffect__TargetAssignment_1)
{ after(grammarAccess.getAlwaysEffectAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysEffect__Group__2__Impl
	rule__AlwaysEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getAlwaysEffectAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getValueAssignment_3()); }
(rule__AlwaysEffect__ValueAssignment_3)
{ after(grammarAccess.getAlwaysEffectAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SetEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEffect__Group__0__Impl
	rule__SetEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getSetKeyword_0()); }

	'set' 

{ after(grammarAccess.getSetEffectAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEffect__Group__1__Impl
	rule__SetEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getTargetAssignment_1()); }
(rule__SetEffect__TargetAssignment_1)
{ after(grammarAccess.getSetEffectAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEffect__Group__2__Impl
	rule__SetEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getSetEffectAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getValueAssignment_3()); }
(rule__SetEffect__ValueAssignment_3)
{ after(grammarAccess.getSetEffectAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TriggerEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerEffect__Group__0__Impl
	rule__TriggerEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getTriggerKeyword_0()); }

	'trigger' 

{ after(grammarAccess.getTriggerEffectAccess().getTriggerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerEffect__Group__1__Impl
	rule__TriggerEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getTargetAssignment_1()); }
(rule__TriggerEffect__TargetAssignment_1)
{ after(grammarAccess.getTriggerEffectAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerEffect__Group__2__Impl
	rule__TriggerEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getTriggerEffectAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getValueAssignment_3()); }
(rule__TriggerEffect__ValueAssignment_3)
{ after(grammarAccess.getTriggerEffectAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataTypeCompoundDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeCompoundDeclaration__Group__0__Impl
	rule__DataTypeCompoundDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeCompoundDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeCompoundDeclarationAccess().getStructureKeyword_0()); }

	'structure' 

{ after(grammarAccess.getDataTypeCompoundDeclarationAccess().getStructureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeCompoundDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeCompoundDeclaration__Group__1__Impl
	rule__DataTypeCompoundDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeCompoundDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeCompoundDeclarationAccess().getNameAssignment_1()); }
(rule__DataTypeCompoundDeclaration__NameAssignment_1)
{ after(grammarAccess.getDataTypeCompoundDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeCompoundDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeCompoundDeclaration__Group__2__Impl
	rule__DataTypeCompoundDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeCompoundDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeCompoundDeclarationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getDataTypeCompoundDeclarationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeCompoundDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeCompoundDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeCompoundDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeCompoundDeclarationAccess().getFieldsAssignment_3()); }
(rule__DataTypeCompoundDeclaration__FieldsAssignment_3)*
{ after(grammarAccess.getDataTypeCompoundDeclarationAccess().getFieldsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataTypeCompoundField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeCompoundField__Group__0__Impl
	rule__DataTypeCompoundField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeCompoundField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeCompoundFieldAccess().getTypeAssignment_0()); }
(rule__DataTypeCompoundField__TypeAssignment_0)
{ after(grammarAccess.getDataTypeCompoundFieldAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeCompoundField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeCompoundField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeCompoundField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeCompoundFieldAccess().getNameAssignment_1()); }
(rule__DataTypeCompoundField__NameAssignment_1)
{ after(grammarAccess.getDataTypeCompoundFieldAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_0__0__Impl
	rule__DataType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDataTypeCompoundAction_0_0()); }
(

)
{ after(grammarAccess.getDataTypeAccess().getDataTypeCompoundAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_0_1()); }
(rule__DataType__TypeAssignment_0_1)
{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_1__0__Impl
	rule__DataType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDataTypeBaseAction_1_0()); }
(

)
{ after(grammarAccess.getDataTypeAccess().getDataTypeBaseAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_1_1()); }
(rule__DataType__TypeAssignment_1_1)
{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group__0__Impl
	rule__XOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); }
	ruleXAndExpression
{ after(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1()); }
(rule__XOrExpression__Group_1__0)*
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1__0__Impl
	rule__XOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1_0()); }
(rule__XOrExpression__Group_1_0__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XOrExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXOrExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOrExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getGroup_1_0_0()); }
(rule__XOrExpression__Group_1_0_0__0)
{ after(grammarAccess.getXOrExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XOrExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0_0__0__Impl
	rule__XOrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOrExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XOrExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group__0__Impl
	rule__XAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); }
	ruleXEqualityExpression
{ after(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1()); }
(rule__XAndExpression__Group_1__0)*
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1__0__Impl
	rule__XAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1_0()); }
(rule__XAndExpression__Group_1_0__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XAndExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXAndExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAndExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getGroup_1_0_0()); }
(rule__XAndExpression__Group_1_0_0__0)
{ after(grammarAccess.getXAndExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XAndExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0_0__0__Impl
	rule__XAndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAndExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XAndExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group__0__Impl
	rule__XEqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); }
	ruleXRelationalExpression
{ after(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1()); }
(rule__XEqualityExpression__Group_1__0)*
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1__0__Impl
	rule__XEqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0()); }
(rule__XEqualityExpression__Group_1_0__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XEqualityExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XEqualityExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0_0()); }
(rule__XEqualityExpression__Group_1_0_0__0)
{ after(grammarAccess.getXEqualityExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XEqualityExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0_0__0__Impl
	rule__XEqualityExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XEqualityExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XEqualityExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XEqualityExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group__0__Impl
	rule__XRelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); }
	ruleXOtherOperatorExpression
{ after(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1()); }
(rule__XRelationalExpression__Group_1__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1__0__Impl
	rule__XRelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0()); }
(rule__XRelationalExpression__Group_1_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XRelationalExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XRelationalExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0()); }
(rule__XRelationalExpression__Group_1_0_0__0)
{ after(grammarAccess.getXRelationalExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XRelationalExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0_0__0__Impl
	rule__XRelationalExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XRelationalExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XRelationalExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XRelationalExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXRelationalExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group__0__Impl
	rule__XOtherOperatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); }
	ruleXAdditiveExpression
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1()); }
(rule__XOtherOperatorExpression__Group_1__0)*
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1__0__Impl
	rule__XOtherOperatorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0()); }
(rule__XOtherOperatorExpression__Group_1_0__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XOtherOperatorExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XOtherOperatorExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0_0()); }
(rule__XOtherOperatorExpression__Group_1_0_0__0)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XOtherOperatorExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0_0__0__Impl
	rule__XOtherOperatorExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XOtherOperatorExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XOtherOperatorExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XOtherOperatorExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group__0__Impl
	rule__XAdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); }
	ruleXMultiplicativeExpression
{ after(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1()); }
(rule__XAdditiveExpression__Group_1__0)*
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1__0__Impl
	rule__XAdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0()); }
(rule__XAdditiveExpression__Group_1_0__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XAdditiveExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XAdditiveExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0_0()); }
(rule__XAdditiveExpression__Group_1_0_0__0)
{ after(grammarAccess.getXAdditiveExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XAdditiveExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0_0__0__Impl
	rule__XAdditiveExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XAdditiveExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XAdditiveExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XAdditiveExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group__0__Impl
	rule__XMultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); }
	ruleXUnaryOperation
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1()); }
(rule__XMultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1__0__Impl
	rule__XMultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0()); }
(rule__XMultiplicativeExpression__Group_1_0__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__XMultiplicativeExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XMultiplicativeExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0_0()); }
(rule__XMultiplicativeExpression__Group_1_0_0__0)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__XMultiplicativeExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0_0__0__Impl
	rule__XMultiplicativeExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XMultiplicativeExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XMultiplicativeExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__XMultiplicativeExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XUnaryOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__0__Impl
	rule__XUnaryOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0()); }
(

)
{ after(grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__1__Impl
	rule__XUnaryOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1()); }
(rule__XUnaryOperation__FeatureAssignment_0_1)
{ after(grammarAccess.getXUnaryOperationAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XUnaryOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XUnaryOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2()); }
(rule__XUnaryOperation__OperandAssignment_0_2)
{ after(grammarAccess.getXUnaryOperationAccess().getOperandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XSetLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__0__Impl
	rule__XSetLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0()); }
(

)
{ after(grammarAccess.getXSetLiteralAccess().getXSetLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__1__Impl
	rule__XSetLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getCommercialAtLeftCurlyBracketKeyword_1()); }

	'@{' 

{ after(grammarAccess.getXSetLiteralAccess().getCommercialAtLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__2__Impl
	rule__XSetLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup_2()); }
(rule__XSetLiteral__Group_2__0)?
{ after(grammarAccess.getXSetLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getXSetLiteralAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XSetLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_2__0__Impl
	rule__XSetLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsAssignment_2_0()); }
(rule__XSetLiteral__ElementsAssignment_2_0)
{ after(grammarAccess.getXSetLiteralAccess().getElementsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getGroup_2_1()); }
(rule__XSetLiteral__Group_2_1__0)*
{ after(grammarAccess.getXSetLiteralAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSetLiteral__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_2_1__0__Impl
	rule__XSetLiteral__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getXSetLiteralAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSetLiteral__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSetLiteral__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsAssignment_2_1_1()); }
(rule__XSetLiteral__ElementsAssignment_2_1_1)
{ after(grammarAccess.getXSetLiteralAccess().getElementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XListLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__0__Impl
	rule__XListLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getXListLiteralAction_0()); }
(

)
{ after(grammarAccess.getXListLiteralAccess().getXListLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__1__Impl
	rule__XListLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getCommercialAtLeftSquareBracketKeyword_1()); }

	'@[' 

{ after(grammarAccess.getXListLiteralAccess().getCommercialAtLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__2__Impl
	rule__XListLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getGroup_2()); }
(rule__XListLiteral__Group_2__0)?
{ after(grammarAccess.getXListLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getXListLiteralAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XListLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_2__0__Impl
	rule__XListLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsAssignment_2_0()); }
(rule__XListLiteral__ElementsAssignment_2_0)
{ after(grammarAccess.getXListLiteralAccess().getElementsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getGroup_2_1()); }
(rule__XListLiteral__Group_2_1__0)*
{ after(grammarAccess.getXListLiteralAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XListLiteral__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_2_1__0__Impl
	rule__XListLiteral__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getXListLiteralAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XListLiteral__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XListLiteral__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsAssignment_2_1_1()); }
(rule__XListLiteral__ElementsAssignment_2_1_1)
{ after(grammarAccess.getXListLiteralAccess().getElementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__0__Impl
	rule__XParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__1__Impl
	rule__XParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); }
	ruleXExpression
{ after(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XIfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__0__Impl
	rule__XIfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0()); }
(

)
{ after(grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__1__Impl
	rule__XIfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getXIfExpressionAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__2__Impl
	rule__XIfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__3__Impl
	rule__XIfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfAssignment_3()); }
(rule__XIfExpression__IfAssignment_3)
{ after(grammarAccess.getXIfExpressionAccess().getIfAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__4__Impl
	rule__XIfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__5__Impl
	rule__XIfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenAssignment_5()); }
(rule__XIfExpression__ThenAssignment_5)
{ after(grammarAccess.getXIfExpressionAccess().getThenAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getGroup_6()); }
(rule__XIfExpression__Group_6__0)?
{ after(grammarAccess.getXIfExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XIfExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_6__0__Impl
	rule__XIfExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0()); }
(
	'else' 
)
{ after(grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XIfExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XIfExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseAssignment_6_1()); }
(rule__XIfExpression__ElseAssignment_6_1)
{ after(grammarAccess.getXIfExpressionAccess().getElseAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XSwitchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__0__Impl
	rule__XSwitchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0()); }
(

)
{ after(grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__1__Impl
	rule__XSwitchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1()); }

	'switch' 

{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__2__Impl
	rule__XSwitchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2()); }
(
	'(' 
)
{ after(grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__3__Impl
	rule__XSwitchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_3()); }
(rule__XSwitchExpression__SwitchAssignment_3)
{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__4__Impl
	rule__XSwitchExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__5__Impl
	rule__XSwitchExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_5()); }
(rule__XSwitchExpression__CasesAssignment_5)
{ after(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_5()); }
)
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_5()); }
(rule__XSwitchExpression__CasesAssignment_5)*
{ after(grammarAccess.getXSwitchExpressionAccess().getCasesAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getGroup_6()); }
(rule__XSwitchExpression__Group_6__0)?
{ after(grammarAccess.getXSwitchExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XSwitchExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_6__0__Impl
	rule__XSwitchExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_6_0()); }
(
	'default' 
)
{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_6__1__Impl
	rule__XSwitchExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_6_1()); }

	':' 

{ after(grammarAccess.getXSwitchExpressionAccess().getColonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XSwitchExpression__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XSwitchExpression__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_6_2()); }
(rule__XSwitchExpression__DefaultAssignment_6_2)
{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XCasePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__0__Impl
	rule__XCasePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getXCasePartAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__1__Impl
	rule__XCasePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseAssignment_1()); }
(rule__XCasePart__CaseAssignment_1)
{ after(grammarAccess.getXCasePartAccess().getCaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__2__Impl
	rule__XCasePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getXCasePartAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XCasePart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XCasePart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getThenAssignment_3()); }
(rule__XCasePart__ThenAssignment_3)
{ after(grammarAccess.getXCasePartAccess().getThenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__XForEachExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForEachExpression__Group__0__Impl
	rule__XForEachExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XForEachExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForEachExpressionAccess().getXForEachExpressionAction_0()); }
(

)
{ after(grammarAccess.getXForEachExpressionAccess().getXForEachExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForEachExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForEachExpression__Group__1__Impl
	rule__XForEachExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XForEachExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForEachExpressionAccess().getForKeyword_1()); }

	'for' 

{ after(grammarAccess.getXForEachExpressionAccess().getForKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForEachExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForEachExpression__Group__2__Impl
	rule__XForEachExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XForEachExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForEachExpressionAccess().getEachKeyword_2()); }

	'each' 

{ after(grammarAccess.getXForEachExpressionAccess().getEachKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForEachExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForEachExpression__Group__3__Impl
	rule__XForEachExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XForEachExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForEachExpressionAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getXForEachExpressionAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForEachExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForEachExpression__Group__4__Impl
	rule__XForEachExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XForEachExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForEachExpressionAccess().getForExpressionAssignment_4()); }
(rule__XForEachExpression__ForExpressionAssignment_4)
{ after(grammarAccess.getXForEachExpressionAccess().getForExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForEachExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForEachExpression__Group__5__Impl
	rule__XForEachExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XForEachExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForEachExpressionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getXForEachExpressionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XForEachExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XForEachExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XForEachExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForEachExpressionAccess().getEachExpressionAssignment_6()); }
(rule__XForEachExpression__EachExpressionAssignment_6)
{ after(grammarAccess.getXForEachExpressionAccess().getEachExpressionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__XFunctionCallExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionCallExpression__Group__0__Impl
	rule__XFunctionCallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionCallExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getXFunctionCallExpressionAction_0()); }
(

)
{ after(grammarAccess.getXFunctionCallExpressionAccess().getXFunctionCallExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionCallExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionCallExpression__Group__1__Impl
	rule__XFunctionCallExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionCallExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getFunctionAssignment_1()); }
(rule__XFunctionCallExpression__FunctionAssignment_1)
{ after(grammarAccess.getXFunctionCallExpressionAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionCallExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionCallExpression__Group__2__Impl
	rule__XFunctionCallExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionCallExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getXFunctionCallExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionCallExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionCallExpression__Group__3__Impl
	rule__XFunctionCallExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionCallExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getArgumentsAssignment_3()); }
(rule__XFunctionCallExpression__ArgumentsAssignment_3)?
{ after(grammarAccess.getXFunctionCallExpressionAccess().getArgumentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionCallExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionCallExpression__Group__4__Impl
	rule__XFunctionCallExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionCallExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getGroup_4()); }
(rule__XFunctionCallExpression__Group_4__0)*
{ after(grammarAccess.getXFunctionCallExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionCallExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionCallExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionCallExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getXFunctionCallExpressionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__XFunctionCallExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionCallExpression__Group_4__0__Impl
	rule__XFunctionCallExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionCallExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getXFunctionCallExpressionAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XFunctionCallExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XFunctionCallExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionCallExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getArgumentsAssignment_4_1()); }
(rule__XFunctionCallExpression__ArgumentsAssignment_4_1)
{ after(grammarAccess.getXFunctionCallExpressionAccess().getArgumentsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XBooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBooleanLiteral__Group__0__Impl
	rule__XBooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XBooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XBooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getAlternatives_1()); }
(rule__XBooleanLiteral__Alternatives_1)
{ after(grammarAccess.getXBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XNullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNullLiteral__Group__0__Impl
	rule__XNullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XNullLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XNullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XNullLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNullLiteralAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getXNullLiteralAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XNumberLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNumberLiteral__Group__0__Impl
	rule__XNumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0()); }
(

)
{ after(grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XNumberLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XNumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getValueAssignment_1()); }
(rule__XNumberLiteral__ValueAssignment_1)
{ after(grammarAccess.getXNumberLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XStringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStringLiteral__Group__0__Impl
	rule__XStringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0()); }
(

)
{ after(grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XStringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XStringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getValueAssignment_1()); }
(rule__XStringLiteral__ValueAssignment_1)
{ after(grammarAccess.getXStringLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NUMBER__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group__0__Impl
	rule__NUMBER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getGroup_1()); }
(rule__NUMBER__Group_1__0)?
{ after(grammarAccess.getNUMBERAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NUMBER__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group_1__0__Impl
	rule__NUMBER__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getNUMBERAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__LilModel__InteractorsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLilModelAccess().getInteractorsInteractorDeclarationParserRuleCall_0_0()); }
	ruleInteractorDeclaration{ after(grammarAccess.getLilModelAccess().getInteractorsInteractorDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LilModel__DataTypesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLilModelAccess().getDataTypesDataTypeCompoundDeclarationParserRuleCall_1_0()); }
	ruleDataTypeCompoundDeclaration{ after(grammarAccess.getLilModelAccess().getDataTypesDataTypeCompoundDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInteractorDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorDeclaration__EntitiesAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDeclarationAccess().getEntitiesEntityDeclarationParserRuleCall_3_0_0()); }
	ruleEntityDeclaration{ after(grammarAccess.getInteractorDeclarationAccess().getEntitiesEntityDeclarationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorDeclaration__SignalsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDeclarationAccess().getSignalsSignalDeclarationParserRuleCall_3_1_0()); }
	ruleSignalDeclaration{ after(grammarAccess.getInteractorDeclarationAccess().getSignalsSignalDeclarationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InteractorDeclaration__BehaviorsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorDeclarationAccess().getBehaviorsBehaviorDeclarationParserRuleCall_3_2_0()); }
	ruleBehaviorDeclaration{ after(grammarAccess.getInteractorDeclarationAccess().getBehaviorsBehaviorDeclarationParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessibleEntity__GenericAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericAlternatives_0_0()); }
(rule__AccessibleEntity__GenericAlternatives_0_0)
{ after(grammarAccess.getAccessibleEntityAccess().getGenericAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessibleEntity__SpecificAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessibleEntityAccess().getSpecificEntityParserRuleCall_1_0()); }
	ruleEntity{ after(grammarAccess.getAccessibleEntityAccess().getSpecificEntityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__InstanceAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getInstanceEntityDeclarationCrossReference_0()); }
(
{ before(grammarAccess.getEntityAccess().getInstanceEntityDeclarationIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getInstanceEntityDeclarationIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getInstanceEntityDeclarationCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__InstanceAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getInstanceActorDeclarationCrossReference_0()); }
(
{ before(grammarAccess.getActorAccess().getInstanceActorDeclarationIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getActorAccess().getInstanceActorDeclarationIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getActorAccess().getInstanceActorDeclarationCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__InstanceAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getInstanceComponentDeclarationCrossReference_0()); }
(
{ before(grammarAccess.getComponentAccess().getInstanceComponentDeclarationIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getComponentAccess().getInstanceComponentDeclarationIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getComponentAccess().getInstanceComponentDeclarationCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getActorDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getSourceActorParserRuleCall_0_0()); }
	ruleActor{ after(grammarAccess.getActorAliasAccess().getSourceActorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__RemoteAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getRemoteActorParserRuleCall_2_0()); }
	ruleActor{ after(grammarAccess.getActorAliasAccess().getRemoteActorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__InteractorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getInteractorInteractorDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getComponentDeclarationAccess().getInteractorInteractorDeclarationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getComponentDeclarationAccess().getInteractorInteractorDeclarationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getComponentDeclarationAccess().getInteractorInteractorDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getComponentDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__AliasesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getAliasesActorAliasParserRuleCall_2_1_0()); }
	ruleActorAlias{ after(grammarAccess.getComponentDeclarationAccess().getAliasesActorAliasParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentDeclaration__AliasesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentDeclarationAccess().getAliasesActorAliasParserRuleCall_2_2_1_0()); }
	ruleActorAlias{ after(grammarAccess.getComponentDeclarationAccess().getAliasesActorAliasParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventReception__InstanceAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventReceptionAccess().getInstanceEventDeclarationCrossReference_0_0_0()); }
(
{ before(grammarAccess.getEventReceptionAccess().getInstanceEventDeclarationIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEventReceptionAccess().getInstanceEventDeclarationIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getEventReceptionAccess().getInstanceEventDeclarationCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventReception__SourceAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventReceptionAccess().getSourceComponentParserRuleCall_0_1_1_0()); }
	ruleComponent{ after(grammarAccess.getEventReceptionAccess().getSourceComponentParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventReception__BaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventReceptionAccess().getBaseInitKeyword_1_0()); }
(
{ before(grammarAccess.getEventReceptionAccess().getBaseInitKeyword_1_0()); }

	'init' 

{ after(grammarAccess.getEventReceptionAccess().getBaseInitKeyword_1_0()); }
)

{ after(grammarAccess.getEventReceptionAccess().getBaseInitKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__EventEmission__InstanceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventEmissionAccess().getInstanceEventDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getEventEmissionAccess().getInstanceEventDeclarationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEventEmissionAccess().getInstanceEventDeclarationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getEventEmissionAccess().getInstanceEventDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventEmission__DestinationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventEmissionAccess().getDestinationComponentParserRuleCall_1_1_0()); }
	ruleComponent{ after(grammarAccess.getEventEmissionAccess().getDestinationComponentParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowEmission__InstanceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowEmissionAccess().getInstanceFlowDeclarationCrossReference_0_0()); }
(
{ before(grammarAccess.getFlowEmissionAccess().getInstanceFlowDeclarationIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFlowEmissionAccess().getInstanceFlowDeclarationIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFlowEmissionAccess().getInstanceFlowDeclarationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowEmission__DestinationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowEmissionAccess().getDestinationComponentParserRuleCall_1_1_0()); }
	ruleComponent{ after(grammarAccess.getFlowEmissionAccess().getDestinationComponentParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getTypeDataTypeParserRuleCall_0_0()); }
	ruleDataType{ after(grammarAccess.getEventDeclarationAccess().getTypeDataTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEventDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__SourceAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getSourceAccessibleEntityParserRuleCall_3_1_0()); }
	ruleAccessibleEntity{ after(grammarAccess.getEventDeclarationAccess().getSourceAccessibleEntityParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__DestinationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventDeclarationAccess().getDestinationsAccessibleEntityParserRuleCall_4_1_0()); }
	ruleAccessibleEntity{ after(grammarAccess.getEventDeclarationAccess().getDestinationsAccessibleEntityParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getTypeDataTypeParserRuleCall_0_0()); }
	ruleDataType{ after(grammarAccess.getFlowDeclarationAccess().getTypeDataTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getFlowDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__SourceAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getSourceAccessibleEntityParserRuleCall_3_1_0()); }
	ruleAccessibleEntity{ after(grammarAccess.getFlowDeclarationAccess().getSourceAccessibleEntityParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FlowDeclaration__DestinationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowDeclarationAccess().getDestinationsAccessibleEntityParserRuleCall_4_1_0()); }
	ruleAccessibleEntity{ after(grammarAccess.getFlowDeclarationAccess().getDestinationsAccessibleEntityParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__CauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorDeclarationAccess().getCauseCauseParserRuleCall_0_0()); }
	ruleCause{ after(grammarAccess.getBehaviorDeclarationAccess().getCauseCauseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorDeclaration__EffectsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorDeclarationAccess().getEffectsEffectParserRuleCall_2_0()); }
	ruleEffect{ after(grammarAccess.getBehaviorDeclarationAccess().getEffectsEffectParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__EventAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getEventEventReceptionParserRuleCall_1_0()); }
	ruleEventReception{ after(grammarAccess.getOnCauseAccess().getEventEventReceptionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__GuardAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getGuardXExpressionParserRuleCall_2_1_0()); }
	ruleXExpression{ after(grammarAccess.getOnCauseAccess().getGuardXExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getConditionXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getWhenCauseAccess().getConditionXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__GuardAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getGuardXExpressionParserRuleCall_2_1_0()); }
	ruleXExpression{ after(grammarAccess.getWhenCauseAccess().getGuardXExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getTargetFlowEmissionParserRuleCall_1_0()); }
	ruleFlowEmission{ after(grammarAccess.getAlwaysEffectAccess().getTargetFlowEmissionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getValueXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getAlwaysEffectAccess().getValueXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getTargetFlowEmissionParserRuleCall_1_0()); }
	ruleFlowEmission{ after(grammarAccess.getSetEffectAccess().getTargetFlowEmissionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getValueXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getSetEffectAccess().getValueXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getTargetEventEmissionParserRuleCall_1_0()); }
	ruleEventEmission{ after(grammarAccess.getTriggerEffectAccess().getTargetEventEmissionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getValueXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getTriggerEffectAccess().getValueXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeCompoundDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeCompoundDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDataTypeCompoundDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeCompoundDeclaration__FieldsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeCompoundDeclarationAccess().getFieldsDataTypeCompoundFieldParserRuleCall_3_0()); }
	ruleDataTypeCompoundField{ after(grammarAccess.getDataTypeCompoundDeclarationAccess().getFieldsDataTypeCompoundFieldParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeCompoundField__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeCompoundFieldAccess().getTypeDataTypeParserRuleCall_0_0()); }
	ruleDataType{ after(grammarAccess.getDataTypeCompoundFieldAccess().getTypeDataTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeCompoundField__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeCompoundFieldAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDataTypeCompoundFieldAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getTypeDataTypeCompoundDeclarationCrossReference_0_1_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getTypeDataTypeCompoundDeclarationIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDataTypeAccess().getTypeDataTypeCompoundDeclarationIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getDataTypeAccess().getTypeDataTypeCompoundDeclarationCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getTypeDataTypeBaseParserRuleCall_1_1_0()); }
	ruleDataTypeBase{ after(grammarAccess.getDataTypeAccess().getTypeDataTypeBaseParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getFeatureOpOrParserRuleCall_1_0_0_1_0()); }
	ruleOpOr{ after(grammarAccess.getXOrExpressionAccess().getFeatureOpOrParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOrExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); }
	ruleXAndExpression{ after(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getFeatureOpAndParserRuleCall_1_0_0_1_0()); }
	ruleOpAnd{ after(grammarAccess.getXAndExpressionAccess().getFeatureOpAndParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAndExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); }
	ruleXEqualityExpression{ after(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getFeatureOpEqualityParserRuleCall_1_0_0_1_0()); }
	ruleOpEquality{ after(grammarAccess.getXEqualityExpressionAccess().getFeatureOpEqualityParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XEqualityExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); }
	ruleXRelationalExpression{ after(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getFeatureOpCompareParserRuleCall_1_0_0_1_0()); }
	ruleOpCompare{ after(grammarAccess.getXRelationalExpressionAccess().getFeatureOpCompareParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XRelationalExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_0()); }
	ruleXOtherOperatorExpression{ after(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureOpOtherParserRuleCall_1_0_0_1_0()); }
	ruleOpOther{ after(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureOpOtherParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XOtherOperatorExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); }
	ruleXAdditiveExpression{ after(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getFeatureOpAddParserRuleCall_1_0_0_1_0()); }
	ruleOpAdd{ after(grammarAccess.getXAdditiveExpressionAccess().getFeatureOpAddParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XAdditiveExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); }
	ruleXMultiplicativeExpression{ after(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureOpMultiParserRuleCall_1_0_0_1_0()); }
	ruleOpMulti{ after(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureOpMultiParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XMultiplicativeExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); }
	ruleXUnaryOperation{ after(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getFeatureOpUnaryParserRuleCall_0_1_0()); }
	ruleOpUnary{ after(grammarAccess.getXUnaryOperationAccess().getFeatureOpUnaryParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XUnaryOperation__OperandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); }
	ruleXUnaryOperation{ after(grammarAccess.getXUnaryOperationAccess().getOperandXUnaryOperationParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__ElementsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_2_0_0()); }
	ruleXExpression{ after(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSetLiteral__ElementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_2_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXSetLiteralAccess().getElementsXExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__ElementsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_2_0_0()); }
	ruleXExpression{ after(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XListLiteral__ElementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_2_1_1_0()); }
	ruleXExpression{ after(grammarAccess.getXListLiteralAccess().getElementsXExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__IfAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ThenAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XIfExpression__ElseAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); }
	ruleXExpression{ after(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__SwitchAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__CasesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_5_0()); }
	ruleXCasePart{ after(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XSwitchExpression__DefaultAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_6_2_0()); }
	ruleXExpression{ after(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__CaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_0()); }
	ruleXExpression{ after(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XCasePart__ThenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XForEachExpression__ForExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForEachExpressionAccess().getForExpressionXExpressionParserRuleCall_4_0()); }
	ruleXExpression{ after(grammarAccess.getXForEachExpressionAccess().getForExpressionXExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XForEachExpression__EachExpressionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXForEachExpressionAccess().getEachExpressionXExpressionParserRuleCall_6_0()); }
	ruleXExpression{ after(grammarAccess.getXForEachExpressionAccess().getEachExpressionXExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionCallExpression__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getFunctionBuiltInFunctionParserRuleCall_1_0()); }
	ruleBuiltInFunction{ after(grammarAccess.getXFunctionCallExpressionAccess().getFunctionBuiltInFunctionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionCallExpression__ArgumentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getArgumentsXExpressionParserRuleCall_3_0()); }
	ruleXExpression{ after(grammarAccess.getXFunctionCallExpressionAccess().getArgumentsXExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XFunctionCallExpression__ArgumentsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXFunctionCallExpressionAccess().getArgumentsXExpressionParserRuleCall_4_1_0()); }
	ruleXExpression{ after(grammarAccess.getXFunctionCallExpressionAccess().getArgumentsXExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XBooleanLiteral__IsTrueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
(
{ before(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }

	'true' 

{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

{ after(grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XNumberLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXNumberLiteralAccess().getValueNUMBERParserRuleCall_1_0()); }
	ruleNUMBER{ after(grammarAccess.getXNumberLiteralAccess().getValueNUMBERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XStringLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


