/*
* generated by Xtext
*/
package com.crubier.lil.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.crubier.lil.services.LilGrammarAccess;

public class LilParser extends AbstractContentAssistParser {
	
	@Inject
	private LilGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.crubier.lil.ui.contentassist.antlr.internal.InternalLilParser createParser() {
		com.crubier.lil.ui.contentassist.antlr.internal.InternalLilParser result = new com.crubier.lil.ui.contentassist.antlr.internal.InternalLilParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getLilModelAccess().getAlternatives(), "rule__LilModel__Alternatives");
					put(grammarAccess.getInteractorAccess().getAlternatives_3(), "rule__Interactor__Alternatives_3");
					put(grammarAccess.getAccessibleEntityAccess().getAlternatives(), "rule__AccessibleEntity__Alternatives");
					put(grammarAccess.getGenericEntityAccess().getAlternatives(), "rule__GenericEntity__Alternatives");
					put(grammarAccess.getEntityAccess().getAlternatives(), "rule__Entity__Alternatives");
					put(grammarAccess.getSignalReceptionAccess().getAlternatives(), "rule__SignalReception__Alternatives");
					put(grammarAccess.getDefinitionSetAccess().getAlternatives(), "rule__DefinitionSet__Alternatives");
					put(grammarAccess.getSignalModeAccess().getAlternatives(), "rule__SignalMode__Alternatives");
					put(grammarAccess.getDataTypeAccess().getAlternatives(), "rule__DataType__Alternatives");
					put(grammarAccess.getDataTypeAccess().getModeAlternatives_1_1_0(), "rule__DataType__ModeAlternatives_1_1_0");
					put(grammarAccess.getTypeBaseAccess().getAlternatives(), "rule__TypeBase__Alternatives");
					put(grammarAccess.getCauseAccess().getAlternatives(), "rule__Cause__Alternatives");
					put(grammarAccess.getEffectAccess().getAlternatives(), "rule__Effect__Alternatives");
					put(grammarAccess.getOpEqualityAccess().getAlternatives(), "rule__OpEquality__Alternatives");
					put(grammarAccess.getOpCompareAccess().getAlternatives(), "rule__OpCompare__Alternatives");
					put(grammarAccess.getOpOtherAccess().getAlternatives(), "rule__OpOther__Alternatives");
					put(grammarAccess.getOpAddAccess().getAlternatives(), "rule__OpAdd__Alternatives");
					put(grammarAccess.getOpMultiAccess().getAlternatives(), "rule__OpMulti__Alternatives");
					put(grammarAccess.getUnaryOperationAccess().getAlternatives(), "rule__UnaryOperation__Alternatives");
					put(grammarAccess.getOpUnaryAccess().getAlternatives(), "rule__OpUnary__Alternatives");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getCollectionLiteralAccess().getAlternatives(), "rule__CollectionLiteral__Alternatives");
					put(grammarAccess.getBuiltInFunctionAccess().getAlternatives(), "rule__BuiltInFunction__Alternatives");
					put(grammarAccess.getBooleanLiteralAccess().getAlternatives_1(), "rule__BooleanLiteral__Alternatives_1");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives(), "rule__TimeLiteral__Alternatives");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives_1_5_1(), "rule__TimeLiteral__Alternatives_1_5_1");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives_1_6_1(), "rule__TimeLiteral__Alternatives_1_6_1");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives_2_4_1(), "rule__TimeLiteral__Alternatives_2_4_1");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives_2_5_1(), "rule__TimeLiteral__Alternatives_2_5_1");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives_3_3_1(), "rule__TimeLiteral__Alternatives_3_3_1");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives_3_4_1(), "rule__TimeLiteral__Alternatives_3_4_1");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives_4_2_1(), "rule__TimeLiteral__Alternatives_4_2_1");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives_4_3_1(), "rule__TimeLiteral__Alternatives_4_3_1");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives_5_1_1(), "rule__TimeLiteral__Alternatives_5_1_1");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives_5_2_1(), "rule__TimeLiteral__Alternatives_5_2_1");
					put(grammarAccess.getTimeLiteralAccess().getAlternatives_6_1_1(), "rule__TimeLiteral__Alternatives_6_1_1");
					put(grammarAccess.getInteractorAccess().getGroup(), "rule__Interactor__Group__0");
					put(grammarAccess.getActorAccess().getGroup(), "rule__Actor__Group__0");
					put(grammarAccess.getActorAliasAccess().getGroup(), "rule__ActorAlias__Group__0");
					put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
					put(grammarAccess.getComponentAccess().getGroup_3(), "rule__Component__Group_3__0");
					put(grammarAccess.getComponentAccess().getGroup_3_2(), "rule__Component__Group_3_2__0");
					put(grammarAccess.getSignalReceptionAccess().getGroup_0(), "rule__SignalReception__Group_0__0");
					put(grammarAccess.getSignalReceptionAccess().getGroup_0_1(), "rule__SignalReception__Group_0_1__0");
					put(grammarAccess.getSignalEmissionAccess().getGroup(), "rule__SignalEmission__Group__0");
					put(grammarAccess.getSignalEmissionAccess().getGroup_1(), "rule__SignalEmission__Group_1__0");
					put(grammarAccess.getSignalAccess().getGroup(), "rule__Signal__Group__0");
					put(grammarAccess.getSignalAccess().getGroup_4(), "rule__Signal__Group_4__0");
					put(grammarAccess.getSignalAccess().getGroup_5(), "rule__Signal__Group_5__0");
					put(grammarAccess.getDefinitionSetAccess().getGroup_0(), "rule__DefinitionSet__Group_0__0");
					put(grammarAccess.getDefinitionSetAccess().getGroup_0_3(), "rule__DefinitionSet__Group_0_3__0");
					put(grammarAccess.getDefinitionSetAccess().getGroup_1(), "rule__DefinitionSet__Group_1__0");
					put(grammarAccess.getDefinitionSetAccess().getGroup_1_3(), "rule__DefinitionSet__Group_1_3__0");
					put(grammarAccess.getDefinitionSetAccess().getGroup_2(), "rule__DefinitionSet__Group_2__0");
					put(grammarAccess.getSignalAliasAccess().getGroup(), "rule__SignalAlias__Group__0");
					put(grammarAccess.getSignalAliasAccess().getGroup_1(), "rule__SignalAlias__Group_1__0");
					put(grammarAccess.getDataTypeAccess().getGroup_0(), "rule__DataType__Group_0__0");
					put(grammarAccess.getDataTypeAccess().getGroup_0_2(), "rule__DataType__Group_0_2__0");
					put(grammarAccess.getDataTypeAccess().getGroup_1(), "rule__DataType__Group_1__0");
					put(grammarAccess.getDataTypeAccess().getGroup_1_4(), "rule__DataType__Group_1_4__0");
					put(grammarAccess.getDataTypeAccess().getGroup_2(), "rule__DataType__Group_2__0");
					put(grammarAccess.getDataTypeStructureAccess().getGroup(), "rule__DataTypeStructure__Group__0");
					put(grammarAccess.getDataTypeStructureFieldAccess().getGroup(), "rule__DataTypeStructureField__Group__0");
					put(grammarAccess.getBehaviorAccess().getGroup(), "rule__Behavior__Group__0");
					put(grammarAccess.getOnCauseAccess().getGroup(), "rule__OnCause__Group__0");
					put(grammarAccess.getOnCauseAccess().getGroup_2(), "rule__OnCause__Group_2__0");
					put(grammarAccess.getWhenCauseAccess().getGroup(), "rule__WhenCause__Group__0");
					put(grammarAccess.getWhenCauseAccess().getGroup_2(), "rule__WhenCause__Group_2__0");
					put(grammarAccess.getAlwaysEffectAccess().getGroup(), "rule__AlwaysEffect__Group__0");
					put(grammarAccess.getSetEffectAccess().getGroup(), "rule__SetEffect__Group__0");
					put(grammarAccess.getTriggerEffectAccess().getGroup(), "rule__TriggerEffect__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1_0(), "rule__OrExpression__Group_1_0__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1_0_0(), "rule__OrExpression__Group_1_0_0__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1_0(), "rule__AndExpression__Group_1_0__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1_0_0(), "rule__AndExpression__Group_1_0_0__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup(), "rule__EqualityExpression__Group__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1(), "rule__EqualityExpression__Group_1__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1_0(), "rule__EqualityExpression__Group_1_0__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0(), "rule__EqualityExpression__Group_1_0_0__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_0(), "rule__RelationalExpression__Group_1_0__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0(), "rule__RelationalExpression__Group_1_0_0__0");
					put(grammarAccess.getOtherOperatorExpressionAccess().getGroup(), "rule__OtherOperatorExpression__Group__0");
					put(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1(), "rule__OtherOperatorExpression__Group_1__0");
					put(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0(), "rule__OtherOperatorExpression__Group_1_0__0");
					put(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0_0(), "rule__OtherOperatorExpression__Group_1_0_0__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0(), "rule__AdditiveExpression__Group_1_0__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0(), "rule__AdditiveExpression__Group_1_0_0__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0(), "rule__MultiplicativeExpression__Group_1_0__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0(), "rule__MultiplicativeExpression__Group_1_0_0__0");
					put(grammarAccess.getUnaryOperationAccess().getGroup_0(), "rule__UnaryOperation__Group_0__0");
					put(grammarAccess.getLiteralAccess().getGroup_6(), "rule__Literal__Group_6__0");
					put(grammarAccess.getLiteralAccess().getGroup_7(), "rule__Literal__Group_7__0");
					put(grammarAccess.getSetLiteralAccess().getGroup(), "rule__SetLiteral__Group__0");
					put(grammarAccess.getSetLiteralAccess().getGroup_2(), "rule__SetLiteral__Group_2__0");
					put(grammarAccess.getSetLiteralAccess().getGroup_2_1(), "rule__SetLiteral__Group_2_1__0");
					put(grammarAccess.getListLiteralAccess().getGroup(), "rule__ListLiteral__Group__0");
					put(grammarAccess.getListLiteralAccess().getGroup_2(), "rule__ListLiteral__Group_2__0");
					put(grammarAccess.getListLiteralAccess().getGroup_2_1(), "rule__ListLiteral__Group_2_1__0");
					put(grammarAccess.getParenthesizedExpressionAccess().getGroup(), "rule__ParenthesizedExpression__Group__0");
					put(grammarAccess.getIfExpressionAccess().getGroup(), "rule__IfExpression__Group__0");
					put(grammarAccess.getIfExpressionAccess().getGroup_6(), "rule__IfExpression__Group_6__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup(), "rule__SwitchExpression__Group__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup_6(), "rule__SwitchExpression__Group_6__0");
					put(grammarAccess.getCasePartAccess().getGroup(), "rule__CasePart__Group__0");
					put(grammarAccess.getForEachExpressionAccess().getGroup(), "rule__ForEachExpression__Group__0");
					put(grammarAccess.getFunctionCallExpressionAccess().getGroup(), "rule__FunctionCallExpression__Group__0");
					put(grammarAccess.getFunctionCallExpressionAccess().getGroup_4(), "rule__FunctionCallExpression__Group_4__0");
					put(grammarAccess.getBooleanLiteralAccess().getGroup(), "rule__BooleanLiteral__Group__0");
					put(grammarAccess.getNullLiteralAccess().getGroup(), "rule__NullLiteral__Group__0");
					put(grammarAccess.getNumberLiteralAccess().getGroup(), "rule__NumberLiteral__Group__0");
					put(grammarAccess.getStringLiteralAccess().getGroup(), "rule__StringLiteral__Group__0");
					put(grammarAccess.getEnumElementAccess().getGroup(), "rule__EnumElement__Group__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_0(), "rule__TimeLiteral__Group_0__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_1(), "rule__TimeLiteral__Group_1__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_1_1(), "rule__TimeLiteral__Group_1_1__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_1_2(), "rule__TimeLiteral__Group_1_2__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_1_3(), "rule__TimeLiteral__Group_1_3__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_1_4(), "rule__TimeLiteral__Group_1_4__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_1_5(), "rule__TimeLiteral__Group_1_5__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_1_6(), "rule__TimeLiteral__Group_1_6__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_2(), "rule__TimeLiteral__Group_2__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_2_1(), "rule__TimeLiteral__Group_2_1__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_2_2(), "rule__TimeLiteral__Group_2_2__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_2_3(), "rule__TimeLiteral__Group_2_3__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_2_4(), "rule__TimeLiteral__Group_2_4__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_2_5(), "rule__TimeLiteral__Group_2_5__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_3(), "rule__TimeLiteral__Group_3__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_3_1(), "rule__TimeLiteral__Group_3_1__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_3_2(), "rule__TimeLiteral__Group_3_2__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_3_3(), "rule__TimeLiteral__Group_3_3__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_3_4(), "rule__TimeLiteral__Group_3_4__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_4(), "rule__TimeLiteral__Group_4__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_4_1(), "rule__TimeLiteral__Group_4_1__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_4_2(), "rule__TimeLiteral__Group_4_2__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_4_3(), "rule__TimeLiteral__Group_4_3__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_5(), "rule__TimeLiteral__Group_5__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_5_1(), "rule__TimeLiteral__Group_5_1__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_5_2(), "rule__TimeLiteral__Group_5_2__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_6(), "rule__TimeLiteral__Group_6__0");
					put(grammarAccess.getTimeLiteralAccess().getGroup_6_1(), "rule__TimeLiteral__Group_6_1__0");
					put(grammarAccess.getNUMBERAccess().getGroup(), "rule__NUMBER__Group__0");
					put(grammarAccess.getNUMBERAccess().getGroup_1(), "rule__NUMBER__Group_1__0");
					put(grammarAccess.getLilModelAccess().getInteractorsAssignment_0(), "rule__LilModel__InteractorsAssignment_0");
					put(grammarAccess.getLilModelAccess().getDataTypesAssignment_1(), "rule__LilModel__DataTypesAssignment_1");
					put(grammarAccess.getInteractorAccess().getNameAssignment_1(), "rule__Interactor__NameAssignment_1");
					put(grammarAccess.getInteractorAccess().getEntitiesAssignment_3_0(), "rule__Interactor__EntitiesAssignment_3_0");
					put(grammarAccess.getInteractorAccess().getSignalsAssignment_3_1(), "rule__Interactor__SignalsAssignment_3_1");
					put(grammarAccess.getInteractorAccess().getBehaviorsAssignment_3_2(), "rule__Interactor__BehaviorsAssignment_3_2");
					put(grammarAccess.getAccessibleEntityAccess().getGenericAssignment_0(), "rule__AccessibleEntity__GenericAssignment_0");
					put(grammarAccess.getAccessibleEntityAccess().getSpecificAssignment_1(), "rule__AccessibleEntity__SpecificAssignment_1");
					put(grammarAccess.getActorAccess().getNameAssignment_0(), "rule__Actor__NameAssignment_0");
					put(grammarAccess.getActorAliasAccess().getSourceAssignment_0(), "rule__ActorAlias__SourceAssignment_0");
					put(grammarAccess.getActorAliasAccess().getAliasAssignment_2(), "rule__ActorAlias__AliasAssignment_2");
					put(grammarAccess.getComponentAccess().getNameAssignment_0(), "rule__Component__NameAssignment_0");
					put(grammarAccess.getComponentAccess().getInteractorAssignment_2(), "rule__Component__InteractorAssignment_2");
					put(grammarAccess.getComponentAccess().getActorsAssignment_3_1(), "rule__Component__ActorsAssignment_3_1");
					put(grammarAccess.getComponentAccess().getActorsAssignment_3_2_1(), "rule__Component__ActorsAssignment_3_2_1");
					put(grammarAccess.getSignalReceptionAccess().getInstanceAssignment_0_0(), "rule__SignalReception__InstanceAssignment_0_0");
					put(grammarAccess.getSignalReceptionAccess().getSourceAssignment_0_1_1(), "rule__SignalReception__SourceAssignment_0_1_1");
					put(grammarAccess.getSignalReceptionAccess().getInitAssignment_1(), "rule__SignalReception__InitAssignment_1");
					put(grammarAccess.getSignalEmissionAccess().getInstanceAssignment_0(), "rule__SignalEmission__InstanceAssignment_0");
					put(grammarAccess.getSignalEmissionAccess().getDestinationAssignment_1_1(), "rule__SignalEmission__DestinationAssignment_1_1");
					put(grammarAccess.getSignalAccess().getNameAssignment_0(), "rule__Signal__NameAssignment_0");
					put(grammarAccess.getSignalAccess().getTypeAssignment_2(), "rule__Signal__TypeAssignment_2");
					put(grammarAccess.getSignalAccess().getModeAssignment_3(), "rule__Signal__ModeAssignment_3");
					put(grammarAccess.getSignalAccess().getSourceAssignment_4_1(), "rule__Signal__SourceAssignment_4_1");
					put(grammarAccess.getSignalAccess().getDestinationsAssignment_5_1(), "rule__Signal__DestinationsAssignment_5_1");
					put(grammarAccess.getDefinitionSetAccess().getElementsAssignment_0_2(), "rule__DefinitionSet__ElementsAssignment_0_2");
					put(grammarAccess.getDefinitionSetAccess().getElementsAssignment_0_3_1(), "rule__DefinitionSet__ElementsAssignment_0_3_1");
					put(grammarAccess.getDefinitionSetAccess().getElementsAssignment_1_2(), "rule__DefinitionSet__ElementsAssignment_1_2");
					put(grammarAccess.getDefinitionSetAccess().getElementsAssignment_1_3_1(), "rule__DefinitionSet__ElementsAssignment_1_3_1");
					put(grammarAccess.getDefinitionSetAccess().getInfAssignment_2_2(), "rule__DefinitionSet__InfAssignment_2_2");
					put(grammarAccess.getDefinitionSetAccess().getSupAssignment_2_4(), "rule__DefinitionSet__SupAssignment_2_4");
					put(grammarAccess.getSignalAliasAccess().getSourceAssignment_0(), "rule__SignalAlias__SourceAssignment_0");
					put(grammarAccess.getSignalAliasAccess().getAliasAssignment_1_1(), "rule__SignalAlias__AliasAssignment_1_1");
					put(grammarAccess.getDataTypeAccess().getTypeAssignment_0_1(), "rule__DataType__TypeAssignment_0_1");
					put(grammarAccess.getDataTypeAccess().getDefinitionSetAssignment_0_2_1(), "rule__DataType__DefinitionSetAssignment_0_2_1");
					put(grammarAccess.getDataTypeAccess().getModeAssignment_1_1(), "rule__DataType__ModeAssignment_1_1");
					put(grammarAccess.getDataTypeAccess().getTypeAssignment_1_3(), "rule__DataType__TypeAssignment_1_3");
					put(grammarAccess.getDataTypeAccess().getDefinitionSetAssignment_1_4_1(), "rule__DataType__DefinitionSetAssignment_1_4_1");
					put(grammarAccess.getDataTypeAccess().getCompoundAssignment_2_1(), "rule__DataType__CompoundAssignment_2_1");
					put(grammarAccess.getDataTypeStructureAccess().getNameAssignment_1(), "rule__DataTypeStructure__NameAssignment_1");
					put(grammarAccess.getDataTypeStructureAccess().getFieldsAssignment_3(), "rule__DataTypeStructure__FieldsAssignment_3");
					put(grammarAccess.getDataTypeStructureFieldAccess().getNameAssignment_0(), "rule__DataTypeStructureField__NameAssignment_0");
					put(grammarAccess.getDataTypeStructureFieldAccess().getTypeAssignment_2(), "rule__DataTypeStructureField__TypeAssignment_2");
					put(grammarAccess.getBehaviorAccess().getCauseAssignment_0(), "rule__Behavior__CauseAssignment_0");
					put(grammarAccess.getBehaviorAccess().getEffectsAssignment_2(), "rule__Behavior__EffectsAssignment_2");
					put(grammarAccess.getOnCauseAccess().getEventAssignment_1(), "rule__OnCause__EventAssignment_1");
					put(grammarAccess.getOnCauseAccess().getGuardAssignment_2_1(), "rule__OnCause__GuardAssignment_2_1");
					put(grammarAccess.getWhenCauseAccess().getConditionAssignment_1(), "rule__WhenCause__ConditionAssignment_1");
					put(grammarAccess.getWhenCauseAccess().getGuardAssignment_2_1(), "rule__WhenCause__GuardAssignment_2_1");
					put(grammarAccess.getAlwaysEffectAccess().getTargetAssignment_1(), "rule__AlwaysEffect__TargetAssignment_1");
					put(grammarAccess.getAlwaysEffectAccess().getValueAssignment_3(), "rule__AlwaysEffect__ValueAssignment_3");
					put(grammarAccess.getSetEffectAccess().getTargetAssignment_1(), "rule__SetEffect__TargetAssignment_1");
					put(grammarAccess.getSetEffectAccess().getValueAssignment_3(), "rule__SetEffect__ValueAssignment_3");
					put(grammarAccess.getTriggerEffectAccess().getTargetAssignment_1(), "rule__TriggerEffect__TargetAssignment_1");
					put(grammarAccess.getTriggerEffectAccess().getValueAssignment_3(), "rule__TriggerEffect__ValueAssignment_3");
					put(grammarAccess.getOrExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__OrExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getOrExpressionAccess().getRightOperandAssignment_1_1(), "rule__OrExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getAndExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__AndExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getAndExpressionAccess().getRightOperandAssignment_1_1(), "rule__AndExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getEqualityExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__EqualityExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getEqualityExpressionAccess().getRightOperandAssignment_1_1(), "rule__EqualityExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getRelationalExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__RelationalExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getRelationalExpressionAccess().getRightOperandAssignment_1_1(), "rule__RelationalExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__OtherOperatorExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getOtherOperatorExpressionAccess().getRightOperandAssignment_1_1(), "rule__OtherOperatorExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__AdditiveExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getAdditiveExpressionAccess().getRightOperandAssignment_1_1(), "rule__AdditiveExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1(), "rule__MultiplicativeExpression__FeatureAssignment_1_0_0_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandAssignment_1_1(), "rule__MultiplicativeExpression__RightOperandAssignment_1_1");
					put(grammarAccess.getUnaryOperationAccess().getFeatureAssignment_0_1(), "rule__UnaryOperation__FeatureAssignment_0_1");
					put(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_2(), "rule__UnaryOperation__OperandAssignment_0_2");
					put(grammarAccess.getLiteralAccess().getElementAssignment_6_2(), "rule__Literal__ElementAssignment_6_2");
					put(grammarAccess.getLiteralAccess().getSignalAssignment_7_1(), "rule__Literal__SignalAssignment_7_1");
					put(grammarAccess.getSetLiteralAccess().getElementsAssignment_2_0(), "rule__SetLiteral__ElementsAssignment_2_0");
					put(grammarAccess.getSetLiteralAccess().getElementsAssignment_2_1_1(), "rule__SetLiteral__ElementsAssignment_2_1_1");
					put(grammarAccess.getListLiteralAccess().getElementsAssignment_2_0(), "rule__ListLiteral__ElementsAssignment_2_0");
					put(grammarAccess.getListLiteralAccess().getElementsAssignment_2_1_1(), "rule__ListLiteral__ElementsAssignment_2_1_1");
					put(grammarAccess.getIfExpressionAccess().getIfAssignment_3(), "rule__IfExpression__IfAssignment_3");
					put(grammarAccess.getIfExpressionAccess().getThenAssignment_5(), "rule__IfExpression__ThenAssignment_5");
					put(grammarAccess.getIfExpressionAccess().getElseAssignment_6_1(), "rule__IfExpression__ElseAssignment_6_1");
					put(grammarAccess.getSwitchExpressionAccess().getSwitchAssignment_3(), "rule__SwitchExpression__SwitchAssignment_3");
					put(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_5(), "rule__SwitchExpression__CasesAssignment_5");
					put(grammarAccess.getSwitchExpressionAccess().getDefaultAssignment_6_2(), "rule__SwitchExpression__DefaultAssignment_6_2");
					put(grammarAccess.getCasePartAccess().getCaseAssignment_1(), "rule__CasePart__CaseAssignment_1");
					put(grammarAccess.getCasePartAccess().getThenAssignment_3(), "rule__CasePart__ThenAssignment_3");
					put(grammarAccess.getForEachExpressionAccess().getForExpressionAssignment_4(), "rule__ForEachExpression__ForExpressionAssignment_4");
					put(grammarAccess.getForEachExpressionAccess().getEachExpressionAssignment_6(), "rule__ForEachExpression__EachExpressionAssignment_6");
					put(grammarAccess.getFunctionCallExpressionAccess().getFunctionAssignment_1(), "rule__FunctionCallExpression__FunctionAssignment_1");
					put(grammarAccess.getFunctionCallExpressionAccess().getArgumentsAssignment_3(), "rule__FunctionCallExpression__ArgumentsAssignment_3");
					put(grammarAccess.getFunctionCallExpressionAccess().getArgumentsAssignment_4_1(), "rule__FunctionCallExpression__ArgumentsAssignment_4_1");
					put(grammarAccess.getBooleanLiteralAccess().getIsTrueAssignment_1_1(), "rule__BooleanLiteral__IsTrueAssignment_1_1");
					put(grammarAccess.getNumberLiteralAccess().getValueAssignment_1(), "rule__NumberLiteral__ValueAssignment_1");
					put(grammarAccess.getStringLiteralAccess().getValueAssignment_1(), "rule__StringLiteral__ValueAssignment_1");
					put(grammarAccess.getEnumElementAccess().getNameAssignment_2(), "rule__EnumElement__NameAssignment_2");
					put(grammarAccess.getTimeLiteralAccess().getYearAssignment_1_1_0(), "rule__TimeLiteral__YearAssignment_1_1_0");
					put(grammarAccess.getTimeLiteralAccess().getMonthAssignment_1_2_0(), "rule__TimeLiteral__MonthAssignment_1_2_0");
					put(grammarAccess.getTimeLiteralAccess().getDayAssignment_1_3_0(), "rule__TimeLiteral__DayAssignment_1_3_0");
					put(grammarAccess.getTimeLiteralAccess().getHourAssignment_1_4_0(), "rule__TimeLiteral__HourAssignment_1_4_0");
					put(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_1_5_0(), "rule__TimeLiteral__MinuteAssignment_1_5_0");
					put(grammarAccess.getTimeLiteralAccess().getSecondAssignment_1_6_0(), "rule__TimeLiteral__SecondAssignment_1_6_0");
					put(grammarAccess.getTimeLiteralAccess().getMonthAssignment_2_1_0(), "rule__TimeLiteral__MonthAssignment_2_1_0");
					put(grammarAccess.getTimeLiteralAccess().getDayAssignment_2_2_0(), "rule__TimeLiteral__DayAssignment_2_2_0");
					put(grammarAccess.getTimeLiteralAccess().getHourAssignment_2_3_0(), "rule__TimeLiteral__HourAssignment_2_3_0");
					put(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_2_4_0(), "rule__TimeLiteral__MinuteAssignment_2_4_0");
					put(grammarAccess.getTimeLiteralAccess().getSecondAssignment_2_5_0(), "rule__TimeLiteral__SecondAssignment_2_5_0");
					put(grammarAccess.getTimeLiteralAccess().getDayAssignment_3_1_0(), "rule__TimeLiteral__DayAssignment_3_1_0");
					put(grammarAccess.getTimeLiteralAccess().getHourAssignment_3_2_0(), "rule__TimeLiteral__HourAssignment_3_2_0");
					put(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_3_3_0(), "rule__TimeLiteral__MinuteAssignment_3_3_0");
					put(grammarAccess.getTimeLiteralAccess().getSecondAssignment_3_4_0(), "rule__TimeLiteral__SecondAssignment_3_4_0");
					put(grammarAccess.getTimeLiteralAccess().getHourAssignment_4_1_0(), "rule__TimeLiteral__HourAssignment_4_1_0");
					put(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_4_2_0(), "rule__TimeLiteral__MinuteAssignment_4_2_0");
					put(grammarAccess.getTimeLiteralAccess().getSecondAssignment_4_3_0(), "rule__TimeLiteral__SecondAssignment_4_3_0");
					put(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_5_1_0(), "rule__TimeLiteral__MinuteAssignment_5_1_0");
					put(grammarAccess.getTimeLiteralAccess().getSecondAssignment_5_2_0(), "rule__TimeLiteral__SecondAssignment_5_2_0");
					put(grammarAccess.getTimeLiteralAccess().getSecondAssignment_6_1_0(), "rule__TimeLiteral__SecondAssignment_6_1_0");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.crubier.lil.ui.contentassist.antlr.internal.InternalLilParser typedParser = (com.crubier.lil.ui.contentassist.antlr.internal.InternalLilParser) parser;
			typedParser.entryRuleLilModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public LilGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(LilGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
