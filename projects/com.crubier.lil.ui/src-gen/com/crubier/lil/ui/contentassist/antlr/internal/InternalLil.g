/*
* generated by Xtext
*/
grammar InternalLil;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package com.crubier.lil.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.crubier.lil.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.crubier.lil.services.LilGrammarAccess;

}

@parser::members {
 
 	private LilGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LilGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleLilModel
entryRuleLilModel 
:
{ before(grammarAccess.getLilModelRule()); }
	 ruleLilModel
{ after(grammarAccess.getLilModelRule()); } 
	 EOF 
;

// Rule LilModel
ruleLilModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLilModelAccess().getAlternatives()); }
(rule__LilModel__Alternatives)*
{ after(grammarAccess.getLilModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteractor
entryRuleInteractor 
:
{ before(grammarAccess.getInteractorRule()); }
	 ruleInteractor
{ after(grammarAccess.getInteractorRule()); } 
	 EOF 
;

// Rule Interactor
ruleInteractor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteractorAccess().getGroup()); }
(rule__Interactor__Group__0)
{ after(grammarAccess.getInteractorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccessibleEntity
entryRuleAccessibleEntity 
:
{ before(grammarAccess.getAccessibleEntityRule()); }
	 ruleAccessibleEntity
{ after(grammarAccess.getAccessibleEntityRule()); } 
	 EOF 
;

// Rule AccessibleEntity
ruleAccessibleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccessibleEntityAccess().getAlternatives()); }
(rule__AccessibleEntity__Alternatives)
{ after(grammarAccess.getAccessibleEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGenericEntity
entryRuleGenericEntity 
:
{ before(grammarAccess.getGenericEntityRule()); }
	 ruleGenericEntity
{ after(grammarAccess.getGenericEntityRule()); } 
	 EOF 
;

// Rule GenericEntity
ruleGenericEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGenericEntityAccess().getAlternatives()); }
(rule__GenericEntity__Alternatives)
{ after(grammarAccess.getGenericEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getAlternatives()); }
(rule__Entity__Alternatives)
{ after(grammarAccess.getEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActor
entryRuleActor 
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorAccess().getGroup()); }
(rule__Actor__Group__0)
{ after(grammarAccess.getActorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActorAlias
entryRuleActorAlias 
:
{ before(grammarAccess.getActorAliasRule()); }
	 ruleActorAlias
{ after(grammarAccess.getActorAliasRule()); } 
	 EOF 
;

// Rule ActorAlias
ruleActorAlias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActorAliasAccess().getGroup()); }
(rule__ActorAlias__Group__0)
{ after(grammarAccess.getActorAliasAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponent
entryRuleComponent 
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentAccess().getGroup()); }
(rule__Component__Group__0)
{ after(grammarAccess.getComponentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalReception
entryRuleSignalReception 
:
{ before(grammarAccess.getSignalReceptionRule()); }
	 ruleSignalReception
{ after(grammarAccess.getSignalReceptionRule()); } 
	 EOF 
;

// Rule SignalReception
ruleSignalReception
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalReceptionAccess().getAlternatives()); }
(rule__SignalReception__Alternatives)
{ after(grammarAccess.getSignalReceptionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalEmission
entryRuleSignalEmission 
:
{ before(grammarAccess.getSignalEmissionRule()); }
	 ruleSignalEmission
{ after(grammarAccess.getSignalEmissionRule()); } 
	 EOF 
;

// Rule SignalEmission
ruleSignalEmission
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalEmissionAccess().getGroup()); }
(rule__SignalEmission__Group__0)
{ after(grammarAccess.getSignalEmissionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignal
entryRuleSignal 
:
{ before(grammarAccess.getSignalRule()); }
	 ruleSignal
{ after(grammarAccess.getSignalRule()); } 
	 EOF 
;

// Rule Signal
ruleSignal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalAccess().getGroup()); }
(rule__Signal__Group__0)
{ after(grammarAccess.getSignalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinitionSet
entryRuleDefinitionSet 
:
{ before(grammarAccess.getDefinitionSetRule()); }
	 ruleDefinitionSet
{ after(grammarAccess.getDefinitionSetRule()); } 
	 EOF 
;

// Rule DefinitionSet
ruleDefinitionSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionSetAccess().getAlternatives()); }
(rule__DefinitionSet__Alternatives)
{ after(grammarAccess.getDefinitionSetAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalAlias
entryRuleSignalAlias 
:
{ before(grammarAccess.getSignalAliasRule()); }
	 ruleSignalAlias
{ after(grammarAccess.getSignalAliasRule()); } 
	 EOF 
;

// Rule SignalAlias
ruleSignalAlias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalAliasAccess().getGroup()); }
(rule__SignalAlias__Group__0)
{ after(grammarAccess.getSignalAliasAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalMode
entryRuleSignalMode 
:
{ before(grammarAccess.getSignalModeRule()); }
	 ruleSignalMode
{ after(grammarAccess.getSignalModeRule()); } 
	 EOF 
;

// Rule SignalMode
ruleSignalMode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalModeAccess().getAlternatives()); }
(rule__SignalMode__Alternatives)
{ after(grammarAccess.getSignalModeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeBase
entryRuleTypeBase 
:
{ before(grammarAccess.getTypeBaseRule()); }
	 ruleTypeBase
{ after(grammarAccess.getTypeBaseRule()); } 
	 EOF 
;

// Rule TypeBase
ruleTypeBase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeBaseAccess().getAlternatives()); }
(rule__TypeBase__Alternatives)
{ after(grammarAccess.getTypeBaseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDefinition
entryRuleDataTypeDefinition 
:
{ before(grammarAccess.getDataTypeDefinitionRule()); }
	 ruleDataTypeDefinition
{ after(grammarAccess.getDataTypeDefinitionRule()); } 
	 EOF 
;

// Rule DataTypeDefinition
ruleDataTypeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getDataTypeStructureParserRuleCall()); }
	ruleDataTypeStructure
{ after(grammarAccess.getDataTypeDefinitionAccess().getDataTypeStructureParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeStructure
entryRuleDataTypeStructure 
:
{ before(grammarAccess.getDataTypeStructureRule()); }
	 ruleDataTypeStructure
{ after(grammarAccess.getDataTypeStructureRule()); } 
	 EOF 
;

// Rule DataTypeStructure
ruleDataTypeStructure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeStructureAccess().getGroup()); }
(rule__DataTypeStructure__Group__0)
{ after(grammarAccess.getDataTypeStructureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeStructureField
entryRuleDataTypeStructureField 
:
{ before(grammarAccess.getDataTypeStructureFieldRule()); }
	 ruleDataTypeStructureField
{ after(grammarAccess.getDataTypeStructureFieldRule()); } 
	 EOF 
;

// Rule DataTypeStructureField
ruleDataTypeStructureField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeStructureFieldAccess().getGroup()); }
(rule__DataTypeStructureField__Group__0)
{ after(grammarAccess.getDataTypeStructureFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBehavior
entryRuleBehavior 
:
{ before(grammarAccess.getBehaviorRule()); }
	 ruleBehavior
{ after(grammarAccess.getBehaviorRule()); } 
	 EOF 
;

// Rule Behavior
ruleBehavior
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBehaviorAccess().getGroup()); }
(rule__Behavior__Group__0)
{ after(grammarAccess.getBehaviorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCause
entryRuleCause 
:
{ before(grammarAccess.getCauseRule()); }
	 ruleCause
{ after(grammarAccess.getCauseRule()); } 
	 EOF 
;

// Rule Cause
ruleCause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCauseAccess().getAlternatives()); }
(rule__Cause__Alternatives)
{ after(grammarAccess.getCauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOnCause
entryRuleOnCause 
:
{ before(grammarAccess.getOnCauseRule()); }
	 ruleOnCause
{ after(grammarAccess.getOnCauseRule()); } 
	 EOF 
;

// Rule OnCause
ruleOnCause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOnCauseAccess().getGroup()); }
(rule__OnCause__Group__0)
{ after(grammarAccess.getOnCauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhenCause
entryRuleWhenCause 
:
{ before(grammarAccess.getWhenCauseRule()); }
	 ruleWhenCause
{ after(grammarAccess.getWhenCauseRule()); } 
	 EOF 
;

// Rule WhenCause
ruleWhenCause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhenCauseAccess().getGroup()); }
(rule__WhenCause__Group__0)
{ after(grammarAccess.getWhenCauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEffect
entryRuleEffect 
:
{ before(grammarAccess.getEffectRule()); }
	 ruleEffect
{ after(grammarAccess.getEffectRule()); } 
	 EOF 
;

// Rule Effect
ruleEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectAccess().getAlternatives()); }
(rule__Effect__Alternatives)
{ after(grammarAccess.getEffectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlwaysEffect
entryRuleAlwaysEffect 
:
{ before(grammarAccess.getAlwaysEffectRule()); }
	 ruleAlwaysEffect
{ after(grammarAccess.getAlwaysEffectRule()); } 
	 EOF 
;

// Rule AlwaysEffect
ruleAlwaysEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlwaysEffectAccess().getGroup()); }
(rule__AlwaysEffect__Group__0)
{ after(grammarAccess.getAlwaysEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetEffect
entryRuleSetEffect 
:
{ before(grammarAccess.getSetEffectRule()); }
	 ruleSetEffect
{ after(grammarAccess.getSetEffectRule()); } 
	 EOF 
;

// Rule SetEffect
ruleSetEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetEffectAccess().getGroup()); }
(rule__SetEffect__Group__0)
{ after(grammarAccess.getSetEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTriggerEffect
entryRuleTriggerEffect 
:
{ before(grammarAccess.getTriggerEffectRule()); }
	 ruleTriggerEffect
{ after(grammarAccess.getTriggerEffectRule()); } 
	 EOF 
;

// Rule TriggerEffect
ruleTriggerEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggerEffectAccess().getGroup()); }
(rule__TriggerEffect__Group__0)
{ after(grammarAccess.getTriggerEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall()); }
	ruleOrExpression
{ after(grammarAccess.getExpressionAccess().getOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOr
entryRuleOpOr 
:
{ before(grammarAccess.getOpOrRule()); }
	 ruleOpOr
{ after(grammarAccess.getOpOrRule()); } 
	 EOF 
;

// Rule OpOr
ruleOpOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOrAccess().getOrKeyword()); }

	'or' 

{ after(grammarAccess.getOpOrAccess().getOrKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAnd
entryRuleOpAnd 
:
{ before(grammarAccess.getOpAndRule()); }
	 ruleOpAnd
{ after(grammarAccess.getOpAndRule()); } 
	 EOF 
;

// Rule OpAnd
ruleOpAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAndAccess().getAndKeyword()); }

	'and' 

{ after(grammarAccess.getOpAndAccess().getAndKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression 
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpEquality
entryRuleOpEquality 
:
{ before(grammarAccess.getOpEqualityRule()); }
	 ruleOpEquality
{ after(grammarAccess.getOpEqualityRule()); } 
	 EOF 
;

// Rule OpEquality
ruleOpEquality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpEqualityAccess().getAlternatives()); }
(rule__OpEquality__Alternatives)
{ after(grammarAccess.getOpEqualityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpCompare
entryRuleOpCompare 
:
{ before(grammarAccess.getOpCompareRule()); }
	 ruleOpCompare
{ after(grammarAccess.getOpCompareRule()); } 
	 EOF 
;

// Rule OpCompare
ruleOpCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpCompareAccess().getAlternatives()); }
(rule__OpCompare__Alternatives)
{ after(grammarAccess.getOpCompareAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOtherOperatorExpression
entryRuleOtherOperatorExpression 
:
{ before(grammarAccess.getOtherOperatorExpressionRule()); }
	 ruleOtherOperatorExpression
{ after(grammarAccess.getOtherOperatorExpressionRule()); } 
	 EOF 
;

// Rule OtherOperatorExpression
ruleOtherOperatorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup()); }
(rule__OtherOperatorExpression__Group__0)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpOther
entryRuleOpOther 
:
{ before(grammarAccess.getOpOtherRule()); }
	 ruleOpOther
{ after(grammarAccess.getOpOtherRule()); } 
	 EOF 
;

// Rule OpOther
ruleOpOther
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpOtherAccess().getAlternatives()); }
(rule__OpOther__Alternatives)
{ after(grammarAccess.getOpOtherAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpAdd
entryRuleOpAdd 
:
{ before(grammarAccess.getOpAddRule()); }
	 ruleOpAdd
{ after(grammarAccess.getOpAddRule()); } 
	 EOF 
;

// Rule OpAdd
ruleOpAdd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpAddAccess().getAlternatives()); }
(rule__OpAdd__Alternatives)
{ after(grammarAccess.getOpAddAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpMulti
entryRuleOpMulti 
:
{ before(grammarAccess.getOpMultiRule()); }
	 ruleOpMulti
{ after(grammarAccess.getOpMultiRule()); } 
	 EOF 
;

// Rule OpMulti
ruleOpMulti
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpMultiAccess().getAlternatives()); }
(rule__OpMulti__Alternatives)
{ after(grammarAccess.getOpMultiAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOperation
entryRuleUnaryOperation 
:
{ before(grammarAccess.getUnaryOperationRule()); }
	 ruleUnaryOperation
{ after(grammarAccess.getUnaryOperationRule()); } 
	 EOF 
;

// Rule UnaryOperation
ruleUnaryOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOperationAccess().getAlternatives()); }
(rule__UnaryOperation__Alternatives)
{ after(grammarAccess.getUnaryOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpUnary
entryRuleOpUnary 
:
{ before(grammarAccess.getOpUnaryRule()); }
	 ruleOpUnary
{ after(grammarAccess.getOpUnaryRule()); } 
	 EOF 
;

// Rule OpUnary
ruleOpUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpUnaryAccess().getAlternatives()); }
(rule__OpUnary__Alternatives)
{ after(grammarAccess.getOpUnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCollectionLiteral
entryRuleCollectionLiteral 
:
{ before(grammarAccess.getCollectionLiteralRule()); }
	 ruleCollectionLiteral
{ after(grammarAccess.getCollectionLiteralRule()); } 
	 EOF 
;

// Rule CollectionLiteral
ruleCollectionLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCollectionLiteralAccess().getAlternatives()); }
(rule__CollectionLiteral__Alternatives)
{ after(grammarAccess.getCollectionLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetLiteral
entryRuleSetLiteral 
:
{ before(grammarAccess.getSetLiteralRule()); }
	 ruleSetLiteral
{ after(grammarAccess.getSetLiteralRule()); } 
	 EOF 
;

// Rule SetLiteral
ruleSetLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetLiteralAccess().getGroup()); }
(rule__SetLiteral__Group__0)
{ after(grammarAccess.getSetLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListLiteral
entryRuleListLiteral 
:
{ before(grammarAccess.getListLiteralRule()); }
	 ruleListLiteral
{ after(grammarAccess.getListLiteralRule()); } 
	 EOF 
;

// Rule ListLiteral
ruleListLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListLiteralAccess().getGroup()); }
(rule__ListLiteral__Group__0)
{ after(grammarAccess.getListLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression 
:
{ before(grammarAccess.getParenthesizedExpressionRule()); }
	 ruleParenthesizedExpression
{ after(grammarAccess.getParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
(rule__ParenthesizedExpression__Group__0)
{ after(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfExpression
entryRuleIfExpression 
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
(rule__IfExpression__Group__0)
{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchExpression
entryRuleSwitchExpression 
:
{ before(grammarAccess.getSwitchExpressionRule()); }
	 ruleSwitchExpression
{ after(grammarAccess.getSwitchExpressionRule()); } 
	 EOF 
;

// Rule SwitchExpression
ruleSwitchExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup()); }
(rule__SwitchExpression__Group__0)
{ after(grammarAccess.getSwitchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCasePart
entryRuleCasePart 
:
{ before(grammarAccess.getCasePartRule()); }
	 ruleCasePart
{ after(grammarAccess.getCasePartRule()); } 
	 EOF 
;

// Rule CasePart
ruleCasePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCasePartAccess().getGroup()); }
(rule__CasePart__Group__0)
{ after(grammarAccess.getCasePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForEachExpression
entryRuleForEachExpression 
:
{ before(grammarAccess.getForEachExpressionRule()); }
	 ruleForEachExpression
{ after(grammarAccess.getForEachExpressionRule()); } 
	 EOF 
;

// Rule ForEachExpression
ruleForEachExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForEachExpressionAccess().getGroup()); }
(rule__ForEachExpression__Group__0)
{ after(grammarAccess.getForEachExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCallExpression
entryRuleFunctionCallExpression 
:
{ before(grammarAccess.getFunctionCallExpressionRule()); }
	 ruleFunctionCallExpression
{ after(grammarAccess.getFunctionCallExpressionRule()); } 
	 EOF 
;

// Rule FunctionCallExpression
ruleFunctionCallExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getGroup()); }
(rule__FunctionCallExpression__Group__0)
{ after(grammarAccess.getFunctionCallExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuiltInFunction
entryRuleBuiltInFunction 
:
{ before(grammarAccess.getBuiltInFunctionRule()); }
	 ruleBuiltInFunction
{ after(grammarAccess.getBuiltInFunctionRule()); } 
	 EOF 
;

// Rule BuiltInFunction
ruleBuiltInFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuiltInFunctionAccess().getAlternatives()); }
(rule__BuiltInFunction__Alternatives)
{ after(grammarAccess.getBuiltInFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteral
entryRuleNullLiteral 
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullLiteralAccess().getGroup()); }
(rule__NullLiteral__Group__0)
{ after(grammarAccess.getNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral 
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLiteralAccess().getGroup()); }
(rule__NumberLiteral__Group__0)
{ after(grammarAccess.getNumberLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
(rule__StringLiteral__Group__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumElement
entryRuleEnumElement 
:
{ before(grammarAccess.getEnumElementRule()); }
	 ruleEnumElement
{ after(grammarAccess.getEnumElementRule()); } 
	 EOF 
;

// Rule EnumElement
ruleEnumElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumElementAccess().getGroup()); }
(rule__EnumElement__Group__0)
{ after(grammarAccess.getEnumElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeLiteral
entryRuleTimeLiteral 
:
{ before(grammarAccess.getTimeLiteralRule()); }
	 ruleTimeLiteral
{ after(grammarAccess.getTimeLiteralRule()); } 
	 EOF 
;

// Rule TimeLiteral
ruleTimeLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives()); }
(rule__TimeLiteral__Alternatives)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNUMBER
entryRuleNUMBER 
:
{ before(grammarAccess.getNUMBERRule()); }
	 ruleNUMBER
{ after(grammarAccess.getNUMBERRule()); } 
	 EOF 
;

// Rule NUMBER
ruleNUMBER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNUMBERAccess().getGroup()); }
(rule__NUMBER__Group__0)
{ after(grammarAccess.getNUMBERAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__LilModel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLilModelAccess().getInteractorsAssignment_0()); }
(rule__LilModel__InteractorsAssignment_0)
{ after(grammarAccess.getLilModelAccess().getInteractorsAssignment_0()); }
)

    |(
{ before(grammarAccess.getLilModelAccess().getDataTypesAssignment_1()); }
(rule__LilModel__DataTypesAssignment_1)
{ after(grammarAccess.getLilModelAccess().getDataTypesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interactor__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorAccess().getEntitiesAssignment_3_0()); }
(rule__Interactor__EntitiesAssignment_3_0)
{ after(grammarAccess.getInteractorAccess().getEntitiesAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getInteractorAccess().getSignalsAssignment_3_1()); }
(rule__Interactor__SignalsAssignment_3_1)
{ after(grammarAccess.getInteractorAccess().getSignalsAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getInteractorAccess().getBehaviorsAssignment_3_2()); }
(rule__Interactor__BehaviorsAssignment_3_2)
{ after(grammarAccess.getInteractorAccess().getBehaviorsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessibleEntity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericAssignment_0()); }
(rule__AccessibleEntity__GenericAssignment_0)
{ after(grammarAccess.getAccessibleEntityAccess().getGenericAssignment_0()); }
)

    |(
{ before(grammarAccess.getAccessibleEntityAccess().getSpecificAssignment_1()); }
(rule__AccessibleEntity__SpecificAssignment_1)
{ after(grammarAccess.getAccessibleEntityAccess().getSpecificAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericEntity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericEntityAccess().getAnyKeyword_0()); }

	'any' 

{ after(grammarAccess.getGenericEntityAccess().getAnyKeyword_0()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getSelfKeyword_1()); }

	'self' 

{ after(grammarAccess.getGenericEntityAccess().getSelfKeyword_1()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getOtherKeyword_2()); }

	'other' 

{ after(grammarAccess.getGenericEntityAccess().getOtherKeyword_2()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getParentKeyword_3()); }

	'parent' 

{ after(grammarAccess.getGenericEntityAccess().getParentKeyword_3()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getChildKeyword_4()); }

	'child' 

{ after(grammarAccess.getGenericEntityAccess().getChildKeyword_4()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getAllKeyword_5()); }

	'all' 

{ after(grammarAccess.getGenericEntityAccess().getAllKeyword_5()); }
)

    |(
{ before(grammarAccess.getGenericEntityAccess().getActorsKeyword_6()); }

	'actors' 

{ after(grammarAccess.getGenericEntityAccess().getActorsKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getActorParserRuleCall_0()); }
	ruleActor
{ after(grammarAccess.getEntityAccess().getActorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getComponentParserRuleCall_1()); }
	ruleComponent
{ after(grammarAccess.getEntityAccess().getComponentParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getGroup_0()); }
(rule__SignalReception__Group_0__0)
{ after(grammarAccess.getSignalReceptionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSignalReceptionAccess().getInitAssignment_1()); }
(rule__SignalReception__InitAssignment_1)
{ after(grammarAccess.getSignalReceptionAccess().getInitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getGroup_0()); }
(rule__DefinitionSet__Group_0__0)
{ after(grammarAccess.getDefinitionSetAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDefinitionSetAccess().getGroup_1()); }
(rule__DefinitionSet__Group_1__0)
{ after(grammarAccess.getDefinitionSetAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDefinitionSetAccess().getGroup_2()); }
(rule__DefinitionSet__Group_2__0)
{ after(grammarAccess.getDefinitionSetAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalMode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalModeAccess().getEventKeyword_0()); }

	'event' 

{ after(grammarAccess.getSignalModeAccess().getEventKeyword_0()); }
)

    |(
{ before(grammarAccess.getSignalModeAccess().getFlowKeyword_1()); }

	'flow' 

{ after(grammarAccess.getSignalModeAccess().getFlowKeyword_1()); }
)

    |(
{ before(grammarAccess.getSignalModeAccess().getConstantKeyword_2()); }

	'constant' 

{ after(grammarAccess.getSignalModeAccess().getConstantKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getGroup_0()); }
(rule__DataType__Group_0__0)
{ after(grammarAccess.getDataTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getGroup_1()); }
(rule__DataType__Group_1__0)
{ after(grammarAccess.getDataTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getGroup_2()); }
(rule__DataType__Group_2__0)
{ after(grammarAccess.getDataTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__ModeAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getModeSetKeyword_1_1_0_0()); }

	'set' 

{ after(grammarAccess.getDataTypeAccess().getModeSetKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getModeListKeyword_1_1_0_1()); }

	'list' 

{ after(grammarAccess.getDataTypeAccess().getModeListKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getModeMapKeyword_1_1_0_2()); }

	'map' 

{ after(grammarAccess.getDataTypeAccess().getModeMapKeyword_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeBase__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeBaseAccess().getVoidKeyword_0()); }

	'void' 

{ after(grammarAccess.getTypeBaseAccess().getVoidKeyword_0()); }
)

    |(
{ before(grammarAccess.getTypeBaseAccess().getSymbolKeyword_1()); }

	'symbol' 

{ after(grammarAccess.getTypeBaseAccess().getSymbolKeyword_1()); }
)

    |(
{ before(grammarAccess.getTypeBaseAccess().getNumberKeyword_2()); }

	'number' 

{ after(grammarAccess.getTypeBaseAccess().getNumberKeyword_2()); }
)

    |(
{ before(grammarAccess.getTypeBaseAccess().getTextKeyword_3()); }

	'text' 

{ after(grammarAccess.getTypeBaseAccess().getTextKeyword_3()); }
)

    |(
{ before(grammarAccess.getTypeBaseAccess().getTimeKeyword_4()); }

	'time' 

{ after(grammarAccess.getTypeBaseAccess().getTimeKeyword_4()); }
)

    |(
{ before(grammarAccess.getTypeBaseAccess().getIdentifierKeyword_5()); }

	'identifier' 

{ after(grammarAccess.getTypeBaseAccess().getIdentifierKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCauseAccess().getOnCauseParserRuleCall_0()); }
	ruleOnCause
{ after(grammarAccess.getCauseAccess().getOnCauseParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCauseAccess().getWhenCauseParserRuleCall_1()); }
	ruleWhenCause
{ after(grammarAccess.getCauseAccess().getWhenCauseParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getAlwaysEffectParserRuleCall_0()); }
	ruleAlwaysEffect
{ after(grammarAccess.getEffectAccess().getAlwaysEffectParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getSetEffectParserRuleCall_1()); }
	ruleSetEffect
{ after(grammarAccess.getEffectAccess().getSetEffectParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getTriggerEffectParserRuleCall_2()); }
	ruleTriggerEffect
{ after(grammarAccess.getEffectAccess().getTriggerEffectParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }

	'==' 

{ after(grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }

	'!=' 

{ after(grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpCompare__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_0()); }

	'<=' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_1()); }

	'>=' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_2()); }

	'<' 

{ after(grammarAccess.getOpCompareAccess().getLessThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpOther__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_0()); }

	'<>' 

{ after(grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_1()); }

	'?:' 

{ after(grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdd__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMulti__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getOpMultiAccess().getSolidusKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpMultiAccess().getPercentSignKeyword_2()); }

	'%' 

{ after(grammarAccess.getOpMultiAccess().getPercentSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getGroup_0()); }
(rule__UnaryOperation__Group_0__0)
{ after(grammarAccess.getUnaryOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUnaryOperationAccess().getPrimaryExpressionParserRuleCall_1()); }
	rulePrimaryExpression
{ after(grammarAccess.getUnaryOperationAccess().getPrimaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpUnary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }

	'!' 

{ after(grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); }
)

    |(
{ before(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }

	'+' 

{ after(grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSwitchExpressionParserRuleCall_0()); }
	ruleSwitchExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getSwitchExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getIfExpressionParserRuleCall_1()); }
	ruleIfExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getIfExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_2()); }
	ruleLiteral
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getForEachExpressionParserRuleCall_3()); }
	ruleForEachExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getForEachExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getFunctionCallExpressionParserRuleCall_4()); }
	ruleFunctionCallExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getFunctionCallExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_5()); }
	ruleParenthesizedExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getCollectionLiteralParserRuleCall_0()); }
	ruleCollectionLiteral
{ after(grammarAccess.getLiteralAccess().getCollectionLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_2()); }
	ruleNumberLiteral
{ after(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_3()); }
	ruleNullLiteral
{ after(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_4()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getTimeLiteralParserRuleCall_5()); }
	ruleTimeLiteral
{ after(grammarAccess.getLiteralAccess().getTimeLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_6()); }
(rule__Literal__Group_6__0)
{ after(grammarAccess.getLiteralAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_7()); }
(rule__Literal__Group_7__0)
{ after(grammarAccess.getLiteralAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCollectionLiteralAccess().getSetLiteralParserRuleCall_0()); }
	ruleSetLiteral
{ after(grammarAccess.getCollectionLiteralAccess().getSetLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCollectionLiteralAccess().getListLiteralParserRuleCall_1()); }
	ruleListLiteral
{ after(grammarAccess.getCollectionLiteralAccess().getListLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltInFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAbsKeyword_0()); }

	'Math.abs' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAbsKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAcosKeyword_1()); }

	'Math.acos' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAcosKeyword_1()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAcoshKeyword_2()); }

	'Math.acosh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAcoshKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAsinKeyword_3()); }

	'Math.asin' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAsinKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAsinhKeyword_4()); }

	'Math.asinh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAsinhKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAtanKeyword_5()); }

	'Math.atan' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAtanKeyword_5()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAtanhKeyword_6()); }

	'Math.atanh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAtanhKeyword_6()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathAtan2Keyword_7()); }

	'Math.atan2' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathAtan2Keyword_7()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathCeilKeyword_8()); }

	'Math.ceil' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathCeilKeyword_8()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathClipKeyword_9()); }

	'Math.clip' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathClipKeyword_9()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathCosKeyword_10()); }

	'Math.cos' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathCosKeyword_10()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathCoshKeyword_11()); }

	'Math.cosh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathCoshKeyword_11()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathExpKeyword_12()); }

	'Math.exp' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathExpKeyword_12()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathFloorKeyword_13()); }

	'Math.floor' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathFloorKeyword_13()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathFroundKeyword_14()); }

	'Math.fround' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathFroundKeyword_14()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathHypotKeyword_15()); }

	'Math.hypot' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathHypotKeyword_15()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathLogKeyword_16()); }

	'Math.log' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathLogKeyword_16()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathLog10Keyword_17()); }

	'Math.log10' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathLog10Keyword_17()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathLog2Keyword_18()); }

	'Math.log2' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathLog2Keyword_18()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathMaxKeyword_19()); }

	'Math.max' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathMaxKeyword_19()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathMinKeyword_20()); }

	'Math.min' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathMinKeyword_20()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathPowKeyword_21()); }

	'Math.pow' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathPowKeyword_21()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathRandomKeyword_22()); }

	'Math.random' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathRandomKeyword_22()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathRoundKeyword_23()); }

	'Math.round' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathRoundKeyword_23()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathSignKeyword_24()); }

	'Math.sign' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathSignKeyword_24()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathSinKeyword_25()); }

	'Math.sin' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathSinKeyword_25()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathSinhKeyword_26()); }

	'Math.sinh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathSinhKeyword_26()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathSqrtKeyword_27()); }

	'Math.sqrt' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathSqrtKeyword_27()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathTanKeyword_28()); }

	'Math.tan' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathTanKeyword_28()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathTanhKeyword_29()); }

	'Math.tanh' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathTanhKeyword_29()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getMathTruncKeyword_30()); }

	'Math.trunc' 

{ after(grammarAccess.getBuiltInFunctionAccess().getMathTruncKeyword_30()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getSetOrderbyKeyword_31()); }

	'Set.orderby' 

{ after(grammarAccess.getBuiltInFunctionAccess().getSetOrderbyKeyword_31()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getSetAddKeyword_32()); }

	'Set.add' 

{ after(grammarAccess.getBuiltInFunctionAccess().getSetAddKeyword_32()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getSetFindKeyword_33()); }

	'Set.find' 

{ after(grammarAccess.getBuiltInFunctionAccess().getSetFindKeyword_33()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getSetChangeKeyword_34()); }

	'Set.change' 

{ after(grammarAccess.getBuiltInFunctionAccess().getSetChangeKeyword_34()); }
)

    |(
{ before(grammarAccess.getBuiltInFunctionAccess().getSetRemoveKeyword_35()); }

	'Set.remove' 

{ after(grammarAccess.getBuiltInFunctionAccess().getSetRemoveKeyword_35()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
(rule__BooleanLiteral__IsTrueAssignment_1_1)
{ after(grammarAccess.getBooleanLiteralAccess().getIsTrueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_0()); }
(rule__TimeLiteral__Group_0__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_1()); }
(rule__TimeLiteral__Group_1__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_2()); }
(rule__TimeLiteral__Group_2__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_3()); }
(rule__TimeLiteral__Group_3__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_4()); }
(rule__TimeLiteral__Group_4__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_5()); }
(rule__TimeLiteral__Group_5__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_6()); }
(rule__TimeLiteral__Group_6__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives_1_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMKeyword_1_5_1_0()); }

	'm' 

{ after(grammarAccess.getTimeLiteralAccess().getMKeyword_1_5_1_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteKeyword_1_5_1_1()); }

	'minute' 

{ after(grammarAccess.getTimeLiteralAccess().getMinuteKeyword_1_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives_1_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSKeyword_1_6_1_0()); }

	's' 

{ after(grammarAccess.getTimeLiteralAccess().getSKeyword_1_6_1_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getSecondKeyword_1_6_1_1()); }

	'second' 

{ after(grammarAccess.getTimeLiteralAccess().getSecondKeyword_1_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives_2_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMKeyword_2_4_1_0()); }

	'm' 

{ after(grammarAccess.getTimeLiteralAccess().getMKeyword_2_4_1_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteKeyword_2_4_1_1()); }

	'minute' 

{ after(grammarAccess.getTimeLiteralAccess().getMinuteKeyword_2_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives_2_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSKeyword_2_5_1_0()); }

	's' 

{ after(grammarAccess.getTimeLiteralAccess().getSKeyword_2_5_1_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getSecondKeyword_2_5_1_1()); }

	'second' 

{ after(grammarAccess.getTimeLiteralAccess().getSecondKeyword_2_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMKeyword_3_3_1_0()); }

	'm' 

{ after(grammarAccess.getTimeLiteralAccess().getMKeyword_3_3_1_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteKeyword_3_3_1_1()); }

	'minute' 

{ after(grammarAccess.getTimeLiteralAccess().getMinuteKeyword_3_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives_3_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSKeyword_3_4_1_0()); }

	's' 

{ after(grammarAccess.getTimeLiteralAccess().getSKeyword_3_4_1_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getSecondKeyword_3_4_1_1()); }

	'second' 

{ after(grammarAccess.getTimeLiteralAccess().getSecondKeyword_3_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMKeyword_4_2_1_0()); }

	'm' 

{ after(grammarAccess.getTimeLiteralAccess().getMKeyword_4_2_1_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteKeyword_4_2_1_1()); }

	'minute' 

{ after(grammarAccess.getTimeLiteralAccess().getMinuteKeyword_4_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSKeyword_4_3_1_0()); }

	's' 

{ after(grammarAccess.getTimeLiteralAccess().getSKeyword_4_3_1_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getSecondKeyword_4_3_1_1()); }

	'second' 

{ after(grammarAccess.getTimeLiteralAccess().getSecondKeyword_4_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMKeyword_5_1_1_0()); }

	'm' 

{ after(grammarAccess.getTimeLiteralAccess().getMKeyword_5_1_1_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteKeyword_5_1_1_1()); }

	'minute' 

{ after(grammarAccess.getTimeLiteralAccess().getMinuteKeyword_5_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSKeyword_5_2_1_0()); }

	's' 

{ after(grammarAccess.getTimeLiteralAccess().getSKeyword_5_2_1_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getSecondKeyword_5_2_1_1()); }

	'second' 

{ after(grammarAccess.getTimeLiteralAccess().getSecondKeyword_5_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Alternatives_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSKeyword_6_1_1_0()); }

	's' 

{ after(grammarAccess.getTimeLiteralAccess().getSKeyword_6_1_1_0()); }
)

    |(
{ before(grammarAccess.getTimeLiteralAccess().getSecondKeyword_6_1_1_1()); }

	'second' 

{ after(grammarAccess.getTimeLiteralAccess().getSecondKeyword_6_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Interactor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interactor__Group__0__Impl
	rule__Interactor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interactor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorAccess().getInteractorKeyword_0()); }

	'interactor' 

{ after(grammarAccess.getInteractorAccess().getInteractorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interactor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interactor__Group__1__Impl
	rule__Interactor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interactor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorAccess().getNameAssignment_1()); }
(rule__Interactor__NameAssignment_1)
{ after(grammarAccess.getInteractorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interactor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interactor__Group__2__Impl
	rule__Interactor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interactor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getInteractorAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interactor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interactor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interactor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorAccess().getAlternatives_3()); }
(rule__Interactor__Alternatives_3)*
{ after(grammarAccess.getInteractorAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Actor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameAssignment_0()); }
(rule__Actor__NameAssignment_0)
{ after(grammarAccess.getActorAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__1__Impl
	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getActorAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getActorKeyword_2()); }

	'actor' 

{ after(grammarAccess.getActorAccess().getActorKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ActorAlias__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorAlias__Group__0__Impl
	rule__ActorAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getSourceAssignment_0()); }
(rule__ActorAlias__SourceAssignment_0)
{ after(grammarAccess.getActorAliasAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorAlias__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorAlias__Group__1__Impl
	rule__ActorAlias__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getAsKeyword_1()); }

	'as' 

{ after(grammarAccess.getActorAliasAccess().getAsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActorAlias__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActorAlias__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getAliasAssignment_2()); }
(rule__ActorAlias__AliasAssignment_2)
{ after(grammarAccess.getActorAliasAccess().getAliasAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Component__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameAssignment_0()); }
(rule__Component__NameAssignment_0)
{ after(grammarAccess.getComponentAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getComponentAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__2__Impl
	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getInteractorAssignment_2()); }
(rule__Component__InteractorAssignment_2)
{ after(grammarAccess.getComponentAccess().getInteractorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getGroup_3()); }
(rule__Component__Group_3__0)?
{ after(grammarAccess.getComponentAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Component__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_3__0__Impl
	rule__Component__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getWithKeyword_3_0()); }

	'with' 

{ after(grammarAccess.getComponentAccess().getWithKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_3__1__Impl
	rule__Component__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getActorsAssignment_3_1()); }
(rule__Component__ActorsAssignment_3_1)
{ after(grammarAccess.getComponentAccess().getActorsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getGroup_3_2()); }
(rule__Component__Group_3_2__0)*
{ after(grammarAccess.getComponentAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Component__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_3_2__0__Impl
	rule__Component__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getComponentAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getActorsAssignment_3_2_1()); }
(rule__Component__ActorsAssignment_3_2_1)
{ after(grammarAccess.getComponentAccess().getActorsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalReception__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group_0__0__Impl
	rule__SignalReception__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getInstanceAssignment_0_0()); }
(rule__SignalReception__InstanceAssignment_0_0)
{ after(grammarAccess.getSignalReceptionAccess().getInstanceAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getGroup_0_1()); }
(rule__SignalReception__Group_0_1__0)?
{ after(grammarAccess.getSignalReceptionAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalReception__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group_0_1__0__Impl
	rule__SignalReception__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getFromKeyword_0_1_0()); }

	'from' 

{ after(grammarAccess.getSignalReceptionAccess().getFromKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getSourceAssignment_0_1_1()); }
(rule__SignalReception__SourceAssignment_0_1_1)
{ after(grammarAccess.getSignalReceptionAccess().getSourceAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalEmission__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalEmission__Group__0__Impl
	rule__SignalEmission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalEmission__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalEmissionAccess().getInstanceAssignment_0()); }
(rule__SignalEmission__InstanceAssignment_0)
{ after(grammarAccess.getSignalEmissionAccess().getInstanceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalEmission__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalEmission__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalEmission__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalEmissionAccess().getGroup_1()); }
(rule__SignalEmission__Group_1__0)?
{ after(grammarAccess.getSignalEmissionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalEmission__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalEmission__Group_1__0__Impl
	rule__SignalEmission__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalEmission__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalEmissionAccess().getToKeyword_1_0()); }

	'to' 

{ after(grammarAccess.getSignalEmissionAccess().getToKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalEmission__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalEmission__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalEmission__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalEmissionAccess().getDestinationAssignment_1_1()); }
(rule__SignalEmission__DestinationAssignment_1_1)
{ after(grammarAccess.getSignalEmissionAccess().getDestinationAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group__0__Impl
	rule__Signal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_0()); }
(rule__Signal__NameAssignment_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group__1__Impl
	rule__Signal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getSignalAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group__2__Impl
	rule__Signal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getTypeAssignment_2()); }
(rule__Signal__TypeAssignment_2)
{ after(grammarAccess.getSignalAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group__3__Impl
	rule__Signal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getModeAssignment_3()); }
(rule__Signal__ModeAssignment_3)
{ after(grammarAccess.getSignalAccess().getModeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group__4__Impl
	rule__Signal__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getGroup_4()); }
(rule__Signal__Group_4__0)?
{ after(grammarAccess.getSignalAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getGroup_5()); }
(rule__Signal__Group_5__0)*
{ after(grammarAccess.getSignalAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Signal__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_4__0__Impl
	rule__Signal__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getFromKeyword_4_0()); }

	'from' 

{ after(grammarAccess.getSignalAccess().getFromKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getSourceAssignment_4_1()); }
(rule__Signal__SourceAssignment_4_1)
{ after(grammarAccess.getSignalAccess().getSourceAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signal__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_5__0__Impl
	rule__Signal__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getToKeyword_5_0()); }

	'to' 

{ after(grammarAccess.getSignalAccess().getToKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getDestinationsAssignment_5_1()); }
(rule__Signal__DestinationsAssignment_5_1)
{ after(grammarAccess.getSignalAccess().getDestinationsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefinitionSet__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_0__0__Impl
	rule__DefinitionSet__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getEnumDefinitionSetAction_0_0()); }
(

)
{ after(grammarAccess.getDefinitionSetAccess().getEnumDefinitionSetAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_0__1__Impl
	rule__DefinitionSet__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getLeftCurlyBracketKeyword_0_1()); }

	'{' 

{ after(grammarAccess.getDefinitionSetAccess().getLeftCurlyBracketKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_0__2__Impl
	rule__DefinitionSet__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getElementsAssignment_0_2()); }
(rule__DefinitionSet__ElementsAssignment_0_2)
{ after(grammarAccess.getDefinitionSetAccess().getElementsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_0__3__Impl
	rule__DefinitionSet__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getGroup_0_3()); }
(rule__DefinitionSet__Group_0_3__0)*
{ after(grammarAccess.getDefinitionSetAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getRightCurlyBracketKeyword_0_4()); }

	'}' 

{ after(grammarAccess.getDefinitionSetAccess().getRightCurlyBracketKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DefinitionSet__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_0_3__0__Impl
	rule__DefinitionSet__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getCommaKeyword_0_3_0()); }

	',' 

{ after(grammarAccess.getDefinitionSetAccess().getCommaKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getElementsAssignment_0_3_1()); }
(rule__DefinitionSet__ElementsAssignment_0_3_1)
{ after(grammarAccess.getDefinitionSetAccess().getElementsAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefinitionSet__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_1__0__Impl
	rule__DefinitionSet__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getNumberDefinitionSetAction_1_0()); }
(

)
{ after(grammarAccess.getDefinitionSetAccess().getNumberDefinitionSetAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_1__1__Impl
	rule__DefinitionSet__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getLeftCurlyBracketKeyword_1_1()); }

	'{' 

{ after(grammarAccess.getDefinitionSetAccess().getLeftCurlyBracketKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_1__2__Impl
	rule__DefinitionSet__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getElementsAssignment_1_2()); }
(rule__DefinitionSet__ElementsAssignment_1_2)
{ after(grammarAccess.getDefinitionSetAccess().getElementsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_1__3__Impl
	rule__DefinitionSet__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getGroup_1_3()); }
(rule__DefinitionSet__Group_1_3__0)*
{ after(grammarAccess.getDefinitionSetAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getRightCurlyBracketKeyword_1_4()); }

	'}' 

{ after(grammarAccess.getDefinitionSetAccess().getRightCurlyBracketKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DefinitionSet__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_1_3__0__Impl
	rule__DefinitionSet__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getDefinitionSetAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getElementsAssignment_1_3_1()); }
(rule__DefinitionSet__ElementsAssignment_1_3_1)
{ after(grammarAccess.getDefinitionSetAccess().getElementsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefinitionSet__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_2__0__Impl
	rule__DefinitionSet__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getNumberDefinitionIntervalAction_2_0()); }
(

)
{ after(grammarAccess.getDefinitionSetAccess().getNumberDefinitionIntervalAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_2__1__Impl
	rule__DefinitionSet__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getLeftSquareBracketKeyword_2_1()); }

	'[' 

{ after(grammarAccess.getDefinitionSetAccess().getLeftSquareBracketKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_2__2__Impl
	rule__DefinitionSet__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getInfAssignment_2_2()); }
(rule__DefinitionSet__InfAssignment_2_2)
{ after(grammarAccess.getDefinitionSetAccess().getInfAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_2__3__Impl
	rule__DefinitionSet__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getCommaKeyword_2_3()); }

	',' 

{ after(grammarAccess.getDefinitionSetAccess().getCommaKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_2__4__Impl
	rule__DefinitionSet__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getSupAssignment_2_4()); }
(rule__DefinitionSet__SupAssignment_2_4)
{ after(grammarAccess.getDefinitionSetAccess().getSupAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefinitionSet__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefinitionSet__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getRightSquareBracketKeyword_2_5()); }

	']' 

{ after(grammarAccess.getDefinitionSetAccess().getRightSquareBracketKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SignalAlias__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAlias__Group__0__Impl
	rule__SignalAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAlias__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAliasAccess().getSourceAssignment_0()); }
(rule__SignalAlias__SourceAssignment_0)
{ after(grammarAccess.getSignalAliasAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAlias__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAlias__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAlias__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAliasAccess().getGroup_1()); }
(rule__SignalAlias__Group_1__0)?
{ after(grammarAccess.getSignalAliasAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalAlias__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAlias__Group_1__0__Impl
	rule__SignalAlias__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAlias__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAliasAccess().getAsKeyword_1_0()); }

	'as' 

{ after(grammarAccess.getSignalAliasAccess().getAsKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAlias__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAlias__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAlias__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAliasAccess().getAliasAssignment_1_1()); }
(rule__SignalAlias__AliasAssignment_1_1)
{ after(grammarAccess.getSignalAliasAccess().getAliasAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_0__0__Impl
	rule__DataType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDataTypeBaseAction_0_0()); }
(

)
{ after(grammarAccess.getDataTypeAccess().getDataTypeBaseAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_0__1__Impl
	rule__DataType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_0_1()); }
(rule__DataType__TypeAssignment_0_1)
{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getGroup_0_2()); }
(rule__DataType__Group_0_2__0)?
{ after(grammarAccess.getDataTypeAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DataType__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_0_2__0__Impl
	rule__DataType__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getInKeyword_0_2_0()); }

	'in' 

{ after(grammarAccess.getDataTypeAccess().getInKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDefinitionSetAssignment_0_2_1()); }
(rule__DataType__DefinitionSetAssignment_0_2_1)
{ after(grammarAccess.getDataTypeAccess().getDefinitionSetAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_1__0__Impl
	rule__DataType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDataTypeCollectionAction_1_0()); }
(

)
{ after(grammarAccess.getDataTypeAccess().getDataTypeCollectionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_1__1__Impl
	rule__DataType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getModeAssignment_1_1()); }
(rule__DataType__ModeAssignment_1_1)
{ after(grammarAccess.getDataTypeAccess().getModeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_1__2__Impl
	rule__DataType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getOfKeyword_1_2()); }

	'of' 

{ after(grammarAccess.getDataTypeAccess().getOfKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_1__3__Impl
	rule__DataType__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getTypeAssignment_1_3()); }
(rule__DataType__TypeAssignment_1_3)
{ after(grammarAccess.getDataTypeAccess().getTypeAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getGroup_1_4()); }
(rule__DataType__Group_1_4__0)?
{ after(grammarAccess.getDataTypeAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DataType__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_1_4__0__Impl
	rule__DataType__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getInKeyword_1_4_0()); }

	'in' 

{ after(grammarAccess.getDataTypeAccess().getInKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDefinitionSetAssignment_1_4_1()); }
(rule__DataType__DefinitionSetAssignment_1_4_1)
{ after(grammarAccess.getDataTypeAccess().getDefinitionSetAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_2__0__Impl
	rule__DataType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDataTypeCompoundAction_2_0()); }
(

)
{ after(grammarAccess.getDataTypeAccess().getDataTypeCompoundAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getCompoundAssignment_2_1()); }
(rule__DataType__CompoundAssignment_2_1)
{ after(grammarAccess.getDataTypeAccess().getCompoundAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataTypeStructure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeStructure__Group__0__Impl
	rule__DataTypeStructure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeStructure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeStructureAccess().getStructureKeyword_0()); }

	'structure' 

{ after(grammarAccess.getDataTypeStructureAccess().getStructureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeStructure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeStructure__Group__1__Impl
	rule__DataTypeStructure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeStructure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeStructureAccess().getNameAssignment_1()); }
(rule__DataTypeStructure__NameAssignment_1)
{ after(grammarAccess.getDataTypeStructureAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeStructure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeStructure__Group__2__Impl
	rule__DataTypeStructure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeStructure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeStructureAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getDataTypeStructureAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeStructure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeStructure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeStructure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeStructureAccess().getFieldsAssignment_3()); }
(rule__DataTypeStructure__FieldsAssignment_3)*
{ after(grammarAccess.getDataTypeStructureAccess().getFieldsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataTypeStructureField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeStructureField__Group__0__Impl
	rule__DataTypeStructureField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeStructureField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeStructureFieldAccess().getNameAssignment_0()); }
(rule__DataTypeStructureField__NameAssignment_0)
{ after(grammarAccess.getDataTypeStructureFieldAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeStructureField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeStructureField__Group__1__Impl
	rule__DataTypeStructureField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeStructureField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeStructureFieldAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getDataTypeStructureFieldAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeStructureField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeStructureField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeStructureField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeStructureFieldAccess().getTypeAssignment_2()); }
(rule__DataTypeStructureField__TypeAssignment_2)
{ after(grammarAccess.getDataTypeStructureFieldAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Behavior__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__0__Impl
	rule__Behavior__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getCauseAssignment_0()); }
(rule__Behavior__CauseAssignment_0)
{ after(grammarAccess.getBehaviorAccess().getCauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__1__Impl
	rule__Behavior__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getBehaviorAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Behavior__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Behavior__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBehaviorAccess().getEffectsAssignment_2()); }
(rule__Behavior__EffectsAssignment_2)
{ after(grammarAccess.getBehaviorAccess().getEffectsAssignment_2()); }
)
(
{ before(grammarAccess.getBehaviorAccess().getEffectsAssignment_2()); }
(rule__Behavior__EffectsAssignment_2)*
{ after(grammarAccess.getBehaviorAccess().getEffectsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OnCause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnCause__Group__0__Impl
	rule__OnCause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getOnKeyword_0()); }

	'on' 

{ after(grammarAccess.getOnCauseAccess().getOnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnCause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnCause__Group__1__Impl
	rule__OnCause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getEventAssignment_1()); }
(rule__OnCause__EventAssignment_1)
{ after(grammarAccess.getOnCauseAccess().getEventAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnCause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnCause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getGroup_2()); }
(rule__OnCause__Group_2__0)?
{ after(grammarAccess.getOnCauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OnCause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnCause__Group_2__0__Impl
	rule__OnCause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getOnCauseAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OnCause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OnCause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getGuardAssignment_2_1()); }
(rule__OnCause__GuardAssignment_2_1)
{ after(grammarAccess.getOnCauseAccess().getGuardAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhenCause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenCause__Group__0__Impl
	rule__WhenCause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getWhenKeyword_0()); }

	'when' 

{ after(grammarAccess.getWhenCauseAccess().getWhenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenCause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenCause__Group__1__Impl
	rule__WhenCause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getConditionAssignment_1()); }
(rule__WhenCause__ConditionAssignment_1)
{ after(grammarAccess.getWhenCauseAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenCause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenCause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getGroup_2()); }
(rule__WhenCause__Group_2__0)?
{ after(grammarAccess.getWhenCauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WhenCause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenCause__Group_2__0__Impl
	rule__WhenCause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getWhenCauseAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhenCause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhenCause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getGuardAssignment_2_1()); }
(rule__WhenCause__GuardAssignment_2_1)
{ after(grammarAccess.getWhenCauseAccess().getGuardAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AlwaysEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysEffect__Group__0__Impl
	rule__AlwaysEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getAlwaysKeyword_0()); }

	'always' 

{ after(grammarAccess.getAlwaysEffectAccess().getAlwaysKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysEffect__Group__1__Impl
	rule__AlwaysEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getTargetAssignment_1()); }
(rule__AlwaysEffect__TargetAssignment_1)
{ after(grammarAccess.getAlwaysEffectAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysEffect__Group__2__Impl
	rule__AlwaysEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getAlwaysEffectAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AlwaysEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getValueAssignment_3()); }
(rule__AlwaysEffect__ValueAssignment_3)
{ after(grammarAccess.getAlwaysEffectAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SetEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEffect__Group__0__Impl
	rule__SetEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getSetKeyword_0()); }

	'set' 

{ after(grammarAccess.getSetEffectAccess().getSetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEffect__Group__1__Impl
	rule__SetEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getTargetAssignment_1()); }
(rule__SetEffect__TargetAssignment_1)
{ after(grammarAccess.getSetEffectAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEffect__Group__2__Impl
	rule__SetEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getSetEffectAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getValueAssignment_3()); }
(rule__SetEffect__ValueAssignment_3)
{ after(grammarAccess.getSetEffectAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TriggerEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerEffect__Group__0__Impl
	rule__TriggerEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getTriggerKeyword_0()); }

	'trigger' 

{ after(grammarAccess.getTriggerEffectAccess().getTriggerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerEffect__Group__1__Impl
	rule__TriggerEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getTargetAssignment_1()); }
(rule__TriggerEffect__TargetAssignment_1)
{ after(grammarAccess.getTriggerEffectAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerEffect__Group__2__Impl
	rule__TriggerEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getTriggerEffectAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TriggerEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getValueAssignment_3()); }
(rule__TriggerEffect__ValueAssignment_3)
{ after(grammarAccess.getTriggerEffectAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
(rule__OrExpression__Group_1_0__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__OrExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
(rule__OrExpression__Group_1_0_0__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OrExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0_0__0__Impl
	rule__OrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__OrExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getOrExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
(rule__AndExpression__Group_1_0__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__AndExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
(rule__AndExpression__Group_1_0_0__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AndExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0_0__0__Impl
	rule__AndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__AndExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getAndExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
{ after(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
(rule__EqualityExpression__Group_1__0)*
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
(rule__EqualityExpression__Group_1_0__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__EqualityExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0()); }
(rule__EqualityExpression__Group_1_0_0__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EqualityExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1_0_0__0__Impl
	rule__EqualityExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__EqualityExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getEqualityExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOtherOperatorExpressionParserRuleCall_0()); }
	ruleOtherOperatorExpression
{ after(grammarAccess.getRelationalExpressionAccess().getOtherOperatorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)*
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
(rule__RelationalExpression__Group_1_0__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__RelationalExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
(rule__RelationalExpression__Group_1_0_0__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__RelationalExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_0_0__0__Impl
	rule__RelationalExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__RelationalExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getRelationalExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OtherOperatorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group__0__Impl
	rule__OtherOperatorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
{ after(grammarAccess.getOtherOperatorExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherOperatorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1()); }
(rule__OtherOperatorExpression__Group_1__0)*
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OtherOperatorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1__0__Impl
	rule__OtherOperatorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0()); }
(rule__OtherOperatorExpression__Group_1_0__0)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherOperatorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__OtherOperatorExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OtherOperatorExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0_0()); }
(rule__OtherOperatorExpression__Group_1_0_0__0)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OtherOperatorExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1_0_0__0__Impl
	rule__OtherOperatorExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OtherOperatorExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OtherOperatorExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__OtherOperatorExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getOtherOperatorExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
(rule__AdditiveExpression__Group_1_0__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__AdditiveExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
(rule__AdditiveExpression__Group_1_0_0__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AdditiveExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1_0_0__0__Impl
	rule__AdditiveExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__AdditiveExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOperationParserRuleCall_0()); }
	ruleUnaryOperation
{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
(rule__MultiplicativeExpression__Group_1_0__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
(rule__MultiplicativeExpression__RightOperandAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
(rule__MultiplicativeExpression__Group_1_0_0__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MultiplicativeExpression__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1_0_0__0__Impl
	rule__MultiplicativeExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
(rule__MultiplicativeExpression__FeatureAssignment_1_0_0_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getFeatureAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group_0__0__Impl
	rule__UnaryOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getUnaryOperationAction_0_0()); }
(

)
{ after(grammarAccess.getUnaryOperationAccess().getUnaryOperationAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group_0__1__Impl
	rule__UnaryOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getFeatureAssignment_0_1()); }
(rule__UnaryOperation__FeatureAssignment_0_1)
{ after(grammarAccess.getUnaryOperationAccess().getFeatureAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperation__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_2()); }
(rule__UnaryOperation__OperandAssignment_0_2)
{ after(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Literal__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6__0__Impl
	rule__Literal__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getEnumLiteralAction_6_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getEnumLiteralAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6__1__Impl
	rule__Literal__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNumberSignKeyword_6_1()); }

	'#' 

{ after(grammarAccess.getLiteralAccess().getNumberSignKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementAssignment_6_2()); }
(rule__Literal__ElementAssignment_6_2)
{ after(grammarAccess.getLiteralAccess().getElementAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Literal__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_7__0__Impl
	rule__Literal__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getSignalLiteralAction_7_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getSignalLiteralAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getSignalAssignment_7_1()); }
(rule__Literal__SignalAssignment_7_1)
{ after(grammarAccess.getLiteralAccess().getSignalAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SetLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__0__Impl
	rule__SetLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getSetLiteralAction_0()); }
(

)
{ after(grammarAccess.getSetLiteralAccess().getSetLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__1__Impl
	rule__SetLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getSetLiteralAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__2__Impl
	rule__SetLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getGroup_2()); }
(rule__SetLiteral__Group_2__0)?
{ after(grammarAccess.getSetLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getSetLiteralAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SetLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_2__0__Impl
	rule__SetLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getElementsAssignment_2_0()); }
(rule__SetLiteral__ElementsAssignment_2_0)
{ after(grammarAccess.getSetLiteralAccess().getElementsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getGroup_2_1()); }
(rule__SetLiteral__Group_2_1__0)*
{ after(grammarAccess.getSetLiteralAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SetLiteral__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_2_1__0__Impl
	rule__SetLiteral__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getSetLiteralAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetLiteral__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetLiteral__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getElementsAssignment_2_1_1()); }
(rule__SetLiteral__ElementsAssignment_2_1_1)
{ after(grammarAccess.getSetLiteralAccess().getElementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__0__Impl
	rule__ListLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getListLiteralAction_0()); }
(

)
{ after(grammarAccess.getListLiteralAccess().getListLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__1__Impl
	rule__ListLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__2__Impl
	rule__ListLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getGroup_2()); }
(rule__ListLiteral__Group_2__0)?
{ after(grammarAccess.getListLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_2__0__Impl
	rule__ListLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getElementsAssignment_2_0()); }
(rule__ListLiteral__ElementsAssignment_2_0)
{ after(grammarAccess.getListLiteralAccess().getElementsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getGroup_2_1()); }
(rule__ListLiteral__Group_2_1__0)*
{ after(grammarAccess.getListLiteralAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListLiteral__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_2_1__0__Impl
	rule__ListLiteral__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getListLiteralAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListLiteral__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getElementsAssignment_2_1_1()); }
(rule__ListLiteral__ElementsAssignment_2_1_1)
{ after(grammarAccess.getListLiteralAccess().getElementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__0__Impl
	rule__ParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__1__Impl
	rule__ParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
(

)
{ after(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfAssignment_3()); }
(rule__IfExpression__IfAssignment_3)
{ after(grammarAccess.getIfExpressionAccess().getIfAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }
(
	')' 
)
{ after(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__5__Impl
	rule__IfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenAssignment_5()); }
(rule__IfExpression__ThenAssignment_5)
{ after(grammarAccess.getIfExpressionAccess().getThenAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getGroup_6()); }
(rule__IfExpression__Group_6__0)
{ after(grammarAccess.getIfExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IfExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group_6__0__Impl
	rule__IfExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_6_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseAssignment_6_1()); }
(rule__IfExpression__ElseAssignment_6_1)
{ after(grammarAccess.getIfExpressionAccess().getElseAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SwitchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__0__Impl
	rule__SwitchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionAction_0()); }
(

)
{ after(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__1__Impl
	rule__SwitchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_1()); }

	'switch' 

{ after(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__2__Impl
	rule__SwitchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getSwitchExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__3__Impl
	rule__SwitchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchAssignment_3()); }
(rule__SwitchExpression__SwitchAssignment_3)
{ after(grammarAccess.getSwitchExpressionAccess().getSwitchAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__4__Impl
	rule__SwitchExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getRightParenthesisKeyword_4()); }
(
	')' 
)
{ after(grammarAccess.getSwitchExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__5__Impl
	rule__SwitchExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_5()); }
(rule__SwitchExpression__CasesAssignment_5)
{ after(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_5()); }
)
(
{ before(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_5()); }
(rule__SwitchExpression__CasesAssignment_5)*
{ after(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup_6()); }
(rule__SwitchExpression__Group_6__0)?
{ after(grammarAccess.getSwitchExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SwitchExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_6__0__Impl
	rule__SwitchExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultKeyword_6_0()); }
(
	'default' 
)
{ after(grammarAccess.getSwitchExpressionAccess().getDefaultKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_6__1__Impl
	rule__SwitchExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getColonKeyword_6_1()); }

	':' 

{ after(grammarAccess.getSwitchExpressionAccess().getColonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultAssignment_6_2()); }
(rule__SwitchExpression__DefaultAssignment_6_2)
{ after(grammarAccess.getSwitchExpressionAccess().getDefaultAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CasePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__0__Impl
	rule__CasePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getCasePartAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__1__Impl
	rule__CasePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCaseAssignment_1()); }
(rule__CasePart__CaseAssignment_1)
{ after(grammarAccess.getCasePartAccess().getCaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__2__Impl
	rule__CasePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getCasePartAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CasePart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CasePart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getThenAssignment_3()); }
(rule__CasePart__ThenAssignment_3)
{ after(grammarAccess.getCasePartAccess().getThenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ForEachExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEachExpression__Group__0__Impl
	rule__ForEachExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachExpressionAccess().getForEachExpressionAction_0()); }
(

)
{ after(grammarAccess.getForEachExpressionAccess().getForEachExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEachExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEachExpression__Group__1__Impl
	rule__ForEachExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachExpressionAccess().getForKeyword_1()); }

	'for' 

{ after(grammarAccess.getForEachExpressionAccess().getForKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEachExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEachExpression__Group__2__Impl
	rule__ForEachExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachExpressionAccess().getEachKeyword_2()); }

	'each' 

{ after(grammarAccess.getForEachExpressionAccess().getEachKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEachExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEachExpression__Group__3__Impl
	rule__ForEachExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachExpressionAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getForEachExpressionAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEachExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEachExpression__Group__4__Impl
	rule__ForEachExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachExpressionAccess().getForExpressionAssignment_4()); }
(rule__ForEachExpression__ForExpressionAssignment_4)
{ after(grammarAccess.getForEachExpressionAccess().getForExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEachExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEachExpression__Group__5__Impl
	rule__ForEachExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachExpressionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getForEachExpressionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForEachExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForEachExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachExpressionAccess().getEachExpressionAssignment_6()); }
(rule__ForEachExpression__EachExpressionAssignment_6)
{ after(grammarAccess.getForEachExpressionAccess().getEachExpressionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__FunctionCallExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group__0__Impl
	rule__FunctionCallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getFunctionCallExpressionAction_0()); }
(

)
{ after(grammarAccess.getFunctionCallExpressionAccess().getFunctionCallExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group__1__Impl
	rule__FunctionCallExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getFunctionAssignment_1()); }
(rule__FunctionCallExpression__FunctionAssignment_1)
{ after(grammarAccess.getFunctionCallExpressionAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group__2__Impl
	rule__FunctionCallExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionCallExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group__3__Impl
	rule__FunctionCallExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getArgumentsAssignment_3()); }
(rule__FunctionCallExpression__ArgumentsAssignment_3)?
{ after(grammarAccess.getFunctionCallExpressionAccess().getArgumentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group__4__Impl
	rule__FunctionCallExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getGroup_4()); }
(rule__FunctionCallExpression__Group_4__0)*
{ after(grammarAccess.getFunctionCallExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getFunctionCallExpressionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FunctionCallExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group_4__0__Impl
	rule__FunctionCallExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getFunctionCallExpressionAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getArgumentsAssignment_4_1()); }
(rule__FunctionCallExpression__ArgumentsAssignment_4_1)
{ after(grammarAccess.getFunctionCallExpressionAccess().getArgumentsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
(rule__BooleanLiteral__Alternatives_1)
{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__0__Impl
	rule__NullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__0__Impl
	rule__NumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
(

)
{ after(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
(rule__NumberLiteral__ValueAssignment_1)
{ after(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
(

)
{ after(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
(rule__StringLiteral__ValueAssignment_1)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumElement__Group__0__Impl
	rule__EnumElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumElementAccess().getEnumLiteralAction_0()); }
(

)
{ after(grammarAccess.getEnumElementAccess().getEnumLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumElement__Group__1__Impl
	rule__EnumElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumElementAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getEnumElementAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumElementAccess().getNameAssignment_2()); }
(rule__EnumElement__NameAssignment_2)
{ after(grammarAccess.getEnumElementAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TimeLiteral__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_0__0__Impl
	rule__TimeLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getTimeLiteralNowAction_0_0()); }
(

)
{ after(grammarAccess.getTimeLiteralAccess().getTimeLiteralNowAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getNowKeyword_0_1()); }

	'now' 

{ after(grammarAccess.getTimeLiteralAccess().getNowKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1__0__Impl
	rule__TimeLiteral__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_1_0()); }
(

)
{ after(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1__1__Impl
	rule__TimeLiteral__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_1_1()); }
(rule__TimeLiteral__Group_1_1__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1__2__Impl
	rule__TimeLiteral__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_1_2()); }
(rule__TimeLiteral__Group_1_2__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1__3__Impl
	rule__TimeLiteral__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_1_3()); }
(rule__TimeLiteral__Group_1_3__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1__4__Impl
	rule__TimeLiteral__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_1_4()); }
(rule__TimeLiteral__Group_1_4__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1__5__Impl
	rule__TimeLiteral__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_1_5()); }
(rule__TimeLiteral__Group_1_5__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_1_6()); }
(rule__TimeLiteral__Group_1_6__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TimeLiteral__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_1__0__Impl
	rule__TimeLiteral__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getYearAssignment_1_1_0()); }
(rule__TimeLiteral__YearAssignment_1_1_0)
{ after(grammarAccess.getTimeLiteralAccess().getYearAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getYearKeyword_1_1_1()); }

	'year' 

{ after(grammarAccess.getTimeLiteralAccess().getYearKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_2__0__Impl
	rule__TimeLiteral__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMonthAssignment_1_2_0()); }
(rule__TimeLiteral__MonthAssignment_1_2_0)
{ after(grammarAccess.getTimeLiteralAccess().getMonthAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMonthKeyword_1_2_1()); }

	'month' 

{ after(grammarAccess.getTimeLiteralAccess().getMonthKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_3__0__Impl
	rule__TimeLiteral__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getDayAssignment_1_3_0()); }
(rule__TimeLiteral__DayAssignment_1_3_0)
{ after(grammarAccess.getTimeLiteralAccess().getDayAssignment_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getDayKeyword_1_3_1()); }

	'day' 

{ after(grammarAccess.getTimeLiteralAccess().getDayKeyword_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_4__0__Impl
	rule__TimeLiteral__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourAssignment_1_4_0()); }
(rule__TimeLiteral__HourAssignment_1_4_0)
{ after(grammarAccess.getTimeLiteralAccess().getHourAssignment_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourKeyword_1_4_1()); }

	'hour' 

{ after(grammarAccess.getTimeLiteralAccess().getHourKeyword_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_5__0__Impl
	rule__TimeLiteral__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_1_5_0()); }
(rule__TimeLiteral__MinuteAssignment_1_5_0)
{ after(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives_1_5_1()); }
(rule__TimeLiteral__Alternatives_1_5_1)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_6__0__Impl
	rule__TimeLiteral__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondAssignment_1_6_0()); }
(rule__TimeLiteral__SecondAssignment_1_6_0)
{ after(grammarAccess.getTimeLiteralAccess().getSecondAssignment_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_1_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives_1_6_1()); }
(rule__TimeLiteral__Alternatives_1_6_1)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2__0__Impl
	rule__TimeLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_2_0()); }
(

)
{ after(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2__1__Impl
	rule__TimeLiteral__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_2_1()); }
(rule__TimeLiteral__Group_2_1__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2__2__Impl
	rule__TimeLiteral__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_2_2()); }
(rule__TimeLiteral__Group_2_2__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2__3__Impl
	rule__TimeLiteral__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_2_3()); }
(rule__TimeLiteral__Group_2_3__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2__4__Impl
	rule__TimeLiteral__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_2_4()); }
(rule__TimeLiteral__Group_2_4__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_2_5()); }
(rule__TimeLiteral__Group_2_5__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TimeLiteral__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2_1__0__Impl
	rule__TimeLiteral__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMonthAssignment_2_1_0()); }
(rule__TimeLiteral__MonthAssignment_2_1_0)
{ after(grammarAccess.getTimeLiteralAccess().getMonthAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMonthKeyword_2_1_1()); }

	'month' 

{ after(grammarAccess.getTimeLiteralAccess().getMonthKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2_2__0__Impl
	rule__TimeLiteral__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getDayAssignment_2_2_0()); }
(rule__TimeLiteral__DayAssignment_2_2_0)
{ after(grammarAccess.getTimeLiteralAccess().getDayAssignment_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getDayKeyword_2_2_1()); }

	'day' 

{ after(grammarAccess.getTimeLiteralAccess().getDayKeyword_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2_3__0__Impl
	rule__TimeLiteral__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourAssignment_2_3_0()); }
(rule__TimeLiteral__HourAssignment_2_3_0)
{ after(grammarAccess.getTimeLiteralAccess().getHourAssignment_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourKeyword_2_3_1()); }

	'hour' 

{ after(grammarAccess.getTimeLiteralAccess().getHourKeyword_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2_4__0__Impl
	rule__TimeLiteral__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_2_4_0()); }
(rule__TimeLiteral__MinuteAssignment_2_4_0)
{ after(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives_2_4_1()); }
(rule__TimeLiteral__Alternatives_2_4_1)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_2_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2_5__0__Impl
	rule__TimeLiteral__Group_2_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondAssignment_2_5_0()); }
(rule__TimeLiteral__SecondAssignment_2_5_0)
{ after(grammarAccess.getTimeLiteralAccess().getSecondAssignment_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_2_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_2_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_2_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives_2_5_1()); }
(rule__TimeLiteral__Alternatives_2_5_1)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives_2_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3__0__Impl
	rule__TimeLiteral__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_3_0()); }
(

)
{ after(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3__1__Impl
	rule__TimeLiteral__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_3_1()); }
(rule__TimeLiteral__Group_3_1__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3__2__Impl
	rule__TimeLiteral__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_3_2()); }
(rule__TimeLiteral__Group_3_2__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3__3__Impl
	rule__TimeLiteral__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_3_3()); }
(rule__TimeLiteral__Group_3_3__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_3_4()); }
(rule__TimeLiteral__Group_3_4__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TimeLiteral__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3_1__0__Impl
	rule__TimeLiteral__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getDayAssignment_3_1_0()); }
(rule__TimeLiteral__DayAssignment_3_1_0)
{ after(grammarAccess.getTimeLiteralAccess().getDayAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getDayKeyword_3_1_1()); }

	'day' 

{ after(grammarAccess.getTimeLiteralAccess().getDayKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3_2__0__Impl
	rule__TimeLiteral__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourAssignment_3_2_0()); }
(rule__TimeLiteral__HourAssignment_3_2_0)
{ after(grammarAccess.getTimeLiteralAccess().getHourAssignment_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourKeyword_3_2_1()); }

	'hour' 

{ after(grammarAccess.getTimeLiteralAccess().getHourKeyword_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3_3__0__Impl
	rule__TimeLiteral__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_3_3_0()); }
(rule__TimeLiteral__MinuteAssignment_3_3_0)
{ after(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives_3_3_1()); }
(rule__TimeLiteral__Alternatives_3_3_1)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_3_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3_4__0__Impl
	rule__TimeLiteral__Group_3_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondAssignment_3_4_0()); }
(rule__TimeLiteral__SecondAssignment_3_4_0)
{ after(grammarAccess.getTimeLiteralAccess().getSecondAssignment_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_3_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_3_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_3_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives_3_4_1()); }
(rule__TimeLiteral__Alternatives_3_4_1)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives_3_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_4__0__Impl
	rule__TimeLiteral__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_4_0()); }
(

)
{ after(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_4__1__Impl
	rule__TimeLiteral__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_4_1()); }
(rule__TimeLiteral__Group_4_1__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_4__2__Impl
	rule__TimeLiteral__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_4_2()); }
(rule__TimeLiteral__Group_4_2__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_4_3()); }
(rule__TimeLiteral__Group_4_3__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TimeLiteral__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_4_1__0__Impl
	rule__TimeLiteral__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourAssignment_4_1_0()); }
(rule__TimeLiteral__HourAssignment_4_1_0)
{ after(grammarAccess.getTimeLiteralAccess().getHourAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourKeyword_4_1_1()); }

	'hour' 

{ after(grammarAccess.getTimeLiteralAccess().getHourKeyword_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_4_2__0__Impl
	rule__TimeLiteral__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_4_2_0()); }
(rule__TimeLiteral__MinuteAssignment_4_2_0)
{ after(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives_4_2_1()); }
(rule__TimeLiteral__Alternatives_4_2_1)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_4_3__0__Impl
	rule__TimeLiteral__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondAssignment_4_3_0()); }
(rule__TimeLiteral__SecondAssignment_4_3_0)
{ after(grammarAccess.getTimeLiteralAccess().getSecondAssignment_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives_4_3_1()); }
(rule__TimeLiteral__Alternatives_4_3_1)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_5__0__Impl
	rule__TimeLiteral__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_5_0()); }
(

)
{ after(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_5__1__Impl
	rule__TimeLiteral__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_5_1()); }
(rule__TimeLiteral__Group_5_1__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_5_2()); }
(rule__TimeLiteral__Group_5_2__0)?
{ after(grammarAccess.getTimeLiteralAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TimeLiteral__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_5_1__0__Impl
	rule__TimeLiteral__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_5_1_0()); }
(rule__TimeLiteral__MinuteAssignment_5_1_0)
{ after(grammarAccess.getTimeLiteralAccess().getMinuteAssignment_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives_5_1_1()); }
(rule__TimeLiteral__Alternatives_5_1_1)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_5_2__0__Impl
	rule__TimeLiteral__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondAssignment_5_2_0()); }
(rule__TimeLiteral__SecondAssignment_5_2_0)
{ after(grammarAccess.getTimeLiteralAccess().getSecondAssignment_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives_5_2_1()); }
(rule__TimeLiteral__Alternatives_5_2_1)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_6__0__Impl
	rule__TimeLiteral__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_6_0()); }
(

)
{ after(grammarAccess.getTimeLiteralAccess().getTimeLiteralAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getGroup_6_1()); }
(rule__TimeLiteral__Group_6_1__0)
{ after(grammarAccess.getTimeLiteralAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeLiteral__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_6_1__0__Impl
	rule__TimeLiteral__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondAssignment_6_1_0()); }
(rule__TimeLiteral__SecondAssignment_6_1_0)
{ after(grammarAccess.getTimeLiteralAccess().getSecondAssignment_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeLiteral__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getAlternatives_6_1_1()); }
(rule__TimeLiteral__Alternatives_6_1_1)
{ after(grammarAccess.getTimeLiteralAccess().getAlternatives_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NUMBER__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group__0__Impl
	rule__NUMBER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getGroup_1()); }
(rule__NUMBER__Group_1__0)?
{ after(grammarAccess.getNUMBERAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NUMBER__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group_1__0__Impl
	rule__NUMBER__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getNUMBERAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NUMBER__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__LilModel__InteractorsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLilModelAccess().getInteractorsInteractorParserRuleCall_0_0()); }
	ruleInteractor{ after(grammarAccess.getLilModelAccess().getInteractorsInteractorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LilModel__DataTypesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLilModelAccess().getDataTypesDataTypeDefinitionParserRuleCall_1_0()); }
	ruleDataTypeDefinition{ after(grammarAccess.getLilModelAccess().getDataTypesDataTypeDefinitionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interactor__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInteractorAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interactor__EntitiesAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorAccess().getEntitiesEntityParserRuleCall_3_0_0()); }
	ruleEntity{ after(grammarAccess.getInteractorAccess().getEntitiesEntityParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interactor__SignalsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorAccess().getSignalsSignalParserRuleCall_3_1_0()); }
	ruleSignal{ after(grammarAccess.getInteractorAccess().getSignalsSignalParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interactor__BehaviorsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInteractorAccess().getBehaviorsBehaviorParserRuleCall_3_2_0()); }
	ruleBehavior{ after(grammarAccess.getInteractorAccess().getBehaviorsBehaviorParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessibleEntity__GenericAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessibleEntityAccess().getGenericGenericEntityParserRuleCall_0_0()); }
	ruleGenericEntity{ after(grammarAccess.getAccessibleEntityAccess().getGenericGenericEntityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessibleEntity__SpecificAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessibleEntityAccess().getSpecificEntityCrossReference_1_0()); }
(
{ before(grammarAccess.getAccessibleEntityAccess().getSpecificEntityIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAccessibleEntityAccess().getSpecificEntityIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAccessibleEntityAccess().getSpecificEntityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getActorAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getSourceActorCrossReference_0_0()); }
(
{ before(grammarAccess.getActorAliasAccess().getSourceActorIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getActorAliasAccess().getSourceActorIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getActorAliasAccess().getSourceActorCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActorAlias__AliasAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActorAliasAccess().getAliasActorCrossReference_2_0()); }
(
{ before(grammarAccess.getActorAliasAccess().getAliasActorIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getActorAliasAccess().getAliasActorIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getActorAliasAccess().getAliasActorCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__InteractorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getInteractorInteractorCrossReference_2_0()); }
(
{ before(grammarAccess.getComponentAccess().getInteractorInteractorIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getComponentAccess().getInteractorInteractorIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getComponentAccess().getInteractorInteractorCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ActorsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getActorsActorAliasParserRuleCall_3_1_0()); }
	ruleActorAlias{ after(grammarAccess.getComponentAccess().getActorsActorAliasParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ActorsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getActorsActorAliasParserRuleCall_3_2_1_0()); }
	ruleActorAlias{ after(grammarAccess.getComponentAccess().getActorsActorAliasParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__InstanceAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getInstanceSignalCrossReference_0_0_0()); }
(
{ before(grammarAccess.getSignalReceptionAccess().getInstanceSignalIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSignalReceptionAccess().getInstanceSignalIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getSignalReceptionAccess().getInstanceSignalCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__SourceAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getSourceSignalAliasParserRuleCall_0_1_1_0()); }
	ruleSignalAlias{ after(grammarAccess.getSignalReceptionAccess().getSourceSignalAliasParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__InitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getInitInitKeyword_1_0()); }
(
{ before(grammarAccess.getSignalReceptionAccess().getInitInitKeyword_1_0()); }

	'init' 

{ after(grammarAccess.getSignalReceptionAccess().getInitInitKeyword_1_0()); }
)

{ after(grammarAccess.getSignalReceptionAccess().getInitInitKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalEmission__InstanceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalEmissionAccess().getInstanceSignalCrossReference_0_0()); }
(
{ before(grammarAccess.getSignalEmissionAccess().getInstanceSignalIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSignalEmissionAccess().getInstanceSignalIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSignalEmissionAccess().getInstanceSignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalEmission__DestinationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalEmissionAccess().getDestinationSignalAliasParserRuleCall_1_1_0()); }
	ruleSignalAlias{ after(grammarAccess.getSignalEmissionAccess().getDestinationSignalAliasParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getTypeDataTypeParserRuleCall_2_0()); }
	ruleDataType{ after(grammarAccess.getSignalAccess().getTypeDataTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__ModeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getModeSignalModeParserRuleCall_3_0()); }
	ruleSignalMode{ after(grammarAccess.getSignalAccess().getModeSignalModeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__SourceAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getSourceSignalAliasParserRuleCall_4_1_0()); }
	ruleSignalAlias{ after(grammarAccess.getSignalAccess().getSourceSignalAliasParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__DestinationsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getDestinationsSignalAliasParserRuleCall_5_1_0()); }
	ruleSignalAlias{ after(grammarAccess.getSignalAccess().getDestinationsSignalAliasParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__ElementsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getElementsEnumElementParserRuleCall_0_2_0()); }
	ruleEnumElement{ after(grammarAccess.getDefinitionSetAccess().getElementsEnumElementParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__ElementsAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getElementsEnumElementParserRuleCall_0_3_1_0()); }
	ruleEnumElement{ after(grammarAccess.getDefinitionSetAccess().getElementsEnumElementParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__ElementsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getElementsNumberLiteralParserRuleCall_1_2_0()); }
	ruleNumberLiteral{ after(grammarAccess.getDefinitionSetAccess().getElementsNumberLiteralParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__ElementsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getElementsNumberLiteralParserRuleCall_1_3_1_0()); }
	ruleNumberLiteral{ after(grammarAccess.getDefinitionSetAccess().getElementsNumberLiteralParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__InfAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getInfNumberLiteralParserRuleCall_2_2_0()); }
	ruleNumberLiteral{ after(grammarAccess.getDefinitionSetAccess().getInfNumberLiteralParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionSet__SupAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionSetAccess().getSupNumberLiteralParserRuleCall_2_4_0()); }
	ruleNumberLiteral{ after(grammarAccess.getDefinitionSetAccess().getSupNumberLiteralParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAlias__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAliasAccess().getSourceAccessibleEntityParserRuleCall_0_0()); }
	ruleAccessibleEntity{ after(grammarAccess.getSignalAliasAccess().getSourceAccessibleEntityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAlias__AliasAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAliasAccess().getAliasSignalCrossReference_1_1_0()); }
(
{ before(grammarAccess.getSignalAliasAccess().getAliasSignalIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSignalAliasAccess().getAliasSignalIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getSignalAliasAccess().getAliasSignalCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getTypeTypeBaseParserRuleCall_0_1_0()); }
	ruleTypeBase{ after(grammarAccess.getDataTypeAccess().getTypeTypeBaseParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__DefinitionSetAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDefinitionSetDefinitionSetParserRuleCall_0_2_1_0()); }
	ruleDefinitionSet{ after(grammarAccess.getDataTypeAccess().getDefinitionSetDefinitionSetParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__ModeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getModeAlternatives_1_1_0()); }
(rule__DataType__ModeAlternatives_1_1_0)
{ after(grammarAccess.getDataTypeAccess().getModeAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__TypeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getTypeDataTypeCrossReference_1_3_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getTypeDataTypeIDTerminalRuleCall_1_3_0_1()); }
	RULE_ID{ after(grammarAccess.getDataTypeAccess().getTypeDataTypeIDTerminalRuleCall_1_3_0_1()); }
)
{ after(grammarAccess.getDataTypeAccess().getTypeDataTypeCrossReference_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__DefinitionSetAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDefinitionSetDefinitionSetParserRuleCall_1_4_1_0()); }
	ruleDefinitionSet{ after(grammarAccess.getDataTypeAccess().getDefinitionSetDefinitionSetParserRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__CompoundAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getCompoundDataTypeStructureCrossReference_2_1_0()); }
(
{ before(grammarAccess.getDataTypeAccess().getCompoundDataTypeStructureIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDataTypeAccess().getCompoundDataTypeStructureIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getDataTypeAccess().getCompoundDataTypeStructureCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeStructure__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeStructureAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDataTypeStructureAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeStructure__FieldsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeStructureAccess().getFieldsDataTypeStructureFieldParserRuleCall_3_0()); }
	ruleDataTypeStructureField{ after(grammarAccess.getDataTypeStructureAccess().getFieldsDataTypeStructureFieldParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeStructureField__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeStructureFieldAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getDataTypeStructureFieldAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeStructureField__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeStructureFieldAccess().getTypeDataTypeParserRuleCall_2_0()); }
	ruleDataType{ after(grammarAccess.getDataTypeStructureFieldAccess().getTypeDataTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__CauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getCauseCauseParserRuleCall_0_0()); }
	ruleCause{ after(grammarAccess.getBehaviorAccess().getCauseCauseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Behavior__EffectsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorAccess().getEffectsEffectParserRuleCall_2_0()); }
	ruleEffect{ after(grammarAccess.getBehaviorAccess().getEffectsEffectParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__EventAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getEventSignalReceptionParserRuleCall_1_0()); }
	ruleSignalReception{ after(grammarAccess.getOnCauseAccess().getEventSignalReceptionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OnCause__GuardAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOnCauseAccess().getGuardExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getOnCauseAccess().getGuardExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getConditionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getWhenCauseAccess().getConditionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhenCause__GuardAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhenCauseAccess().getGuardExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getWhenCauseAccess().getGuardExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getTargetSignalEmissionParserRuleCall_1_0()); }
	ruleSignalEmission{ after(grammarAccess.getAlwaysEffectAccess().getTargetSignalEmissionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysEffect__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlwaysEffectAccess().getValueExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getAlwaysEffectAccess().getValueExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getTargetSignalEmissionParserRuleCall_1_0()); }
	ruleSignalEmission{ after(grammarAccess.getSetEffectAccess().getTargetSignalEmissionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetEffect__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetEffectAccess().getValueExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getSetEffectAccess().getValueExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getTargetSignalEmissionParserRuleCall_1_0()); }
	ruleSignalEmission{ after(grammarAccess.getTriggerEffectAccess().getTargetSignalEmissionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerEffect__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerEffectAccess().getValueExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getTriggerEffectAccess().getValueExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getFeatureOpOrParserRuleCall_1_0_0_1_0()); }
	ruleOpOr{ after(grammarAccess.getOrExpressionAccess().getFeatureOpOrParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getRightOperandAndExpressionParserRuleCall_1_1_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getRightOperandAndExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getFeatureOpAndParserRuleCall_1_0_0_1_0()); }
	ruleOpAnd{ after(grammarAccess.getAndExpressionAccess().getFeatureOpAndParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getRightOperandEqualityExpressionParserRuleCall_1_1_0()); }
	ruleEqualityExpression{ after(grammarAccess.getAndExpressionAccess().getRightOperandEqualityExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getFeatureOpEqualityParserRuleCall_1_0_0_1_0()); }
	ruleOpEquality{ after(grammarAccess.getEqualityExpressionAccess().getFeatureOpEqualityParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRightOperandRelationalExpressionParserRuleCall_1_1_0()); }
	ruleRelationalExpression{ after(grammarAccess.getEqualityExpressionAccess().getRightOperandRelationalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getFeatureOpCompareParserRuleCall_1_0_0_1_0()); }
	ruleOpCompare{ after(grammarAccess.getRelationalExpressionAccess().getFeatureOpCompareParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightOperandOtherOperatorExpressionParserRuleCall_1_1_0()); }
	ruleOtherOperatorExpression{ after(grammarAccess.getRelationalExpressionAccess().getRightOperandOtherOperatorExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getFeatureOpOtherParserRuleCall_1_0_0_1_0()); }
	ruleOpOther{ after(grammarAccess.getOtherOperatorExpressionAccess().getFeatureOpOtherParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OtherOperatorExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOtherOperatorExpressionAccess().getRightOperandAdditiveExpressionParserRuleCall_1_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getOtherOperatorExpressionAccess().getRightOperandAdditiveExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getFeatureOpAddParserRuleCall_1_0_0_1_0()); }
	ruleOpAdd{ after(grammarAccess.getAdditiveExpressionAccess().getFeatureOpAddParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightOperandMultiplicativeExpressionParserRuleCall_1_1_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getRightOperandMultiplicativeExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__FeatureAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getFeatureOpMultiParserRuleCall_1_0_0_1_0()); }
	ruleOpMulti{ after(grammarAccess.getMultiplicativeExpressionAccess().getFeatureOpMultiParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightOperandAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandUnaryOperationParserRuleCall_1_1_0()); }
	ruleUnaryOperation{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandUnaryOperationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__FeatureAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getFeatureOpUnaryParserRuleCall_0_1_0()); }
	ruleOpUnary{ after(grammarAccess.getUnaryOperationAccess().getFeatureOpUnaryParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__OperandAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getOperandPrimaryExpressionParserRuleCall_0_2_0()); }
	rulePrimaryExpression{ after(grammarAccess.getUnaryOperationAccess().getOperandPrimaryExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ElementAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getElementEnumElementCrossReference_6_2_0()); }
(
{ before(grammarAccess.getLiteralAccess().getElementEnumElementIDTerminalRuleCall_6_2_0_1()); }
	RULE_ID{ after(grammarAccess.getLiteralAccess().getElementEnumElementIDTerminalRuleCall_6_2_0_1()); }
)
{ after(grammarAccess.getLiteralAccess().getElementEnumElementCrossReference_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__SignalAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getSignalSignalCrossReference_7_1_0()); }
(
{ before(grammarAccess.getLiteralAccess().getSignalSignalIDTerminalRuleCall_7_1_0_1()); }
	RULE_ID{ after(grammarAccess.getLiteralAccess().getSignalSignalIDTerminalRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getLiteralAccess().getSignalSignalCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__ElementsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getElementsExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getSetLiteralAccess().getElementsExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetLiteral__ElementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetLiteralAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getSetLiteralAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__ElementsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__ElementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getListLiteralAccess().getElementsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__IfAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getIfExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getThenExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseExpressionParserRuleCall_6_1_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getElseExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__SwitchAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getSwitchExpressionAccess().getSwitchExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__CasesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getCasesCasePartParserRuleCall_5_0()); }
	ruleCasePart{ after(grammarAccess.getSwitchExpressionAccess().getCasesCasePartParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__DefaultAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultExpressionParserRuleCall_6_2_0()); }
	ruleExpression{ after(grammarAccess.getSwitchExpressionAccess().getDefaultExpressionParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__CaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getCaseExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getCasePartAccess().getCaseExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CasePart__ThenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCasePartAccess().getThenExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getCasePartAccess().getThenExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachExpression__ForExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachExpressionAccess().getForExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getForEachExpressionAccess().getForExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForEachExpression__EachExpressionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForEachExpressionAccess().getEachExpressionExpressionParserRuleCall_6_0()); }
	ruleExpression{ after(grammarAccess.getForEachExpressionAccess().getEachExpressionExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getFunctionBuiltInFunctionParserRuleCall_1_0()); }
	ruleBuiltInFunction{ after(grammarAccess.getFunctionCallExpressionAccess().getFunctionBuiltInFunctionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__ArgumentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getArgumentsExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getFunctionCallExpressionAccess().getArgumentsExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallExpression__ArgumentsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallExpressionAccess().getArgumentsExpressionParserRuleCall_4_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionCallExpressionAccess().getArgumentsExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__IsTrueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
(
{ before(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }

	'true' 

{ after(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

{ after(grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueNUMBERParserRuleCall_1_0()); }
	ruleNUMBER{ after(grammarAccess.getNumberLiteralAccess().getValueNUMBERParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumElement__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumElementAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEnumElementAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__YearAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getYearNUMBERParserRuleCall_1_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getYearNUMBERParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__MonthAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMonthNUMBERParserRuleCall_1_2_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getMonthNUMBERParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__DayAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getDayNUMBERParserRuleCall_1_3_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getDayNUMBERParserRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__HourAssignment_1_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourNUMBERParserRuleCall_1_4_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getHourNUMBERParserRuleCall_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__MinuteAssignment_1_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteNUMBERParserRuleCall_1_5_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getMinuteNUMBERParserRuleCall_1_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__SecondAssignment_1_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_1_6_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_1_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__MonthAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMonthNUMBERParserRuleCall_2_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getMonthNUMBERParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__DayAssignment_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getDayNUMBERParserRuleCall_2_2_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getDayNUMBERParserRuleCall_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__HourAssignment_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourNUMBERParserRuleCall_2_3_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getHourNUMBERParserRuleCall_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__MinuteAssignment_2_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteNUMBERParserRuleCall_2_4_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getMinuteNUMBERParserRuleCall_2_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__SecondAssignment_2_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_2_5_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_2_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__DayAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getDayNUMBERParserRuleCall_3_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getDayNUMBERParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__HourAssignment_3_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourNUMBERParserRuleCall_3_2_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getHourNUMBERParserRuleCall_3_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__MinuteAssignment_3_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteNUMBERParserRuleCall_3_3_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getMinuteNUMBERParserRuleCall_3_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__SecondAssignment_3_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_3_4_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_3_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__HourAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getHourNUMBERParserRuleCall_4_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getHourNUMBERParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__MinuteAssignment_4_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteNUMBERParserRuleCall_4_2_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getMinuteNUMBERParserRuleCall_4_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__SecondAssignment_4_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_4_3_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_4_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__MinuteAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getMinuteNUMBERParserRuleCall_5_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getMinuteNUMBERParserRuleCall_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__SecondAssignment_5_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_5_2_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_5_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__SecondAssignment_6_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_6_1_0_0()); }
	ruleNUMBER{ after(grammarAccess.getTimeLiteralAccess().getSecondNUMBERParserRuleCall_6_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


